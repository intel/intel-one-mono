<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="4.43">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name="A"/>
    <GlyphID id="2" name="B"/>
    <GlyphID id="3" name="C"/>
    <GlyphID id="4" name="D"/>
    <GlyphID id="5" name="E"/>
    <GlyphID id="6" name="F"/>
    <GlyphID id="7" name="G"/>
    <GlyphID id="8" name="H"/>
    <GlyphID id="9" name="I"/>
    <GlyphID id="10" name="J"/>
    <GlyphID id="11" name="K"/>
    <GlyphID id="12" name="L"/>
    <GlyphID id="13" name="M"/>
    <GlyphID id="14" name="N"/>
    <GlyphID id="15" name="O"/>
    <GlyphID id="16" name="P"/>
    <GlyphID id="17" name="Q"/>
    <GlyphID id="18" name="R"/>
    <GlyphID id="19" name="S"/>
    <GlyphID id="20" name="T"/>
    <GlyphID id="21" name="U"/>
    <GlyphID id="22" name="V"/>
    <GlyphID id="23" name="W"/>
    <GlyphID id="24" name="X"/>
    <GlyphID id="25" name="Y"/>
    <GlyphID id="26" name="Z"/>
    <GlyphID id="27" name="a"/>
    <GlyphID id="28" name="b"/>
    <GlyphID id="29" name="c"/>
    <GlyphID id="30" name="d"/>
    <GlyphID id="31" name="e"/>
    <GlyphID id="32" name="f"/>
    <GlyphID id="33" name="g"/>
    <GlyphID id="34" name="h"/>
    <GlyphID id="35" name="i"/>
    <GlyphID id="36" name="j"/>
    <GlyphID id="37" name="k"/>
    <GlyphID id="38" name="l"/>
    <GlyphID id="39" name="m"/>
    <GlyphID id="40" name="n"/>
    <GlyphID id="41" name="o"/>
    <GlyphID id="42" name="p"/>
    <GlyphID id="43" name="q"/>
    <GlyphID id="44" name="r"/>
    <GlyphID id="45" name="s"/>
    <GlyphID id="46" name="t"/>
    <GlyphID id="47" name="u"/>
    <GlyphID id="48" name="v"/>
    <GlyphID id="49" name="w"/>
    <GlyphID id="50" name="x"/>
    <GlyphID id="51" name="y"/>
    <GlyphID id="52" name="z"/>
    <GlyphID id="53" name="period"/>
    <GlyphID id="54" name="comma"/>
    <GlyphID id="55" name="colon"/>
    <GlyphID id="56" name="semicolon"/>
    <GlyphID id="57" name="question"/>
    <GlyphID id="58" name="exclam"/>
    <GlyphID id="59" name="questiondown"/>
    <GlyphID id="60" name="exclamdown"/>
    <GlyphID id="61" name="ellipsis"/>
    <GlyphID id="62" name="uni2025"/>
    <GlyphID id="63" name="quotedblleft"/>
    <GlyphID id="64" name="quotedblright"/>
    <GlyphID id="65" name="quotedblbase"/>
    <GlyphID id="66" name="quoteleft"/>
    <GlyphID id="67" name="quoteright"/>
    <GlyphID id="68" name="quotesinglbase"/>
    <GlyphID id="69" name="uni00AB"/>
    <GlyphID id="70" name="uni00BB"/>
    <GlyphID id="71" name="guilsinglleft"/>
    <GlyphID id="72" name="guilsinglright"/>
    <GlyphID id="73" name="parenleft"/>
    <GlyphID id="74" name="parenright"/>
    <GlyphID id="75" name="bracketleft"/>
    <GlyphID id="76" name="bracketright"/>
    <GlyphID id="77" name="braceleft"/>
    <GlyphID id="78" name="braceright"/>
    <GlyphID id="79" name="slash"/>
    <GlyphID id="80" name="backslash"/>
    <GlyphID id="81" name="bar"/>
    <GlyphID id="82" name="hyphen"/>
    <GlyphID id="83" name="endash"/>
    <GlyphID id="84" name="emdash"/>
    <GlyphID id="85" name="periodcentered"/>
    <GlyphID id="86" name="bullet"/>
    <GlyphID id="87" name="underscore"/>
    <GlyphID id="88" name="ampersand"/>
    <GlyphID id="89" name="at"/>
    <GlyphID id="90" name="uni2117"/>
    <GlyphID id="91" name="copyright"/>
    <GlyphID id="92" name="registered"/>
    <GlyphID id="93" name="uni2120"/>
    <GlyphID id="94" name="trademark"/>
    <GlyphID id="95" name="asterisk"/>
    <GlyphID id="96" name="dagger"/>
    <GlyphID id="97" name="daggerdbl"/>
    <GlyphID id="98" name="section"/>
    <GlyphID id="99" name="paragraph"/>
    <GlyphID id="100" name="zero"/>
    <GlyphID id="101" name="one"/>
    <GlyphID id="102" name="two"/>
    <GlyphID id="103" name="three"/>
    <GlyphID id="104" name="four"/>
    <GlyphID id="105" name="five"/>
    <GlyphID id="106" name="six"/>
    <GlyphID id="107" name="seven"/>
    <GlyphID id="108" name="eight"/>
    <GlyphID id="109" name="nine"/>
    <GlyphID id="110" name="colon.fig"/>
    <GlyphID id="111" name="plus"/>
    <GlyphID id="112" name="divide"/>
    <GlyphID id="113" name="minus"/>
    <GlyphID id="114" name="equal"/>
    <GlyphID id="115" name="notequal"/>
    <GlyphID id="116" name="asciitilde"/>
    <GlyphID id="117" name="approxequal"/>
    <GlyphID id="118" name="multiply"/>
    <GlyphID id="119" name="less"/>
    <GlyphID id="120" name="greater"/>
    <GlyphID id="121" name="lessequal"/>
    <GlyphID id="122" name="greaterequal"/>
    <GlyphID id="123" name="plusminus"/>
    <GlyphID id="124" name="asciicircum"/>
    <GlyphID id="125" name="mu"/>
    <GlyphID id="126" name="numbersign"/>
    <GlyphID id="127" name="percent"/>
    <GlyphID id="128" name="quotedbl"/>
    <GlyphID id="129" name="quotesingle"/>
    <GlyphID id="130" name="ordfeminine"/>
    <GlyphID id="131" name="ordmasculine"/>
    <GlyphID id="132" name="degree"/>
    <GlyphID id="133" name="dollar"/>
    <GlyphID id="134" name="sterling"/>
    <GlyphID id="135" name="yen"/>
    <GlyphID id="136" name="Euro"/>
    <GlyphID id="137" name="uni20A6"/>
    <GlyphID id="138" name="uni20B1"/>
    <GlyphID id="139" name="uni20BA"/>
    <GlyphID id="140" name="uni20BD"/>
    <GlyphID id="141" name="uni20B9"/>
    <GlyphID id="142" name="uni0E3F"/>
    <GlyphID id="143" name="uni20A9"/>
    <GlyphID id="144" name="cent"/>
    <GlyphID id="145" name="dong"/>
    <GlyphID id="146" name="onehalf"/>
    <GlyphID id="147" name="onethird"/>
    <GlyphID id="148" name="twothirds"/>
    <GlyphID id="149" name="onequarter"/>
    <GlyphID id="150" name="threequarters"/>
    <GlyphID id="151" name="onefifth"/>
    <GlyphID id="152" name="twofifths"/>
    <GlyphID id="153" name="threefifths"/>
    <GlyphID id="154" name="fourfifths"/>
    <GlyphID id="155" name="onesixth"/>
    <GlyphID id="156" name="fivesixths"/>
    <GlyphID id="157" name="oneeighth"/>
    <GlyphID id="158" name="threeeighths"/>
    <GlyphID id="159" name="fiveeighths"/>
    <GlyphID id="160" name="seveneighths"/>
    <GlyphID id="161" name="zero.sup"/>
    <GlyphID id="162" name="one.sup"/>
    <GlyphID id="163" name="two.sup"/>
    <GlyphID id="164" name="three.sup"/>
    <GlyphID id="165" name="four.sup"/>
    <GlyphID id="166" name="five.sup"/>
    <GlyphID id="167" name="six.sup"/>
    <GlyphID id="168" name="seven.sup"/>
    <GlyphID id="169" name="eight.sup"/>
    <GlyphID id="170" name="nine.sup"/>
    <GlyphID id="171" name="zero.inf"/>
    <GlyphID id="172" name="one.inf"/>
    <GlyphID id="173" name="two.inf"/>
    <GlyphID id="174" name="three.inf"/>
    <GlyphID id="175" name="four.inf"/>
    <GlyphID id="176" name="five.inf"/>
    <GlyphID id="177" name="six.inf"/>
    <GlyphID id="178" name="seven.inf"/>
    <GlyphID id="179" name="eight.inf"/>
    <GlyphID id="180" name="nine.inf"/>
    <GlyphID id="181" name="uni02B9"/>
    <GlyphID id="182" name="uni02BA"/>
    <GlyphID id="183" name="uni02BB"/>
    <GlyphID id="184" name="uni02BC"/>
    <GlyphID id="185" name="uni02BF"/>
    <GlyphID id="186" name="uni02BE"/>
    <GlyphID id="187" name="uni02C8"/>
    <GlyphID id="188" name="uni02CC"/>
    <GlyphID id="189" name="acute"/>
    <GlyphID id="190" name="hungarumlaut"/>
    <GlyphID id="191" name="grave"/>
    <GlyphID id="192" name="circumflex"/>
    <GlyphID id="193" name="caron"/>
    <GlyphID id="194" name="breve"/>
    <GlyphID id="195" name="tilde"/>
    <GlyphID id="196" name="macron"/>
    <GlyphID id="197" name="dieresis"/>
    <GlyphID id="198" name="dotaccent"/>
    <GlyphID id="199" name="ring"/>
    <GlyphID id="200" name="uniA788"/>
    <GlyphID id="201" name="uni02CD"/>
    <GlyphID id="202" name="cedilla"/>
    <GlyphID id="203" name="ogonek"/>
    <GlyphID id="204" name="Aacute"/>
    <GlyphID id="205" name="Agrave"/>
    <GlyphID id="206" name="Acircumflex"/>
    <GlyphID id="207" name="uni1EAC"/>
    <GlyphID id="208" name="uni1EA4"/>
    <GlyphID id="209" name="uni1EA6"/>
    <GlyphID id="210" name="uni1EA8"/>
    <GlyphID id="211" name="uni1EAA"/>
    <GlyphID id="212" name="uni01CD"/>
    <GlyphID id="213" name="Abreve"/>
    <GlyphID id="214" name="uni1EB6"/>
    <GlyphID id="215" name="uni1EAE"/>
    <GlyphID id="216" name="uni1EB0"/>
    <GlyphID id="217" name="uni1EB2"/>
    <GlyphID id="218" name="uni1EB4"/>
    <GlyphID id="219" name="Atilde"/>
    <GlyphID id="220" name="Amacron"/>
    <GlyphID id="221" name="Adieresis"/>
    <GlyphID id="222" name="uni0226"/>
    <GlyphID id="223" name="Aring"/>
    <GlyphID id="224" name="uni1EA2"/>
    <GlyphID id="225" name="uni1EA0"/>
    <GlyphID id="226" name="Aogonek"/>
    <GlyphID id="227" name="AE"/>
    <GlyphID id="228" name="uni1E06"/>
    <GlyphID id="229" name="Cacute"/>
    <GlyphID id="230" name="Ccircumflex"/>
    <GlyphID id="231" name="Ccaron"/>
    <GlyphID id="232" name="Cdotaccent"/>
    <GlyphID id="233" name="Ccedilla"/>
    <GlyphID id="234" name="Dcaron"/>
    <GlyphID id="235" name="uni1E12"/>
    <GlyphID id="236" name="uni1E0E"/>
    <GlyphID id="237" name="uni1E0C"/>
    <GlyphID id="238" name="Dcroat"/>
    <GlyphID id="239" name="Eacute"/>
    <GlyphID id="240" name="Egrave"/>
    <GlyphID id="241" name="Ecircumflex"/>
    <GlyphID id="242" name="uni1EC6"/>
    <GlyphID id="243" name="uni1EBE"/>
    <GlyphID id="244" name="uni1EC0"/>
    <GlyphID id="245" name="uni1EC2"/>
    <GlyphID id="246" name="uni1EC4"/>
    <GlyphID id="247" name="Ecaron"/>
    <GlyphID id="248" name="Ebreve"/>
    <GlyphID id="249" name="uni1EBC"/>
    <GlyphID id="250" name="Emacron"/>
    <GlyphID id="251" name="Edieresis"/>
    <GlyphID id="252" name="Edotaccent"/>
    <GlyphID id="253" name="uni1EBA"/>
    <GlyphID id="254" name="uni1EB8"/>
    <GlyphID id="255" name="Eogonek"/>
    <GlyphID id="256" name="Gcircumflex"/>
    <GlyphID id="257" name="Gcaron"/>
    <GlyphID id="258" name="Gbreve"/>
    <GlyphID id="259" name="uni1E20"/>
    <GlyphID id="260" name="Gdotaccent"/>
    <GlyphID id="261" name="uni0122"/>
    <GlyphID id="262" name="Hcircumflex"/>
    <GlyphID id="263" name="uni1E2A"/>
    <GlyphID id="264" name="uni1E24"/>
    <GlyphID id="265" name="uni1E28"/>
    <GlyphID id="266" name="Hbar"/>
    <GlyphID id="267" name="Iacute"/>
    <GlyphID id="268" name="Igrave"/>
    <GlyphID id="269" name="Icircumflex"/>
    <GlyphID id="270" name="uni01CF"/>
    <GlyphID id="271" name="Ibreve"/>
    <GlyphID id="272" name="Itilde"/>
    <GlyphID id="273" name="Imacron"/>
    <GlyphID id="274" name="Idieresis"/>
    <GlyphID id="275" name="Idotaccent"/>
    <GlyphID id="276" name="uni1EC8"/>
    <GlyphID id="277" name="uni1ECA"/>
    <GlyphID id="278" name="Iogonek"/>
    <GlyphID id="279" name="Jcircumflex"/>
    <GlyphID id="280" name="uni1E34"/>
    <GlyphID id="281" name="uni0136"/>
    <GlyphID id="282" name="uni1E32"/>
    <GlyphID id="283" name="Lacute"/>
    <GlyphID id="284" name="Lcaron"/>
    <GlyphID id="285" name="uni013B"/>
    <GlyphID id="286" name="uni1E3C"/>
    <GlyphID id="287" name="uni1E3A"/>
    <GlyphID id="288" name="uni1E38"/>
    <GlyphID id="289" name="uni1E36"/>
    <GlyphID id="290" name="Ldot"/>
    <GlyphID id="291" name="Lslash"/>
    <GlyphID id="292" name="uni1E3E"/>
    <GlyphID id="293" name="uni1E40"/>
    <GlyphID id="294" name="uni1E42"/>
    <GlyphID id="295" name="Nacute"/>
    <GlyphID id="296" name="uni01F8"/>
    <GlyphID id="297" name="Ncaron"/>
    <GlyphID id="298" name="Ntilde"/>
    <GlyphID id="299" name="uni1E44"/>
    <GlyphID id="300" name="uni1E4A"/>
    <GlyphID id="301" name="uni0145"/>
    <GlyphID id="302" name="uni1E46"/>
    <GlyphID id="303" name="uni1E48"/>
    <GlyphID id="304" name="Eng"/>
    <GlyphID id="305" name="Oacute"/>
    <GlyphID id="306" name="Ohungarumlaut"/>
    <GlyphID id="307" name="Ograve"/>
    <GlyphID id="308" name="Ocircumflex"/>
    <GlyphID id="309" name="uni1ED8"/>
    <GlyphID id="310" name="uni1ED0"/>
    <GlyphID id="311" name="uni1ED2"/>
    <GlyphID id="312" name="uni1ED4"/>
    <GlyphID id="313" name="uni1ED6"/>
    <GlyphID id="314" name="uni01D1"/>
    <GlyphID id="315" name="Obreve"/>
    <GlyphID id="316" name="Otilde"/>
    <GlyphID id="317" name="Omacron"/>
    <GlyphID id="318" name="Odieresis"/>
    <GlyphID id="319" name="uni022E"/>
    <GlyphID id="320" name="uni1ECE"/>
    <GlyphID id="321" name="uni1ECC"/>
    <GlyphID id="322" name="uni01EA"/>
    <GlyphID id="323" name="Oslash"/>
    <GlyphID id="324" name="OE"/>
    <GlyphID id="325" name="Ohorn"/>
    <GlyphID id="326" name="uni1EDA"/>
    <GlyphID id="327" name="uni1EDC"/>
    <GlyphID id="328" name="uni1EE0"/>
    <GlyphID id="329" name="uni1EDE"/>
    <GlyphID id="330" name="uni1EE2"/>
    <GlyphID id="331" name="Racute"/>
    <GlyphID id="332" name="Rcaron"/>
    <GlyphID id="333" name="uni1E58"/>
    <GlyphID id="334" name="uni1E5C"/>
    <GlyphID id="335" name="uni0156"/>
    <GlyphID id="336" name="uni1E5A"/>
    <GlyphID id="337" name="uni1E5E"/>
    <GlyphID id="338" name="Sacute"/>
    <GlyphID id="339" name="Scircumflex"/>
    <GlyphID id="340" name="Scaron"/>
    <GlyphID id="341" name="uni0218"/>
    <GlyphID id="342" name="uni1E62"/>
    <GlyphID id="343" name="uni015E"/>
    <GlyphID id="344" name="uni1E9E"/>
    <GlyphID id="345" name="Tcaron"/>
    <GlyphID id="346" name="uni1E70"/>
    <GlyphID id="347" name="uni021A"/>
    <GlyphID id="348" name="uni1E6C"/>
    <GlyphID id="349" name="uni1E6E"/>
    <GlyphID id="350" name="uni0162"/>
    <GlyphID id="351" name="Tbar"/>
    <GlyphID id="352" name="Uacute"/>
    <GlyphID id="353" name="Uhungarumlaut"/>
    <GlyphID id="354" name="Ugrave"/>
    <GlyphID id="355" name="Ucircumflex"/>
    <GlyphID id="356" name="uni01D3"/>
    <GlyphID id="357" name="Ubreve"/>
    <GlyphID id="358" name="Utilde"/>
    <GlyphID id="359" name="Umacron"/>
    <GlyphID id="360" name="Udieresis"/>
    <GlyphID id="361" name="uni01D7"/>
    <GlyphID id="362" name="uni01DB"/>
    <GlyphID id="363" name="uni01D9"/>
    <GlyphID id="364" name="uni01D5"/>
    <GlyphID id="365" name="Uring"/>
    <GlyphID id="366" name="uni1EE6"/>
    <GlyphID id="367" name="uni1EE4"/>
    <GlyphID id="368" name="Uogonek"/>
    <GlyphID id="369" name="Uhorn"/>
    <GlyphID id="370" name="uni1EE8"/>
    <GlyphID id="371" name="uni1EEA"/>
    <GlyphID id="372" name="uni1EEE"/>
    <GlyphID id="373" name="uni1EEC"/>
    <GlyphID id="374" name="uni1EF0"/>
    <GlyphID id="375" name="uni1E7E"/>
    <GlyphID id="376" name="Wacute"/>
    <GlyphID id="377" name="Wgrave"/>
    <GlyphID id="378" name="Wcircumflex"/>
    <GlyphID id="379" name="Wdieresis"/>
    <GlyphID id="380" name="uni1E8C"/>
    <GlyphID id="381" name="Yacute"/>
    <GlyphID id="382" name="Ygrave"/>
    <GlyphID id="383" name="Ycircumflex"/>
    <GlyphID id="384" name="uni1EF8"/>
    <GlyphID id="385" name="uni0232"/>
    <GlyphID id="386" name="Ydieresis"/>
    <GlyphID id="387" name="uni1E8E"/>
    <GlyphID id="388" name="uni1EF6"/>
    <GlyphID id="389" name="uni1EF4"/>
    <GlyphID id="390" name="Zacute"/>
    <GlyphID id="391" name="uni1E90"/>
    <GlyphID id="392" name="Zcaron"/>
    <GlyphID id="393" name="Zdotaccent"/>
    <GlyphID id="394" name="uni1E92"/>
    <GlyphID id="395" name="uni1E94"/>
    <GlyphID id="396" name="Eth"/>
    <GlyphID id="397" name="Thorn"/>
    <GlyphID id="398" name="uni018F"/>
    <GlyphID id="399" name="aacute"/>
    <GlyphID id="400" name="agrave"/>
    <GlyphID id="401" name="acircumflex"/>
    <GlyphID id="402" name="uni1EAD"/>
    <GlyphID id="403" name="uni1EA5"/>
    <GlyphID id="404" name="uni1EA7"/>
    <GlyphID id="405" name="uni1EA9"/>
    <GlyphID id="406" name="uni1EAB"/>
    <GlyphID id="407" name="uni01CE"/>
    <GlyphID id="408" name="abreve"/>
    <GlyphID id="409" name="uni1EB7"/>
    <GlyphID id="410" name="uni1EAF"/>
    <GlyphID id="411" name="uni1EB1"/>
    <GlyphID id="412" name="uni1EB3"/>
    <GlyphID id="413" name="uni1EB5"/>
    <GlyphID id="414" name="atilde"/>
    <GlyphID id="415" name="amacron"/>
    <GlyphID id="416" name="adieresis"/>
    <GlyphID id="417" name="uni0227"/>
    <GlyphID id="418" name="aring"/>
    <GlyphID id="419" name="uni1EA3"/>
    <GlyphID id="420" name="uni1EA1"/>
    <GlyphID id="421" name="aogonek"/>
    <GlyphID id="422" name="ae"/>
    <GlyphID id="423" name="uni1E07"/>
    <GlyphID id="424" name="cacute"/>
    <GlyphID id="425" name="ccircumflex"/>
    <GlyphID id="426" name="ccaron"/>
    <GlyphID id="427" name="cdotaccent"/>
    <GlyphID id="428" name="ccedilla"/>
    <GlyphID id="429" name="dcaron"/>
    <GlyphID id="430" name="uni1E13"/>
    <GlyphID id="431" name="uni1E0F"/>
    <GlyphID id="432" name="uni1E0D"/>
    <GlyphID id="433" name="dcroat"/>
    <GlyphID id="434" name="eacute"/>
    <GlyphID id="435" name="egrave"/>
    <GlyphID id="436" name="ecircumflex"/>
    <GlyphID id="437" name="uni1EC7"/>
    <GlyphID id="438" name="uni1EBF"/>
    <GlyphID id="439" name="uni1EC1"/>
    <GlyphID id="440" name="uni1EC3"/>
    <GlyphID id="441" name="uni1EC5"/>
    <GlyphID id="442" name="ecaron"/>
    <GlyphID id="443" name="ebreve"/>
    <GlyphID id="444" name="uni1EBD"/>
    <GlyphID id="445" name="emacron"/>
    <GlyphID id="446" name="edieresis"/>
    <GlyphID id="447" name="edotaccent"/>
    <GlyphID id="448" name="uni1EBB"/>
    <GlyphID id="449" name="uni1EB9"/>
    <GlyphID id="450" name="eogonek"/>
    <GlyphID id="451" name="gcircumflex"/>
    <GlyphID id="452" name="gcaron"/>
    <GlyphID id="453" name="gbreve"/>
    <GlyphID id="454" name="uni1E21"/>
    <GlyphID id="455" name="gdotaccent"/>
    <GlyphID id="456" name="uni0123"/>
    <GlyphID id="457" name="hcircumflex"/>
    <GlyphID id="458" name="uni1E2B"/>
    <GlyphID id="459" name="uni1E96"/>
    <GlyphID id="460" name="uni1E25"/>
    <GlyphID id="461" name="uni1E29"/>
    <GlyphID id="462" name="hbar"/>
    <GlyphID id="463" name="dotlessi"/>
    <GlyphID id="464" name="iacute"/>
    <GlyphID id="465" name="igrave"/>
    <GlyphID id="466" name="icircumflex"/>
    <GlyphID id="467" name="uni01D0"/>
    <GlyphID id="468" name="ibreve"/>
    <GlyphID id="469" name="itilde"/>
    <GlyphID id="470" name="imacron"/>
    <GlyphID id="471" name="idieresis"/>
    <GlyphID id="472" name="i.dot"/>
    <GlyphID id="473" name="uni1EC9"/>
    <GlyphID id="474" name="uni1ECB"/>
    <GlyphID id="475" name="iogonek"/>
    <GlyphID id="476" name="uni0237"/>
    <GlyphID id="477" name="jcircumflex"/>
    <GlyphID id="478" name="uni01F0"/>
    <GlyphID id="479" name="uni1E35"/>
    <GlyphID id="480" name="uni0137"/>
    <GlyphID id="481" name="uni1E33"/>
    <GlyphID id="482" name="lacute"/>
    <GlyphID id="483" name="lcaron"/>
    <GlyphID id="484" name="uni013C"/>
    <GlyphID id="485" name="uni1E3D"/>
    <GlyphID id="486" name="uni1E3B"/>
    <GlyphID id="487" name="uni1E39"/>
    <GlyphID id="488" name="uni1E37"/>
    <GlyphID id="489" name="ldot"/>
    <GlyphID id="490" name="lslash"/>
    <GlyphID id="491" name="uni1E3F"/>
    <GlyphID id="492" name="uni1E41"/>
    <GlyphID id="493" name="uni1E43"/>
    <GlyphID id="494" name="nacute"/>
    <GlyphID id="495" name="uni01F9"/>
    <GlyphID id="496" name="ncaron"/>
    <GlyphID id="497" name="ntilde"/>
    <GlyphID id="498" name="uni1E45"/>
    <GlyphID id="499" name="uni1E4B"/>
    <GlyphID id="500" name="uni0146"/>
    <GlyphID id="501" name="uni1E47"/>
    <GlyphID id="502" name="uni1E49"/>
    <GlyphID id="503" name="eng"/>
    <GlyphID id="504" name="oacute"/>
    <GlyphID id="505" name="ohungarumlaut"/>
    <GlyphID id="506" name="ograve"/>
    <GlyphID id="507" name="ocircumflex"/>
    <GlyphID id="508" name="uni1ED9"/>
    <GlyphID id="509" name="uni1ED1"/>
    <GlyphID id="510" name="uni1ED3"/>
    <GlyphID id="511" name="uni1ED5"/>
    <GlyphID id="512" name="uni1ED7"/>
    <GlyphID id="513" name="uni01D2"/>
    <GlyphID id="514" name="obreve"/>
    <GlyphID id="515" name="otilde"/>
    <GlyphID id="516" name="omacron"/>
    <GlyphID id="517" name="odieresis"/>
    <GlyphID id="518" name="uni022F"/>
    <GlyphID id="519" name="uni1ECF"/>
    <GlyphID id="520" name="uni1ECD"/>
    <GlyphID id="521" name="uni01EB"/>
    <GlyphID id="522" name="oslash"/>
    <GlyphID id="523" name="oe"/>
    <GlyphID id="524" name="ohorn"/>
    <GlyphID id="525" name="uni1EDB"/>
    <GlyphID id="526" name="uni1EDD"/>
    <GlyphID id="527" name="uni1EE1"/>
    <GlyphID id="528" name="uni1EDF"/>
    <GlyphID id="529" name="uni1EE3"/>
    <GlyphID id="530" name="racute"/>
    <GlyphID id="531" name="rcaron"/>
    <GlyphID id="532" name="uni1E59"/>
    <GlyphID id="533" name="uni1E5D"/>
    <GlyphID id="534" name="uni0157"/>
    <GlyphID id="535" name="uni1E5B"/>
    <GlyphID id="536" name="uni1E5F"/>
    <GlyphID id="537" name="sacute"/>
    <GlyphID id="538" name="scircumflex"/>
    <GlyphID id="539" name="scaron"/>
    <GlyphID id="540" name="uni0219"/>
    <GlyphID id="541" name="uni1E63"/>
    <GlyphID id="542" name="uni015F"/>
    <GlyphID id="543" name="germandbls"/>
    <GlyphID id="544" name="tcaron"/>
    <GlyphID id="545" name="uni1E71"/>
    <GlyphID id="546" name="uni021B"/>
    <GlyphID id="547" name="uni1E6D"/>
    <GlyphID id="548" name="uni1E6F"/>
    <GlyphID id="549" name="uni0163"/>
    <GlyphID id="550" name="tbar"/>
    <GlyphID id="551" name="uacute"/>
    <GlyphID id="552" name="uhungarumlaut"/>
    <GlyphID id="553" name="ugrave"/>
    <GlyphID id="554" name="ucircumflex"/>
    <GlyphID id="555" name="uni01D4"/>
    <GlyphID id="556" name="ubreve"/>
    <GlyphID id="557" name="utilde"/>
    <GlyphID id="558" name="umacron"/>
    <GlyphID id="559" name="udieresis"/>
    <GlyphID id="560" name="uni01D8"/>
    <GlyphID id="561" name="uni01DC"/>
    <GlyphID id="562" name="uni01DA"/>
    <GlyphID id="563" name="uni01D6"/>
    <GlyphID id="564" name="uring"/>
    <GlyphID id="565" name="uni1EE7"/>
    <GlyphID id="566" name="uni1EE5"/>
    <GlyphID id="567" name="uogonek"/>
    <GlyphID id="568" name="uhorn"/>
    <GlyphID id="569" name="uni1EE9"/>
    <GlyphID id="570" name="uni1EEB"/>
    <GlyphID id="571" name="uni1EEF"/>
    <GlyphID id="572" name="uni1EED"/>
    <GlyphID id="573" name="uni1EF1"/>
    <GlyphID id="574" name="uni1E7F"/>
    <GlyphID id="575" name="wacute"/>
    <GlyphID id="576" name="wgrave"/>
    <GlyphID id="577" name="wcircumflex"/>
    <GlyphID id="578" name="wdieresis"/>
    <GlyphID id="579" name="uni1E8D"/>
    <GlyphID id="580" name="yacute"/>
    <GlyphID id="581" name="ygrave"/>
    <GlyphID id="582" name="ycircumflex"/>
    <GlyphID id="583" name="uni1EF9"/>
    <GlyphID id="584" name="uni0233"/>
    <GlyphID id="585" name="ydieresis"/>
    <GlyphID id="586" name="uni1E8F"/>
    <GlyphID id="587" name="uni1EF7"/>
    <GlyphID id="588" name="uni1EF5"/>
    <GlyphID id="589" name="zacute"/>
    <GlyphID id="590" name="uni1E91"/>
    <GlyphID id="591" name="zcaron"/>
    <GlyphID id="592" name="zdotaccent"/>
    <GlyphID id="593" name="uni1E93"/>
    <GlyphID id="594" name="uni1E95"/>
    <GlyphID id="595" name="eth"/>
    <GlyphID id="596" name="thorn"/>
    <GlyphID id="597" name="uni0259"/>
    <GlyphID id="598" name="space"/>
    <GlyphID id="599" name="uni00A0"/>
    <GlyphID id="600" name="zero.num"/>
    <GlyphID id="601" name="one.num"/>
    <GlyphID id="602" name="two.num"/>
    <GlyphID id="603" name="three.num"/>
    <GlyphID id="604" name="four.num"/>
    <GlyphID id="605" name="five.num"/>
    <GlyphID id="606" name="six.num"/>
    <GlyphID id="607" name="seven.num"/>
    <GlyphID id="608" name="eight.num"/>
    <GlyphID id="609" name="nine.num"/>
    <GlyphID id="610" name="fraction"/>
    <GlyphID id="611" name="fracbar"/>
    <GlyphID id="612" name="zero.den"/>
    <GlyphID id="613" name="one.den"/>
    <GlyphID id="614" name="two.den"/>
    <GlyphID id="615" name="three.den"/>
    <GlyphID id="616" name="four.den"/>
    <GlyphID id="617" name="five.den"/>
    <GlyphID id="618" name="six.den"/>
    <GlyphID id="619" name="seven.den"/>
    <GlyphID id="620" name="eight.den"/>
    <GlyphID id="621" name="nine.den"/>
    <GlyphID id="622" name="uni2011"/>
    <GlyphID id="623" name="uni2015"/>
    <GlyphID id="624" name="middotcat"/>
    <GlyphID id="625" name="middotcat.cap"/>
    <GlyphID id="626" name="uni0301"/>
    <GlyphID id="627" name="uni030B"/>
    <GlyphID id="628" name="uni0300"/>
    <GlyphID id="629" name="uni0315"/>
    <GlyphID id="630" name="uni0302"/>
    <GlyphID id="631" name="uni030C"/>
    <GlyphID id="632" name="uni0306"/>
    <GlyphID id="633" name="uni0303"/>
    <GlyphID id="634" name="uni0304"/>
    <GlyphID id="635" name="uni0308"/>
    <GlyphID id="636" name="uni0307"/>
    <GlyphID id="637" name="uni030A"/>
    <GlyphID id="638" name="uni0312"/>
    <GlyphID id="639" name="uni0309"/>
    <GlyphID id="640" name="uni032D"/>
    <GlyphID id="641" name="uni032E"/>
    <GlyphID id="642" name="uni0331"/>
    <GlyphID id="643" name="uni0324"/>
    <GlyphID id="644" name="uni0323"/>
    <GlyphID id="645" name="uni0326"/>
    <GlyphID id="646" name="uni0327"/>
    <GlyphID id="647" name="uni0328"/>
    <GlyphID id="648" name="uni00A80301"/>
    <GlyphID id="649" name="uni00A80300"/>
    <GlyphID id="650" name="uni00A8030C"/>
    <GlyphID id="651" name="uni00A80304"/>
    <GlyphID id="652" name="uni02D80301"/>
    <GlyphID id="653" name="uni02D80300"/>
    <GlyphID id="654" name="uni02D80309"/>
    <GlyphID id="655" name="uni02D80303"/>
    <GlyphID id="656" name="uni02C60301"/>
    <GlyphID id="657" name="uni02C60300"/>
    <GlyphID id="658" name="uni02C60309"/>
    <GlyphID id="659" name="uni02C60303"/>
    <GlyphID id="660" name="uni0301.cap"/>
    <GlyphID id="661" name="uni030B.cap"/>
    <GlyphID id="662" name="uni0300.cap"/>
    <GlyphID id="663" name="uni0302.cap"/>
    <GlyphID id="664" name="uni030C.cap"/>
    <GlyphID id="665" name="uni0306.cap"/>
    <GlyphID id="666" name="uni0303.cap"/>
    <GlyphID id="667" name="uni0304.cap"/>
    <GlyphID id="668" name="uni0308.cap"/>
    <GlyphID id="669" name="uni0307.cap"/>
    <GlyphID id="670" name="uni030A.cap"/>
    <GlyphID id="671" name="uni0309.cap"/>
    <GlyphID id="672" name="uni00A80301.cap"/>
    <GlyphID id="673" name="uni00A80300.cap"/>
    <GlyphID id="674" name="uni00A8030C.cap"/>
    <GlyphID id="675" name="uni00A80304.cap"/>
    <GlyphID id="676" name="uni02D80301.cap"/>
    <GlyphID id="677" name="uni02D80300.cap"/>
    <GlyphID id="678" name="uni02D80309.cap"/>
    <GlyphID id="679" name="uni02D80303.cap"/>
    <GlyphID id="680" name="uni02C60301.cap"/>
    <GlyphID id="681" name="uni02C60300.cap"/>
    <GlyphID id="682" name="uni02C60309.cap"/>
    <GlyphID id="683" name="uni02C60303.cap"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="1.0"/>
    <checkSumAdjustment value="0x10bed738"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00001011"/>
    <unitsPerEm value="1000"/>
    <created value="Tue Nov 29 23:30:25 2022"/>
    <modified value="Wed Oct 25 10:36:23 2023"/>
    <xMin value="-327"/>
    <yMin value="-295"/>
    <xMax value="849"/>
    <yMax value="1084"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="6"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="775"/>
    <descent value="-225"/>
    <lineGap value="200"/>
    <advanceWidthMax value="614"/>
    <minLeftSideBearing value="-327"/>
    <minRightSideBearing value="-498"/>
    <xMaxExtent value="849"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="627"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="684"/>
    <maxPoints value="80"/>
    <maxContours value="6"/>
    <maxCompositePoints value="100"/>
    <maxCompositeContours value="5"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="16"/>
    <maxStorage value="47"/>
    <maxFunctionDefs value="154"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="940"/>
    <maxSizeOfInstructions value="3971"/>
    <maxComponentElements value="3"/>
    <maxComponentDepth value="1"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="3"/>
    <xAvgCharWidth value="614"/>
    <usWeightClass value="300"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000100"/>
    <ySubscriptXSize value="650"/>
    <ySubscriptYSize value="600"/>
    <ySubscriptXOffset value="-22"/>
    <ySubscriptYOffset value="75"/>
    <ySuperscriptXSize value="650"/>
    <ySuperscriptYSize value="600"/>
    <ySuperscriptXOffset value="100"/>
    <ySuperscriptYOffset value="350"/>
    <yStrikeoutSize value="0"/>
    <yStrikeoutPosition value="276"/>
    <sFamilyClass value="0"/>
    <panose>
      <bFamilyType value="0"/>
      <bSerifStyle value="0"/>
      <bWeight value="0"/>
      <bProportion value="0"/>
      <bContrast value="0"/>
      <bStrokeVariation value="0"/>
      <bArmStyle value="0"/>
      <bLetterForm value="0"/>
      <bMidline value="0"/>
      <bXHeight value="0"/>
    </panose>
    <ulUnicodeRange1 value="00100000 00000000 00000000 00000111"/>
    <ulUnicodeRange2 value="00000000 00000000 00000000 00000001"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="FRJN"/>
    <fsSelection value="00000000 00000000"/>
    <usFirstCharIndex value="32"/>
    <usLastCharIndex value="42888"/>
    <sTypoAscender value="775"/>
    <sTypoDescender value="-225"/>
    <sTypoLineGap value="200"/>
    <usWinAscent value="1084"/>
    <usWinDescent value="295"/>
    <ulCodePageRange1 value="00000000 00000000 00000001 10010011"/>
    <ulCodePageRange2 value="00000000 00000000 00000000 00000000"/>
    <sxHeight value="460"/>
    <sCapHeight value="655"/>
    <usDefaultChar value="0"/>
    <usBreakChar value="32"/>
    <usMaxContext value="0"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="614" lsb="57"/>
    <mtx name="A" width="614" lsb="-20"/>
    <mtx name="AE" width="614" lsb="-75"/>
    <mtx name="Aacute" width="614" lsb="-20"/>
    <mtx name="Abreve" width="614" lsb="-20"/>
    <mtx name="Acircumflex" width="614" lsb="-20"/>
    <mtx name="Adieresis" width="614" lsb="-20"/>
    <mtx name="Agrave" width="614" lsb="-20"/>
    <mtx name="Amacron" width="614" lsb="-20"/>
    <mtx name="Aogonek" width="614" lsb="-20"/>
    <mtx name="Aring" width="614" lsb="-20"/>
    <mtx name="Atilde" width="614" lsb="-20"/>
    <mtx name="B" width="614" lsb="37"/>
    <mtx name="C" width="614" lsb="69"/>
    <mtx name="Cacute" width="614" lsb="69"/>
    <mtx name="Ccaron" width="614" lsb="69"/>
    <mtx name="Ccedilla" width="614" lsb="69"/>
    <mtx name="Ccircumflex" width="614" lsb="69"/>
    <mtx name="Cdotaccent" width="614" lsb="69"/>
    <mtx name="D" width="614" lsb="34"/>
    <mtx name="Dcaron" width="614" lsb="34"/>
    <mtx name="Dcroat" width="614" lsb="54"/>
    <mtx name="E" width="614" lsb="37"/>
    <mtx name="Eacute" width="614" lsb="37"/>
    <mtx name="Ebreve" width="614" lsb="37"/>
    <mtx name="Ecaron" width="614" lsb="37"/>
    <mtx name="Ecircumflex" width="614" lsb="37"/>
    <mtx name="Edieresis" width="614" lsb="37"/>
    <mtx name="Edotaccent" width="614" lsb="37"/>
    <mtx name="Egrave" width="614" lsb="37"/>
    <mtx name="Emacron" width="614" lsb="37"/>
    <mtx name="Eng" width="614" lsb="31"/>
    <mtx name="Eogonek" width="614" lsb="37"/>
    <mtx name="Eth" width="614" lsb="54"/>
    <mtx name="Euro" width="614" lsb="37"/>
    <mtx name="F" width="614" lsb="37"/>
    <mtx name="G" width="614" lsb="61"/>
    <mtx name="Gbreve" width="614" lsb="61"/>
    <mtx name="Gcaron" width="614" lsb="61"/>
    <mtx name="Gcircumflex" width="614" lsb="61"/>
    <mtx name="Gdotaccent" width="614" lsb="61"/>
    <mtx name="H" width="614" lsb="34"/>
    <mtx name="Hbar" width="614" lsb="54"/>
    <mtx name="Hcircumflex" width="614" lsb="34"/>
    <mtx name="I" width="614" lsb="73"/>
    <mtx name="Iacute" width="614" lsb="73"/>
    <mtx name="Ibreve" width="614" lsb="73"/>
    <mtx name="Icircumflex" width="614" lsb="73"/>
    <mtx name="Idieresis" width="614" lsb="73"/>
    <mtx name="Idotaccent" width="614" lsb="73"/>
    <mtx name="Igrave" width="614" lsb="73"/>
    <mtx name="Imacron" width="614" lsb="73"/>
    <mtx name="Iogonek" width="614" lsb="73"/>
    <mtx name="Itilde" width="614" lsb="73"/>
    <mtx name="J" width="614" lsb="36"/>
    <mtx name="Jcircumflex" width="614" lsb="36"/>
    <mtx name="K" width="614" lsb="37"/>
    <mtx name="L" width="614" lsb="37"/>
    <mtx name="Lacute" width="614" lsb="37"/>
    <mtx name="Lcaron" width="614" lsb="37"/>
    <mtx name="Ldot" width="614" lsb="37"/>
    <mtx name="Lslash" width="614" lsb="37"/>
    <mtx name="M" width="614" lsb="1"/>
    <mtx name="N" width="614" lsb="31"/>
    <mtx name="Nacute" width="614" lsb="31"/>
    <mtx name="Ncaron" width="614" lsb="31"/>
    <mtx name="Ntilde" width="614" lsb="31"/>
    <mtx name="O" width="614" lsb="61"/>
    <mtx name="OE" width="614" lsb="29"/>
    <mtx name="Oacute" width="614" lsb="61"/>
    <mtx name="Obreve" width="614" lsb="61"/>
    <mtx name="Ocircumflex" width="614" lsb="61"/>
    <mtx name="Odieresis" width="614" lsb="61"/>
    <mtx name="Ograve" width="614" lsb="61"/>
    <mtx name="Ohorn" width="614" lsb="61"/>
    <mtx name="Ohungarumlaut" width="614" lsb="61"/>
    <mtx name="Omacron" width="614" lsb="61"/>
    <mtx name="Oslash" width="614" lsb="-56"/>
    <mtx name="Otilde" width="614" lsb="61"/>
    <mtx name="P" width="614" lsb="37"/>
    <mtx name="Q" width="614" lsb="61"/>
    <mtx name="R" width="614" lsb="37"/>
    <mtx name="Racute" width="614" lsb="37"/>
    <mtx name="Rcaron" width="614" lsb="37"/>
    <mtx name="S" width="614" lsb="33"/>
    <mtx name="Sacute" width="614" lsb="33"/>
    <mtx name="Scaron" width="614" lsb="33"/>
    <mtx name="Scircumflex" width="614" lsb="33"/>
    <mtx name="T" width="614" lsb="160"/>
    <mtx name="Tbar" width="614" lsb="145"/>
    <mtx name="Tcaron" width="614" lsb="160"/>
    <mtx name="Thorn" width="614" lsb="37"/>
    <mtx name="U" width="614" lsb="74"/>
    <mtx name="Uacute" width="614" lsb="74"/>
    <mtx name="Ubreve" width="614" lsb="74"/>
    <mtx name="Ucircumflex" width="614" lsb="74"/>
    <mtx name="Udieresis" width="614" lsb="74"/>
    <mtx name="Ugrave" width="614" lsb="74"/>
    <mtx name="Uhorn" width="614" lsb="74"/>
    <mtx name="Uhungarumlaut" width="614" lsb="74"/>
    <mtx name="Umacron" width="614" lsb="74"/>
    <mtx name="Uogonek" width="614" lsb="74"/>
    <mtx name="Uring" width="614" lsb="74"/>
    <mtx name="Utilde" width="614" lsb="74"/>
    <mtx name="V" width="614" lsb="168"/>
    <mtx name="W" width="614" lsb="77"/>
    <mtx name="Wacute" width="614" lsb="77"/>
    <mtx name="Wcircumflex" width="614" lsb="77"/>
    <mtx name="Wdieresis" width="614" lsb="77"/>
    <mtx name="Wgrave" width="614" lsb="77"/>
    <mtx name="X" width="614" lsb="-8"/>
    <mtx name="Y" width="614" lsb="175"/>
    <mtx name="Yacute" width="614" lsb="175"/>
    <mtx name="Ycircumflex" width="614" lsb="175"/>
    <mtx name="Ydieresis" width="614" lsb="175"/>
    <mtx name="Ygrave" width="614" lsb="175"/>
    <mtx name="Z" width="614" lsb="16"/>
    <mtx name="Zacute" width="614" lsb="16"/>
    <mtx name="Zcaron" width="614" lsb="16"/>
    <mtx name="Zdotaccent" width="614" lsb="16"/>
    <mtx name="a" width="614" lsb="39"/>
    <mtx name="aacute" width="614" lsb="39"/>
    <mtx name="abreve" width="614" lsb="39"/>
    <mtx name="acircumflex" width="614" lsb="39"/>
    <mtx name="acute" width="614" lsb="317"/>
    <mtx name="adieresis" width="614" lsb="39"/>
    <mtx name="ae" width="614" lsb="-1"/>
    <mtx name="agrave" width="614" lsb="39"/>
    <mtx name="amacron" width="614" lsb="39"/>
    <mtx name="ampersand" width="614" lsb="31"/>
    <mtx name="aogonek" width="614" lsb="39"/>
    <mtx name="approxequal" width="614" lsb="28"/>
    <mtx name="aring" width="614" lsb="39"/>
    <mtx name="asciicircum" width="614" lsb="70"/>
    <mtx name="asciitilde" width="614" lsb="55"/>
    <mtx name="asterisk" width="614" lsb="105"/>
    <mtx name="at" width="614" lsb="49"/>
    <mtx name="atilde" width="614" lsb="39"/>
    <mtx name="b" width="614" lsb="44"/>
    <mtx name="backslash" width="614" lsb="196"/>
    <mtx name="bar" width="614" lsb="183"/>
    <mtx name="braceleft" width="614" lsb="99"/>
    <mtx name="braceright" width="614" lsb="-20"/>
    <mtx name="bracketleft" width="614" lsb="102"/>
    <mtx name="bracketright" width="614" lsb="-3"/>
    <mtx name="breve" width="614" lsb="272"/>
    <mtx name="bullet" width="614" lsb="208"/>
    <mtx name="c" width="614" lsb="64"/>
    <mtx name="cacute" width="614" lsb="64"/>
    <mtx name="caron" width="614" lsb="265"/>
    <mtx name="ccaron" width="614" lsb="64"/>
    <mtx name="ccedilla" width="614" lsb="64"/>
    <mtx name="ccircumflex" width="614" lsb="64"/>
    <mtx name="cdotaccent" width="614" lsb="64"/>
    <mtx name="cedilla" width="614" lsb="68"/>
    <mtx name="cent" width="614" lsb="72"/>
    <mtx name="circumflex" width="614" lsb="218"/>
    <mtx name="colon" width="614" lsb="182"/>
    <mtx name="colon.fig" width="614" lsb="211"/>
    <mtx name="comma" width="614" lsb="71"/>
    <mtx name="copyright" width="614" lsb="48"/>
    <mtx name="d" width="614" lsb="56"/>
    <mtx name="dagger" width="614" lsb="129"/>
    <mtx name="daggerdbl" width="614" lsb="76"/>
    <mtx name="dcaron" width="614" lsb="56"/>
    <mtx name="dcroat" width="614" lsb="56"/>
    <mtx name="degree" width="614" lsb="173"/>
    <mtx name="dieresis" width="614" lsb="241"/>
    <mtx name="divide" width="614" lsb="93"/>
    <mtx name="dollar" width="614" lsb="44"/>
    <mtx name="dong" width="614" lsb="-9"/>
    <mtx name="dotaccent" width="614" lsb="358"/>
    <mtx name="dotlessi" width="614" lsb="57"/>
    <mtx name="e" width="614" lsb="74"/>
    <mtx name="eacute" width="614" lsb="74"/>
    <mtx name="ebreve" width="614" lsb="74"/>
    <mtx name="ecaron" width="614" lsb="74"/>
    <mtx name="ecircumflex" width="614" lsb="74"/>
    <mtx name="edieresis" width="614" lsb="74"/>
    <mtx name="edotaccent" width="614" lsb="74"/>
    <mtx name="egrave" width="614" lsb="74"/>
    <mtx name="eight" width="614" lsb="60"/>
    <mtx name="eight.den" width="614" lsb="132"/>
    <mtx name="eight.inf" width="614" lsb="67"/>
    <mtx name="eight.num" width="614" lsb="210"/>
    <mtx name="eight.sup" width="614" lsb="226"/>
    <mtx name="ellipsis" width="614" lsb="-12"/>
    <mtx name="emacron" width="614" lsb="74"/>
    <mtx name="emdash" width="614" lsb="70"/>
    <mtx name="endash" width="614" lsb="99"/>
    <mtx name="eng" width="614" lsb="37"/>
    <mtx name="eogonek" width="614" lsb="74"/>
    <mtx name="equal" width="614" lsb="82"/>
    <mtx name="eth" width="614" lsb="55"/>
    <mtx name="exclam" width="614" lsb="189"/>
    <mtx name="exclamdown" width="614" lsb="181"/>
    <mtx name="f" width="614" lsb="128"/>
    <mtx name="five" width="614" lsb="32"/>
    <mtx name="five.den" width="614" lsb="106"/>
    <mtx name="five.inf" width="614" lsb="41"/>
    <mtx name="five.num" width="614" lsb="184"/>
    <mtx name="five.sup" width="614" lsb="200"/>
    <mtx name="fiveeighths" width="614" lsb="0"/>
    <mtx name="fivesixths" width="614" lsb="0"/>
    <mtx name="four" width="614" lsb="46"/>
    <mtx name="four.den" width="614" lsb="114"/>
    <mtx name="four.inf" width="614" lsb="49"/>
    <mtx name="four.num" width="614" lsb="192"/>
    <mtx name="four.sup" width="614" lsb="208"/>
    <mtx name="fourfifths" width="614" lsb="0"/>
    <mtx name="fracbar" width="614" lsb="0"/>
    <mtx name="fraction" width="614" lsb="0"/>
    <mtx name="g" width="614" lsb="17"/>
    <mtx name="gbreve" width="614" lsb="17"/>
    <mtx name="gcaron" width="614" lsb="17"/>
    <mtx name="gcircumflex" width="614" lsb="17"/>
    <mtx name="gdotaccent" width="614" lsb="17"/>
    <mtx name="germandbls" width="614" lsb="31"/>
    <mtx name="grave" width="614" lsb="295"/>
    <mtx name="greater" width="614" lsb="39"/>
    <mtx name="greaterequal" width="614" lsb="27"/>
    <mtx name="guilsinglleft" width="614" lsb="151"/>
    <mtx name="guilsinglright" width="614" lsb="110"/>
    <mtx name="h" width="614" lsb="37"/>
    <mtx name="hbar" width="614" lsb="54"/>
    <mtx name="hcircumflex" width="614" lsb="37"/>
    <mtx name="hungarumlaut" width="614" lsb="248"/>
    <mtx name="hyphen" width="614" lsb="140"/>
    <mtx name="i" width="614" lsb="57"/>
    <mtx name="i.dot" width="614" lsb="57"/>
    <mtx name="iacute" width="614" lsb="57"/>
    <mtx name="ibreve" width="614" lsb="57"/>
    <mtx name="icircumflex" width="614" lsb="57"/>
    <mtx name="idieresis" width="614" lsb="57"/>
    <mtx name="igrave" width="614" lsb="57"/>
    <mtx name="imacron" width="614" lsb="57"/>
    <mtx name="iogonek" width="614" lsb="57"/>
    <mtx name="itilde" width="614" lsb="57"/>
    <mtx name="j" width="614" lsb="-32"/>
    <mtx name="jcircumflex" width="614" lsb="-32"/>
    <mtx name="k" width="614" lsb="58"/>
    <mtx name="l" width="614" lsb="187"/>
    <mtx name="lacute" width="614" lsb="187"/>
    <mtx name="lcaron" width="614" lsb="187"/>
    <mtx name="ldot" width="614" lsb="187"/>
    <mtx name="less" width="614" lsb="92"/>
    <mtx name="lessequal" width="614" lsb="27"/>
    <mtx name="lslash" width="614" lsb="99"/>
    <mtx name="m" width="614" lsb="-8"/>
    <mtx name="macron" width="614" lsb="242"/>
    <mtx name="middotcat" width="614" lsb="244"/>
    <mtx name="middotcat.cap" width="614" lsb="194"/>
    <mtx name="minus" width="614" lsb="93"/>
    <mtx name="mu" width="614" lsb="-31"/>
    <mtx name="multiply" width="614" lsb="85"/>
    <mtx name="n" width="614" lsb="37"/>
    <mtx name="nacute" width="614" lsb="37"/>
    <mtx name="ncaron" width="614" lsb="37"/>
    <mtx name="nine" width="614" lsb="112"/>
    <mtx name="nine.den" width="614" lsb="151"/>
    <mtx name="nine.inf" width="614" lsb="86"/>
    <mtx name="nine.num" width="614" lsb="229"/>
    <mtx name="nine.sup" width="614" lsb="245"/>
    <mtx name="notequal" width="614" lsb="81"/>
    <mtx name="ntilde" width="614" lsb="37"/>
    <mtx name="numbersign" width="614" lsb="45"/>
    <mtx name="o" width="614" lsb="58"/>
    <mtx name="oacute" width="614" lsb="58"/>
    <mtx name="obreve" width="614" lsb="58"/>
    <mtx name="ocircumflex" width="614" lsb="58"/>
    <mtx name="odieresis" width="614" lsb="58"/>
    <mtx name="oe" width="614" lsb="14"/>
    <mtx name="ogonek" width="614" lsb="90"/>
    <mtx name="ograve" width="614" lsb="58"/>
    <mtx name="ohorn" width="614" lsb="58"/>
    <mtx name="ohungarumlaut" width="614" lsb="58"/>
    <mtx name="omacron" width="614" lsb="58"/>
    <mtx name="one" width="614" lsb="57"/>
    <mtx name="one.den" width="614" lsb="121"/>
    <mtx name="one.inf" width="614" lsb="56"/>
    <mtx name="one.num" width="614" lsb="199"/>
    <mtx name="one.sup" width="614" lsb="215"/>
    <mtx name="oneeighth" width="614" lsb="0"/>
    <mtx name="onefifth" width="614" lsb="0"/>
    <mtx name="onehalf" width="614" lsb="0"/>
    <mtx name="onequarter" width="614" lsb="0"/>
    <mtx name="onesixth" width="614" lsb="0"/>
    <mtx name="onethird" width="614" lsb="0"/>
    <mtx name="ordfeminine" width="614" lsb="114"/>
    <mtx name="ordmasculine" width="614" lsb="114"/>
    <mtx name="oslash" width="614" lsb="-43"/>
    <mtx name="otilde" width="614" lsb="58"/>
    <mtx name="p" width="614" lsb="-32"/>
    <mtx name="paragraph" width="614" lsb="150"/>
    <mtx name="parenleft" width="614" lsb="136"/>
    <mtx name="parenright" width="614" lsb="10"/>
    <mtx name="percent" width="614" lsb="-45"/>
    <mtx name="period" width="614" lsb="185"/>
    <mtx name="periodcentered" width="614" lsb="266"/>
    <mtx name="plus" width="614" lsb="93"/>
    <mtx name="plusminus" width="614" lsb="7"/>
    <mtx name="q" width="614" lsb="56"/>
    <mtx name="question" width="614" lsb="125"/>
    <mtx name="questiondown" width="614" lsb="64"/>
    <mtx name="quotedbl" width="614" lsb="203"/>
    <mtx name="quotedblbase" width="614" lsb="-35"/>
    <mtx name="quotedblleft" width="614" lsb="160"/>
    <mtx name="quotedblright" width="614" lsb="133"/>
    <mtx name="quoteleft" width="614" lsb="289"/>
    <mtx name="quoteright" width="614" lsb="257"/>
    <mtx name="quotesinglbase" width="614" lsb="89"/>
    <mtx name="quotesingle" width="614" lsb="326"/>
    <mtx name="r" width="614" lsb="-13"/>
    <mtx name="racute" width="614" lsb="-13"/>
    <mtx name="rcaron" width="614" lsb="-13"/>
    <mtx name="registered" width="614" lsb="121"/>
    <mtx name="ring" width="614" lsb="286"/>
    <mtx name="s" width="614" lsb="46"/>
    <mtx name="sacute" width="614" lsb="46"/>
    <mtx name="scaron" width="614" lsb="46"/>
    <mtx name="scircumflex" width="614" lsb="46"/>
    <mtx name="section" width="614" lsb="0"/>
    <mtx name="semicolon" width="614" lsb="57"/>
    <mtx name="seven" width="614" lsb="101"/>
    <mtx name="seven.den" width="614" lsb="152"/>
    <mtx name="seven.inf" width="614" lsb="87"/>
    <mtx name="seven.num" width="614" lsb="230"/>
    <mtx name="seven.sup" width="614" lsb="246"/>
    <mtx name="seveneighths" width="614" lsb="0"/>
    <mtx name="six" width="614" lsb="75"/>
    <mtx name="six.den" width="614" lsb="131"/>
    <mtx name="six.inf" width="614" lsb="66"/>
    <mtx name="six.num" width="614" lsb="209"/>
    <mtx name="six.sup" width="614" lsb="225"/>
    <mtx name="slash" width="614" lsb="-55"/>
    <mtx name="space" width="614" lsb="0"/>
    <mtx name="sterling" width="614" lsb="10"/>
    <mtx name="t" width="614" lsb="116"/>
    <mtx name="tbar" width="614" lsb="101"/>
    <mtx name="tcaron" width="614" lsb="116"/>
    <mtx name="thorn" width="614" lsb="-32"/>
    <mtx name="three" width="614" lsb="25"/>
    <mtx name="three.den" width="614" lsb="105"/>
    <mtx name="three.inf" width="614" lsb="40"/>
    <mtx name="three.num" width="614" lsb="183"/>
    <mtx name="three.sup" width="614" lsb="199"/>
    <mtx name="threeeighths" width="614" lsb="0"/>
    <mtx name="threefifths" width="614" lsb="0"/>
    <mtx name="threequarters" width="614" lsb="0"/>
    <mtx name="tilde" width="614" lsb="201"/>
    <mtx name="trademark" width="614" lsb="158"/>
    <mtx name="two" width="614" lsb="19"/>
    <mtx name="two.den" width="614" lsb="102"/>
    <mtx name="two.inf" width="614" lsb="37"/>
    <mtx name="two.num" width="614" lsb="180"/>
    <mtx name="two.sup" width="614" lsb="196"/>
    <mtx name="twofifths" width="614" lsb="0"/>
    <mtx name="twothirds" width="614" lsb="0"/>
    <mtx name="u" width="614" lsb="68"/>
    <mtx name="uacute" width="614" lsb="68"/>
    <mtx name="ubreve" width="614" lsb="68"/>
    <mtx name="ucircumflex" width="614" lsb="68"/>
    <mtx name="udieresis" width="614" lsb="68"/>
    <mtx name="ugrave" width="614" lsb="68"/>
    <mtx name="uhorn" width="614" lsb="68"/>
    <mtx name="uhungarumlaut" width="614" lsb="68"/>
    <mtx name="umacron" width="614" lsb="68"/>
    <mtx name="underscore" width="614" lsb="-11"/>
    <mtx name="uni00A0" width="614" lsb="0"/>
    <mtx name="uni00A80300" width="0" lsb="-63"/>
    <mtx name="uni00A80300.cap" width="0" lsb="-25"/>
    <mtx name="uni00A80301" width="0" lsb="-63"/>
    <mtx name="uni00A80301.cap" width="0" lsb="-25"/>
    <mtx name="uni00A80304" width="0" lsb="-63"/>
    <mtx name="uni00A80304.cap" width="0" lsb="-25"/>
    <mtx name="uni00A8030C" width="0" lsb="-63"/>
    <mtx name="uni00A8030C.cap" width="0" lsb="-25"/>
    <mtx name="uni00AB" width="614" lsb="60"/>
    <mtx name="uni00BB" width="614" lsb="15"/>
    <mtx name="uni0122" width="614" lsb="61"/>
    <mtx name="uni0123" width="614" lsb="17"/>
    <mtx name="uni0136" width="614" lsb="37"/>
    <mtx name="uni0137" width="614" lsb="58"/>
    <mtx name="uni013B" width="614" lsb="37"/>
    <mtx name="uni013C" width="614" lsb="54"/>
    <mtx name="uni0145" width="614" lsb="31"/>
    <mtx name="uni0146" width="614" lsb="37"/>
    <mtx name="uni0156" width="614" lsb="37"/>
    <mtx name="uni0157" width="614" lsb="-13"/>
    <mtx name="uni015E" width="614" lsb="33"/>
    <mtx name="uni015F" width="614" lsb="46"/>
    <mtx name="uni0162" width="614" lsb="66"/>
    <mtx name="uni0163" width="614" lsb="84"/>
    <mtx name="uni018F" width="614" lsb="64"/>
    <mtx name="uni01CD" width="614" lsb="-20"/>
    <mtx name="uni01CE" width="614" lsb="39"/>
    <mtx name="uni01CF" width="614" lsb="73"/>
    <mtx name="uni01D0" width="614" lsb="57"/>
    <mtx name="uni01D1" width="614" lsb="61"/>
    <mtx name="uni01D2" width="614" lsb="58"/>
    <mtx name="uni01D3" width="614" lsb="74"/>
    <mtx name="uni01D4" width="614" lsb="68"/>
    <mtx name="uni01D5" width="614" lsb="74"/>
    <mtx name="uni01D6" width="614" lsb="68"/>
    <mtx name="uni01D7" width="614" lsb="74"/>
    <mtx name="uni01D8" width="614" lsb="68"/>
    <mtx name="uni01D9" width="614" lsb="74"/>
    <mtx name="uni01DA" width="614" lsb="68"/>
    <mtx name="uni01DB" width="614" lsb="74"/>
    <mtx name="uni01DC" width="614" lsb="68"/>
    <mtx name="uni01EA" width="614" lsb="61"/>
    <mtx name="uni01EB" width="614" lsb="58"/>
    <mtx name="uni01F0" width="614" lsb="-32"/>
    <mtx name="uni01F8" width="614" lsb="31"/>
    <mtx name="uni01F9" width="614" lsb="37"/>
    <mtx name="uni0218" width="614" lsb="33"/>
    <mtx name="uni0219" width="614" lsb="46"/>
    <mtx name="uni021A" width="614" lsb="65"/>
    <mtx name="uni021B" width="614" lsb="92"/>
    <mtx name="uni0226" width="614" lsb="-20"/>
    <mtx name="uni0227" width="614" lsb="39"/>
    <mtx name="uni022E" width="614" lsb="61"/>
    <mtx name="uni022F" width="614" lsb="58"/>
    <mtx name="uni0232" width="614" lsb="175"/>
    <mtx name="uni0233" width="614" lsb="-77"/>
    <mtx name="uni0237" width="614" lsb="-32"/>
    <mtx name="uni0259" width="614" lsb="44"/>
    <mtx name="uni02B9" width="614" lsb="326"/>
    <mtx name="uni02BA" width="614" lsb="203"/>
    <mtx name="uni02BB" width="614" lsb="289"/>
    <mtx name="uni02BC" width="614" lsb="257"/>
    <mtx name="uni02BE" width="614" lsb="178"/>
    <mtx name="uni02BF" width="614" lsb="226"/>
    <mtx name="uni02C60300" width="0" lsb="-87"/>
    <mtx name="uni02C60300.cap" width="0" lsb="-31"/>
    <mtx name="uni02C60301" width="0" lsb="-87"/>
    <mtx name="uni02C60301.cap" width="0" lsb="-31"/>
    <mtx name="uni02C60303" width="0" lsb="-87"/>
    <mtx name="uni02C60303.cap" width="0" lsb="-31"/>
    <mtx name="uni02C60309" width="0" lsb="-87"/>
    <mtx name="uni02C60309.cap" width="0" lsb="-31"/>
    <mtx name="uni02C8" width="614" lsb="297"/>
    <mtx name="uni02CC" width="614" lsb="297"/>
    <mtx name="uni02CD" width="614" lsb="27"/>
    <mtx name="uni02D80300" width="0" lsb="-36"/>
    <mtx name="uni02D80300.cap" width="0" lsb="13"/>
    <mtx name="uni02D80301" width="0" lsb="-36"/>
    <mtx name="uni02D80301.cap" width="0" lsb="13"/>
    <mtx name="uni02D80303" width="0" lsb="-36"/>
    <mtx name="uni02D80303.cap" width="0" lsb="13"/>
    <mtx name="uni02D80309" width="0" lsb="-36"/>
    <mtx name="uni02D80309.cap" width="0" lsb="13"/>
    <mtx name="uni0300" width="0" lsb="-24"/>
    <mtx name="uni0300.cap" width="0" lsb="12"/>
    <mtx name="uni0301" width="0" lsb="10"/>
    <mtx name="uni0301.cap" width="0" lsb="68"/>
    <mtx name="uni0302" width="0" lsb="-89"/>
    <mtx name="uni0302.cap" width="0" lsb="-31"/>
    <mtx name="uni0303" width="0" lsb="-106"/>
    <mtx name="uni0303.cap" width="0" lsb="-48"/>
    <mtx name="uni0304" width="0" lsb="-65"/>
    <mtx name="uni0304.cap" width="0" lsb="-9"/>
    <mtx name="uni0306" width="0" lsb="-35"/>
    <mtx name="uni0306.cap" width="0" lsb="18"/>
    <mtx name="uni0307" width="0" lsb="51"/>
    <mtx name="uni0307.cap" width="0" lsb="105"/>
    <mtx name="uni0308" width="0" lsb="-66"/>
    <mtx name="uni0308.cap" width="0" lsb="-27"/>
    <mtx name="uni0309" width="0" lsb="-7"/>
    <mtx name="uni0309.cap" width="0" lsb="72"/>
    <mtx name="uni030A" width="0" lsb="-21"/>
    <mtx name="uni030A.cap" width="0" lsb="24"/>
    <mtx name="uni030B" width="0" lsb="-59"/>
    <mtx name="uni030B.cap" width="0" lsb="-2"/>
    <mtx name="uni030C" width="0" lsb="-42"/>
    <mtx name="uni030C.cap" width="0" lsb="0"/>
    <mtx name="uni0312" width="0" lsb="8"/>
    <mtx name="uni0315" width="0" lsb="73"/>
    <mtx name="uni0323" width="0" lsb="-165"/>
    <mtx name="uni0324" width="0" lsb="-275"/>
    <mtx name="uni0326" width="0" lsb="-243"/>
    <mtx name="uni0327" width="0" lsb="-239"/>
    <mtx name="uni0328" width="0" lsb="-217"/>
    <mtx name="uni032D" width="0" lsb="-327"/>
    <mtx name="uni032E" width="0" lsb="-268"/>
    <mtx name="uni0331" width="0" lsb="-280"/>
    <mtx name="uni0E3F" width="614" lsb="37"/>
    <mtx name="uni1E06" width="614" lsb="22"/>
    <mtx name="uni1E07" width="614" lsb="27"/>
    <mtx name="uni1E0C" width="614" lsb="34"/>
    <mtx name="uni1E0D" width="614" lsb="56"/>
    <mtx name="uni1E0E" width="614" lsb="-5"/>
    <mtx name="uni1E0F" width="614" lsb="21"/>
    <mtx name="uni1E12" width="614" lsb="-52"/>
    <mtx name="uni1E13" width="614" lsb="-26"/>
    <mtx name="uni1E20" width="614" lsb="61"/>
    <mtx name="uni1E21" width="614" lsb="17"/>
    <mtx name="uni1E24" width="614" lsb="34"/>
    <mtx name="uni1E25" width="614" lsb="37"/>
    <mtx name="uni1E28" width="614" lsb="-108"/>
    <mtx name="uni1E29" width="614" lsb="-106"/>
    <mtx name="uni1E2A" width="614" lsb="34"/>
    <mtx name="uni1E2B" width="614" lsb="37"/>
    <mtx name="uni1E32" width="614" lsb="37"/>
    <mtx name="uni1E33" width="614" lsb="58"/>
    <mtx name="uni1E34" width="614" lsb="37"/>
    <mtx name="uni1E35" width="614" lsb="21"/>
    <mtx name="uni1E36" width="614" lsb="37"/>
    <mtx name="uni1E37" width="614" lsb="132"/>
    <mtx name="uni1E38" width="614" lsb="37"/>
    <mtx name="uni1E39" width="614" lsb="132"/>
    <mtx name="uni1E3A" width="614" lsb="37"/>
    <mtx name="uni1E3B" width="614" lsb="17"/>
    <mtx name="uni1E3C" width="614" lsb="11"/>
    <mtx name="uni1E3D" width="614" lsb="-30"/>
    <mtx name="uni1E3E" width="614" lsb="1"/>
    <mtx name="uni1E3F" width="614" lsb="-8"/>
    <mtx name="uni1E40" width="614" lsb="1"/>
    <mtx name="uni1E41" width="614" lsb="-8"/>
    <mtx name="uni1E42" width="614" lsb="1"/>
    <mtx name="uni1E43" width="614" lsb="-8"/>
    <mtx name="uni1E44" width="614" lsb="31"/>
    <mtx name="uni1E45" width="614" lsb="37"/>
    <mtx name="uni1E46" width="614" lsb="31"/>
    <mtx name="uni1E47" width="614" lsb="37"/>
    <mtx name="uni1E48" width="614" lsb="28"/>
    <mtx name="uni1E49" width="614" lsb="35"/>
    <mtx name="uni1E4A" width="614" lsb="-18"/>
    <mtx name="uni1E4B" width="614" lsb="-12"/>
    <mtx name="uni1E58" width="614" lsb="37"/>
    <mtx name="uni1E59" width="614" lsb="-13"/>
    <mtx name="uni1E5A" width="614" lsb="37"/>
    <mtx name="uni1E5B" width="614" lsb="-13"/>
    <mtx name="uni1E5C" width="614" lsb="37"/>
    <mtx name="uni1E5D" width="614" lsb="-13"/>
    <mtx name="uni1E5E" width="614" lsb="37"/>
    <mtx name="uni1E5F" width="614" lsb="-44"/>
    <mtx name="uni1E62" width="614" lsb="33"/>
    <mtx name="uni1E63" width="614" lsb="46"/>
    <mtx name="uni1E6C" width="614" lsb="143"/>
    <mtx name="uni1E6D" width="614" lsb="116"/>
    <mtx name="uni1E6E" width="614" lsb="28"/>
    <mtx name="uni1E6F" width="614" lsb="55"/>
    <mtx name="uni1E70" width="614" lsb="-19"/>
    <mtx name="uni1E71" width="614" lsb="8"/>
    <mtx name="uni1E7E" width="614" lsb="143"/>
    <mtx name="uni1E7F" width="614" lsb="131"/>
    <mtx name="uni1E8C" width="614" lsb="-8"/>
    <mtx name="uni1E8D" width="614" lsb="18"/>
    <mtx name="uni1E8E" width="614" lsb="175"/>
    <mtx name="uni1E8F" width="614" lsb="-77"/>
    <mtx name="uni1E90" width="614" lsb="16"/>
    <mtx name="uni1E91" width="614" lsb="33"/>
    <mtx name="uni1E92" width="614" lsb="16"/>
    <mtx name="uni1E93" width="614" lsb="33"/>
    <mtx name="uni1E94" width="614" lsb="16"/>
    <mtx name="uni1E95" width="614" lsb="33"/>
    <mtx name="uni1E96" width="614" lsb="32"/>
    <mtx name="uni1E9E" width="614" lsb="31"/>
    <mtx name="uni1EA0" width="614" lsb="-20"/>
    <mtx name="uni1EA1" width="614" lsb="39"/>
    <mtx name="uni1EA2" width="614" lsb="-20"/>
    <mtx name="uni1EA3" width="614" lsb="39"/>
    <mtx name="uni1EA4" width="614" lsb="-20"/>
    <mtx name="uni1EA5" width="614" lsb="39"/>
    <mtx name="uni1EA6" width="614" lsb="-20"/>
    <mtx name="uni1EA7" width="614" lsb="39"/>
    <mtx name="uni1EA8" width="614" lsb="-20"/>
    <mtx name="uni1EA9" width="614" lsb="39"/>
    <mtx name="uni1EAA" width="614" lsb="-20"/>
    <mtx name="uni1EAB" width="614" lsb="39"/>
    <mtx name="uni1EAC" width="614" lsb="-20"/>
    <mtx name="uni1EAD" width="614" lsb="39"/>
    <mtx name="uni1EAE" width="614" lsb="-20"/>
    <mtx name="uni1EAF" width="614" lsb="39"/>
    <mtx name="uni1EB0" width="614" lsb="-20"/>
    <mtx name="uni1EB1" width="614" lsb="39"/>
    <mtx name="uni1EB2" width="614" lsb="-20"/>
    <mtx name="uni1EB3" width="614" lsb="39"/>
    <mtx name="uni1EB4" width="614" lsb="-20"/>
    <mtx name="uni1EB5" width="614" lsb="39"/>
    <mtx name="uni1EB6" width="614" lsb="-20"/>
    <mtx name="uni1EB7" width="614" lsb="39"/>
    <mtx name="uni1EB8" width="614" lsb="37"/>
    <mtx name="uni1EB9" width="614" lsb="74"/>
    <mtx name="uni1EBA" width="614" lsb="37"/>
    <mtx name="uni1EBB" width="614" lsb="74"/>
    <mtx name="uni1EBC" width="614" lsb="37"/>
    <mtx name="uni1EBD" width="614" lsb="74"/>
    <mtx name="uni1EBE" width="614" lsb="37"/>
    <mtx name="uni1EBF" width="614" lsb="74"/>
    <mtx name="uni1EC0" width="614" lsb="37"/>
    <mtx name="uni1EC1" width="614" lsb="74"/>
    <mtx name="uni1EC2" width="614" lsb="37"/>
    <mtx name="uni1EC3" width="614" lsb="74"/>
    <mtx name="uni1EC4" width="614" lsb="37"/>
    <mtx name="uni1EC5" width="614" lsb="74"/>
    <mtx name="uni1EC6" width="614" lsb="37"/>
    <mtx name="uni1EC7" width="614" lsb="74"/>
    <mtx name="uni1EC8" width="614" lsb="73"/>
    <mtx name="uni1EC9" width="614" lsb="57"/>
    <mtx name="uni1ECA" width="614" lsb="73"/>
    <mtx name="uni1ECB" width="614" lsb="57"/>
    <mtx name="uni1ECC" width="614" lsb="61"/>
    <mtx name="uni1ECD" width="614" lsb="58"/>
    <mtx name="uni1ECE" width="614" lsb="61"/>
    <mtx name="uni1ECF" width="614" lsb="58"/>
    <mtx name="uni1ED0" width="614" lsb="61"/>
    <mtx name="uni1ED1" width="614" lsb="58"/>
    <mtx name="uni1ED2" width="614" lsb="61"/>
    <mtx name="uni1ED3" width="614" lsb="58"/>
    <mtx name="uni1ED4" width="614" lsb="61"/>
    <mtx name="uni1ED5" width="614" lsb="58"/>
    <mtx name="uni1ED6" width="614" lsb="61"/>
    <mtx name="uni1ED7" width="614" lsb="58"/>
    <mtx name="uni1ED8" width="614" lsb="61"/>
    <mtx name="uni1ED9" width="614" lsb="58"/>
    <mtx name="uni1EDA" width="614" lsb="61"/>
    <mtx name="uni1EDB" width="614" lsb="58"/>
    <mtx name="uni1EDC" width="614" lsb="61"/>
    <mtx name="uni1EDD" width="614" lsb="58"/>
    <mtx name="uni1EDE" width="614" lsb="61"/>
    <mtx name="uni1EDF" width="614" lsb="58"/>
    <mtx name="uni1EE0" width="614" lsb="61"/>
    <mtx name="uni1EE1" width="614" lsb="58"/>
    <mtx name="uni1EE2" width="614" lsb="61"/>
    <mtx name="uni1EE3" width="614" lsb="58"/>
    <mtx name="uni1EE4" width="614" lsb="74"/>
    <mtx name="uni1EE5" width="614" lsb="68"/>
    <mtx name="uni1EE6" width="614" lsb="74"/>
    <mtx name="uni1EE7" width="614" lsb="68"/>
    <mtx name="uni1EE8" width="614" lsb="74"/>
    <mtx name="uni1EE9" width="614" lsb="68"/>
    <mtx name="uni1EEA" width="614" lsb="74"/>
    <mtx name="uni1EEB" width="614" lsb="68"/>
    <mtx name="uni1EEC" width="614" lsb="74"/>
    <mtx name="uni1EED" width="614" lsb="68"/>
    <mtx name="uni1EEE" width="614" lsb="74"/>
    <mtx name="uni1EEF" width="614" lsb="68"/>
    <mtx name="uni1EF0" width="614" lsb="74"/>
    <mtx name="uni1EF1" width="614" lsb="68"/>
    <mtx name="uni1EF4" width="614" lsb="143"/>
    <mtx name="uni1EF5" width="614" lsb="-77"/>
    <mtx name="uni1EF6" width="614" lsb="175"/>
    <mtx name="uni1EF7" width="614" lsb="-77"/>
    <mtx name="uni1EF8" width="614" lsb="175"/>
    <mtx name="uni1EF9" width="614" lsb="-77"/>
    <mtx name="uni2011" width="614" lsb="127"/>
    <mtx name="uni2015" width="614" lsb="57"/>
    <mtx name="uni2025" width="614" lsb="34"/>
    <mtx name="uni20A6" width="614" lsb="13"/>
    <mtx name="uni20A9" width="614" lsb="36"/>
    <mtx name="uni20B1" width="614" lsb="44"/>
    <mtx name="uni20B9" width="614" lsb="68"/>
    <mtx name="uni20BA" width="614" lsb="-7"/>
    <mtx name="uni20BD" width="614" lsb="-5"/>
    <mtx name="uni2117" width="614" lsb="48"/>
    <mtx name="uni2120" width="614" lsb="88"/>
    <mtx name="uniA788" width="614" lsb="-20"/>
    <mtx name="uogonek" width="614" lsb="68"/>
    <mtx name="uring" width="614" lsb="68"/>
    <mtx name="utilde" width="614" lsb="68"/>
    <mtx name="v" width="614" lsb="131"/>
    <mtx name="w" width="614" lsb="86"/>
    <mtx name="wacute" width="614" lsb="86"/>
    <mtx name="wcircumflex" width="614" lsb="86"/>
    <mtx name="wdieresis" width="614" lsb="86"/>
    <mtx name="wgrave" width="614" lsb="86"/>
    <mtx name="x" width="614" lsb="18"/>
    <mtx name="y" width="614" lsb="-77"/>
    <mtx name="yacute" width="614" lsb="-77"/>
    <mtx name="ycircumflex" width="614" lsb="-77"/>
    <mtx name="ydieresis" width="614" lsb="-77"/>
    <mtx name="yen" width="614" lsb="60"/>
    <mtx name="ygrave" width="614" lsb="-77"/>
    <mtx name="z" width="614" lsb="33"/>
    <mtx name="zacute" width="614" lsb="33"/>
    <mtx name="zcaron" width="614" lsb="33"/>
    <mtx name="zdotaccent" width="614" lsb="33"/>
    <mtx name="zero" width="614" lsb="70"/>
    <mtx name="zero.den" width="614" lsb="134"/>
    <mtx name="zero.inf" width="614" lsb="69"/>
    <mtx name="zero.num" width="614" lsb="212"/>
    <mtx name="zero.sup" width="614" lsb="228"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0xa1" name="exclamdown"/><!-- INVERTED EXCLAMATION MARK -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa8" name="dieresis"/><!-- DIAERESIS -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xaa" name="ordfeminine"/><!-- FEMININE ORDINAL INDICATOR -->
      <map code="0xab" name="uni00AB"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xae" name="registered"/><!-- REGISTERED SIGN -->
      <map code="0xaf" name="macron"/><!-- MACRON -->
      <map code="0xb0" name="degree"/><!-- DEGREE SIGN -->
      <map code="0xb1" name="plusminus"/><!-- PLUS-MINUS SIGN -->
      <map code="0xb2" name="two.sup"/><!-- SUPERSCRIPT TWO -->
      <map code="0xb3" name="three.sup"/><!-- SUPERSCRIPT THREE -->
      <map code="0xb4" name="acute"/><!-- ACUTE ACCENT -->
      <map code="0xb5" name="mu"/><!-- MICRO SIGN -->
      <map code="0xb6" name="paragraph"/><!-- PILCROW SIGN -->
      <map code="0xb7" name="periodcentered"/><!-- MIDDLE DOT -->
      <map code="0xb8" name="cedilla"/><!-- CEDILLA -->
      <map code="0xb9" name="one.sup"/><!-- SUPERSCRIPT ONE -->
      <map code="0xba" name="ordmasculine"/><!-- MASCULINE ORDINAL INDICATOR -->
      <map code="0xbb" name="uni00BB"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbc" name="onequarter"/><!-- VULGAR FRACTION ONE QUARTER -->
      <map code="0xbd" name="onehalf"/><!-- VULGAR FRACTION ONE HALF -->
      <map code="0xbe" name="threequarters"/><!-- VULGAR FRACTION THREE QUARTERS -->
      <map code="0xbf" name="questiondown"/><!-- INVERTED QUESTION MARK -->
      <map code="0xc0" name="Agrave"/><!-- LATIN CAPITAL LETTER A WITH GRAVE -->
      <map code="0xc1" name="Aacute"/><!-- LATIN CAPITAL LETTER A WITH ACUTE -->
      <map code="0xc2" name="Acircumflex"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX -->
      <map code="0xc3" name="Atilde"/><!-- LATIN CAPITAL LETTER A WITH TILDE -->
      <map code="0xc4" name="Adieresis"/><!-- LATIN CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0xc5" name="Aring"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE -->
      <map code="0xc6" name="AE"/><!-- LATIN CAPITAL LETTER AE -->
      <map code="0xc7" name="Ccedilla"/><!-- LATIN CAPITAL LETTER C WITH CEDILLA -->
      <map code="0xc8" name="Egrave"/><!-- LATIN CAPITAL LETTER E WITH GRAVE -->
      <map code="0xc9" name="Eacute"/><!-- LATIN CAPITAL LETTER E WITH ACUTE -->
      <map code="0xca" name="Ecircumflex"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX -->
      <map code="0xcb" name="Edieresis"/><!-- LATIN CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0xcc" name="Igrave"/><!-- LATIN CAPITAL LETTER I WITH GRAVE -->
      <map code="0xcd" name="Iacute"/><!-- LATIN CAPITAL LETTER I WITH ACUTE -->
      <map code="0xce" name="Icircumflex"/><!-- LATIN CAPITAL LETTER I WITH CIRCUMFLEX -->
      <map code="0xcf" name="Idieresis"/><!-- LATIN CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0xd0" name="Eth"/><!-- LATIN CAPITAL LETTER ETH -->
      <map code="0xd1" name="Ntilde"/><!-- LATIN CAPITAL LETTER N WITH TILDE -->
      <map code="0xd2" name="Ograve"/><!-- LATIN CAPITAL LETTER O WITH GRAVE -->
      <map code="0xd3" name="Oacute"/><!-- LATIN CAPITAL LETTER O WITH ACUTE -->
      <map code="0xd4" name="Ocircumflex"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX -->
      <map code="0xd5" name="Otilde"/><!-- LATIN CAPITAL LETTER O WITH TILDE -->
      <map code="0xd6" name="Odieresis"/><!-- LATIN CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xd8" name="Oslash"/><!-- LATIN CAPITAL LETTER O WITH STROKE -->
      <map code="0xd9" name="Ugrave"/><!-- LATIN CAPITAL LETTER U WITH GRAVE -->
      <map code="0xda" name="Uacute"/><!-- LATIN CAPITAL LETTER U WITH ACUTE -->
      <map code="0xdb" name="Ucircumflex"/><!-- LATIN CAPITAL LETTER U WITH CIRCUMFLEX -->
      <map code="0xdc" name="Udieresis"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0xdd" name="Yacute"/><!-- LATIN CAPITAL LETTER Y WITH ACUTE -->
      <map code="0xde" name="Thorn"/><!-- LATIN CAPITAL LETTER THORN -->
      <map code="0xdf" name="germandbls"/><!-- LATIN SMALL LETTER SHARP S -->
      <map code="0xe0" name="agrave"/><!-- LATIN SMALL LETTER A WITH GRAVE -->
      <map code="0xe1" name="aacute"/><!-- LATIN SMALL LETTER A WITH ACUTE -->
      <map code="0xe2" name="acircumflex"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX -->
      <map code="0xe3" name="atilde"/><!-- LATIN SMALL LETTER A WITH TILDE -->
      <map code="0xe4" name="adieresis"/><!-- LATIN SMALL LETTER A WITH DIAERESIS -->
      <map code="0xe5" name="aring"/><!-- LATIN SMALL LETTER A WITH RING ABOVE -->
      <map code="0xe6" name="ae"/><!-- LATIN SMALL LETTER AE -->
      <map code="0xe7" name="ccedilla"/><!-- LATIN SMALL LETTER C WITH CEDILLA -->
      <map code="0xe8" name="egrave"/><!-- LATIN SMALL LETTER E WITH GRAVE -->
      <map code="0xe9" name="eacute"/><!-- LATIN SMALL LETTER E WITH ACUTE -->
      <map code="0xea" name="ecircumflex"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX -->
      <map code="0xeb" name="edieresis"/><!-- LATIN SMALL LETTER E WITH DIAERESIS -->
      <map code="0xec" name="igrave"/><!-- LATIN SMALL LETTER I WITH GRAVE -->
      <map code="0xed" name="iacute"/><!-- LATIN SMALL LETTER I WITH ACUTE -->
      <map code="0xee" name="icircumflex"/><!-- LATIN SMALL LETTER I WITH CIRCUMFLEX -->
      <map code="0xef" name="idieresis"/><!-- LATIN SMALL LETTER I WITH DIAERESIS -->
      <map code="0xf0" name="eth"/><!-- LATIN SMALL LETTER ETH -->
      <map code="0xf1" name="ntilde"/><!-- LATIN SMALL LETTER N WITH TILDE -->
      <map code="0xf2" name="ograve"/><!-- LATIN SMALL LETTER O WITH GRAVE -->
      <map code="0xf3" name="oacute"/><!-- LATIN SMALL LETTER O WITH ACUTE -->
      <map code="0xf4" name="ocircumflex"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX -->
      <map code="0xf5" name="otilde"/><!-- LATIN SMALL LETTER O WITH TILDE -->
      <map code="0xf6" name="odieresis"/><!-- LATIN SMALL LETTER O WITH DIAERESIS -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0xf8" name="oslash"/><!-- LATIN SMALL LETTER O WITH STROKE -->
      <map code="0xf9" name="ugrave"/><!-- LATIN SMALL LETTER U WITH GRAVE -->
      <map code="0xfa" name="uacute"/><!-- LATIN SMALL LETTER U WITH ACUTE -->
      <map code="0xfb" name="ucircumflex"/><!-- LATIN SMALL LETTER U WITH CIRCUMFLEX -->
      <map code="0xfc" name="udieresis"/><!-- LATIN SMALL LETTER U WITH DIAERESIS -->
      <map code="0xfd" name="yacute"/><!-- LATIN SMALL LETTER Y WITH ACUTE -->
      <map code="0xfe" name="thorn"/><!-- LATIN SMALL LETTER THORN -->
      <map code="0xff" name="ydieresis"/><!-- LATIN SMALL LETTER Y WITH DIAERESIS -->
      <map code="0x100" name="Amacron"/><!-- LATIN CAPITAL LETTER A WITH MACRON -->
      <map code="0x101" name="amacron"/><!-- LATIN SMALL LETTER A WITH MACRON -->
      <map code="0x102" name="Abreve"/><!-- LATIN CAPITAL LETTER A WITH BREVE -->
      <map code="0x103" name="abreve"/><!-- LATIN SMALL LETTER A WITH BREVE -->
      <map code="0x104" name="Aogonek"/><!-- LATIN CAPITAL LETTER A WITH OGONEK -->
      <map code="0x105" name="aogonek"/><!-- LATIN SMALL LETTER A WITH OGONEK -->
      <map code="0x106" name="Cacute"/><!-- LATIN CAPITAL LETTER C WITH ACUTE -->
      <map code="0x107" name="cacute"/><!-- LATIN SMALL LETTER C WITH ACUTE -->
      <map code="0x108" name="Ccircumflex"/><!-- LATIN CAPITAL LETTER C WITH CIRCUMFLEX -->
      <map code="0x109" name="ccircumflex"/><!-- LATIN SMALL LETTER C WITH CIRCUMFLEX -->
      <map code="0x10a" name="Cdotaccent"/><!-- LATIN CAPITAL LETTER C WITH DOT ABOVE -->
      <map code="0x10b" name="cdotaccent"/><!-- LATIN SMALL LETTER C WITH DOT ABOVE -->
      <map code="0x10c" name="Ccaron"/><!-- LATIN CAPITAL LETTER C WITH CARON -->
      <map code="0x10d" name="ccaron"/><!-- LATIN SMALL LETTER C WITH CARON -->
      <map code="0x10e" name="Dcaron"/><!-- LATIN CAPITAL LETTER D WITH CARON -->
      <map code="0x10f" name="dcaron"/><!-- LATIN SMALL LETTER D WITH CARON -->
      <map code="0x110" name="Dcroat"/><!-- LATIN CAPITAL LETTER D WITH STROKE -->
      <map code="0x111" name="dcroat"/><!-- LATIN SMALL LETTER D WITH STROKE -->
      <map code="0x112" name="Emacron"/><!-- LATIN CAPITAL LETTER E WITH MACRON -->
      <map code="0x113" name="emacron"/><!-- LATIN SMALL LETTER E WITH MACRON -->
      <map code="0x114" name="Ebreve"/><!-- LATIN CAPITAL LETTER E WITH BREVE -->
      <map code="0x115" name="ebreve"/><!-- LATIN SMALL LETTER E WITH BREVE -->
      <map code="0x116" name="Edotaccent"/><!-- LATIN CAPITAL LETTER E WITH DOT ABOVE -->
      <map code="0x117" name="edotaccent"/><!-- LATIN SMALL LETTER E WITH DOT ABOVE -->
      <map code="0x118" name="Eogonek"/><!-- LATIN CAPITAL LETTER E WITH OGONEK -->
      <map code="0x119" name="eogonek"/><!-- LATIN SMALL LETTER E WITH OGONEK -->
      <map code="0x11a" name="Ecaron"/><!-- LATIN CAPITAL LETTER E WITH CARON -->
      <map code="0x11b" name="ecaron"/><!-- LATIN SMALL LETTER E WITH CARON -->
      <map code="0x11c" name="Gcircumflex"/><!-- LATIN CAPITAL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11d" name="gcircumflex"/><!-- LATIN SMALL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11e" name="Gbreve"/><!-- LATIN CAPITAL LETTER G WITH BREVE -->
      <map code="0x11f" name="gbreve"/><!-- LATIN SMALL LETTER G WITH BREVE -->
      <map code="0x120" name="Gdotaccent"/><!-- LATIN CAPITAL LETTER G WITH DOT ABOVE -->
      <map code="0x121" name="gdotaccent"/><!-- LATIN SMALL LETTER G WITH DOT ABOVE -->
      <map code="0x122" name="uni0122"/><!-- LATIN CAPITAL LETTER G WITH CEDILLA -->
      <map code="0x123" name="uni0123"/><!-- LATIN SMALL LETTER G WITH CEDILLA -->
      <map code="0x124" name="Hcircumflex"/><!-- LATIN CAPITAL LETTER H WITH CIRCUMFLEX -->
      <map code="0x125" name="hcircumflex"/><!-- LATIN SMALL LETTER H WITH CIRCUMFLEX -->
      <map code="0x126" name="Hbar"/><!-- LATIN CAPITAL LETTER H WITH STROKE -->
      <map code="0x127" name="hbar"/><!-- LATIN SMALL LETTER H WITH STROKE -->
      <map code="0x128" name="Itilde"/><!-- LATIN CAPITAL LETTER I WITH TILDE -->
      <map code="0x129" name="itilde"/><!-- LATIN SMALL LETTER I WITH TILDE -->
      <map code="0x12a" name="Imacron"/><!-- LATIN CAPITAL LETTER I WITH MACRON -->
      <map code="0x12b" name="imacron"/><!-- LATIN SMALL LETTER I WITH MACRON -->
      <map code="0x12c" name="Ibreve"/><!-- LATIN CAPITAL LETTER I WITH BREVE -->
      <map code="0x12d" name="ibreve"/><!-- LATIN SMALL LETTER I WITH BREVE -->
      <map code="0x12e" name="Iogonek"/><!-- LATIN CAPITAL LETTER I WITH OGONEK -->
      <map code="0x12f" name="iogonek"/><!-- LATIN SMALL LETTER I WITH OGONEK -->
      <map code="0x130" name="Idotaccent"/><!-- LATIN CAPITAL LETTER I WITH DOT ABOVE -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x134" name="Jcircumflex"/><!-- LATIN CAPITAL LETTER J WITH CIRCUMFLEX -->
      <map code="0x135" name="jcircumflex"/><!-- LATIN SMALL LETTER J WITH CIRCUMFLEX -->
      <map code="0x136" name="uni0136"/><!-- LATIN CAPITAL LETTER K WITH CEDILLA -->
      <map code="0x137" name="uni0137"/><!-- LATIN SMALL LETTER K WITH CEDILLA -->
      <map code="0x139" name="Lacute"/><!-- LATIN CAPITAL LETTER L WITH ACUTE -->
      <map code="0x13a" name="lacute"/><!-- LATIN SMALL LETTER L WITH ACUTE -->
      <map code="0x13b" name="uni013B"/><!-- LATIN CAPITAL LETTER L WITH CEDILLA -->
      <map code="0x13c" name="uni013C"/><!-- LATIN SMALL LETTER L WITH CEDILLA -->
      <map code="0x13d" name="Lcaron"/><!-- LATIN CAPITAL LETTER L WITH CARON -->
      <map code="0x13e" name="lcaron"/><!-- LATIN SMALL LETTER L WITH CARON -->
      <map code="0x13f" name="Ldot"/><!-- LATIN CAPITAL LETTER L WITH MIDDLE DOT -->
      <map code="0x140" name="ldot"/><!-- LATIN SMALL LETTER L WITH MIDDLE DOT -->
      <map code="0x141" name="Lslash"/><!-- LATIN CAPITAL LETTER L WITH STROKE -->
      <map code="0x142" name="lslash"/><!-- LATIN SMALL LETTER L WITH STROKE -->
      <map code="0x143" name="Nacute"/><!-- LATIN CAPITAL LETTER N WITH ACUTE -->
      <map code="0x144" name="nacute"/><!-- LATIN SMALL LETTER N WITH ACUTE -->
      <map code="0x145" name="uni0145"/><!-- LATIN CAPITAL LETTER N WITH CEDILLA -->
      <map code="0x146" name="uni0146"/><!-- LATIN SMALL LETTER N WITH CEDILLA -->
      <map code="0x147" name="Ncaron"/><!-- LATIN CAPITAL LETTER N WITH CARON -->
      <map code="0x148" name="ncaron"/><!-- LATIN SMALL LETTER N WITH CARON -->
      <map code="0x14a" name="Eng"/><!-- LATIN CAPITAL LETTER ENG -->
      <map code="0x14b" name="eng"/><!-- LATIN SMALL LETTER ENG -->
      <map code="0x14c" name="Omacron"/><!-- LATIN CAPITAL LETTER O WITH MACRON -->
      <map code="0x14d" name="omacron"/><!-- LATIN SMALL LETTER O WITH MACRON -->
      <map code="0x14e" name="Obreve"/><!-- LATIN CAPITAL LETTER O WITH BREVE -->
      <map code="0x14f" name="obreve"/><!-- LATIN SMALL LETTER O WITH BREVE -->
      <map code="0x150" name="Ohungarumlaut"/><!-- LATIN CAPITAL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x151" name="ohungarumlaut"/><!-- LATIN SMALL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x152" name="OE"/><!-- LATIN CAPITAL LIGATURE OE -->
      <map code="0x153" name="oe"/><!-- LATIN SMALL LIGATURE OE -->
      <map code="0x154" name="Racute"/><!-- LATIN CAPITAL LETTER R WITH ACUTE -->
      <map code="0x155" name="racute"/><!-- LATIN SMALL LETTER R WITH ACUTE -->
      <map code="0x156" name="uni0156"/><!-- LATIN CAPITAL LETTER R WITH CEDILLA -->
      <map code="0x157" name="uni0157"/><!-- LATIN SMALL LETTER R WITH CEDILLA -->
      <map code="0x158" name="Rcaron"/><!-- LATIN CAPITAL LETTER R WITH CARON -->
      <map code="0x159" name="rcaron"/><!-- LATIN SMALL LETTER R WITH CARON -->
      <map code="0x15a" name="Sacute"/><!-- LATIN CAPITAL LETTER S WITH ACUTE -->
      <map code="0x15b" name="sacute"/><!-- LATIN SMALL LETTER S WITH ACUTE -->
      <map code="0x15c" name="Scircumflex"/><!-- LATIN CAPITAL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15d" name="scircumflex"/><!-- LATIN SMALL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15e" name="uni015E"/><!-- LATIN CAPITAL LETTER S WITH CEDILLA -->
      <map code="0x15f" name="uni015F"/><!-- LATIN SMALL LETTER S WITH CEDILLA -->
      <map code="0x160" name="Scaron"/><!-- LATIN CAPITAL LETTER S WITH CARON -->
      <map code="0x161" name="scaron"/><!-- LATIN SMALL LETTER S WITH CARON -->
      <map code="0x162" name="uni0162"/><!-- LATIN CAPITAL LETTER T WITH CEDILLA -->
      <map code="0x163" name="uni0163"/><!-- LATIN SMALL LETTER T WITH CEDILLA -->
      <map code="0x164" name="Tcaron"/><!-- LATIN CAPITAL LETTER T WITH CARON -->
      <map code="0x165" name="tcaron"/><!-- LATIN SMALL LETTER T WITH CARON -->
      <map code="0x166" name="Tbar"/><!-- LATIN CAPITAL LETTER T WITH STROKE -->
      <map code="0x167" name="tbar"/><!-- LATIN SMALL LETTER T WITH STROKE -->
      <map code="0x168" name="Utilde"/><!-- LATIN CAPITAL LETTER U WITH TILDE -->
      <map code="0x169" name="utilde"/><!-- LATIN SMALL LETTER U WITH TILDE -->
      <map code="0x16a" name="Umacron"/><!-- LATIN CAPITAL LETTER U WITH MACRON -->
      <map code="0x16b" name="umacron"/><!-- LATIN SMALL LETTER U WITH MACRON -->
      <map code="0x16c" name="Ubreve"/><!-- LATIN CAPITAL LETTER U WITH BREVE -->
      <map code="0x16d" name="ubreve"/><!-- LATIN SMALL LETTER U WITH BREVE -->
      <map code="0x16e" name="Uring"/><!-- LATIN CAPITAL LETTER U WITH RING ABOVE -->
      <map code="0x16f" name="uring"/><!-- LATIN SMALL LETTER U WITH RING ABOVE -->
      <map code="0x170" name="Uhungarumlaut"/><!-- LATIN CAPITAL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x171" name="uhungarumlaut"/><!-- LATIN SMALL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x172" name="Uogonek"/><!-- LATIN CAPITAL LETTER U WITH OGONEK -->
      <map code="0x173" name="uogonek"/><!-- LATIN SMALL LETTER U WITH OGONEK -->
      <map code="0x174" name="Wcircumflex"/><!-- LATIN CAPITAL LETTER W WITH CIRCUMFLEX -->
      <map code="0x175" name="wcircumflex"/><!-- LATIN SMALL LETTER W WITH CIRCUMFLEX -->
      <map code="0x176" name="Ycircumflex"/><!-- LATIN CAPITAL LETTER Y WITH CIRCUMFLEX -->
      <map code="0x177" name="ycircumflex"/><!-- LATIN SMALL LETTER Y WITH CIRCUMFLEX -->
      <map code="0x178" name="Ydieresis"/><!-- LATIN CAPITAL LETTER Y WITH DIAERESIS -->
      <map code="0x179" name="Zacute"/><!-- LATIN CAPITAL LETTER Z WITH ACUTE -->
      <map code="0x17a" name="zacute"/><!-- LATIN SMALL LETTER Z WITH ACUTE -->
      <map code="0x17b" name="Zdotaccent"/><!-- LATIN CAPITAL LETTER Z WITH DOT ABOVE -->
      <map code="0x17c" name="zdotaccent"/><!-- LATIN SMALL LETTER Z WITH DOT ABOVE -->
      <map code="0x17d" name="Zcaron"/><!-- LATIN CAPITAL LETTER Z WITH CARON -->
      <map code="0x17e" name="zcaron"/><!-- LATIN SMALL LETTER Z WITH CARON -->
      <map code="0x18f" name="uni018F"/><!-- LATIN CAPITAL LETTER SCHWA -->
      <map code="0x1a0" name="Ohorn"/><!-- LATIN CAPITAL LETTER O WITH HORN -->
      <map code="0x1a1" name="ohorn"/><!-- LATIN SMALL LETTER O WITH HORN -->
      <map code="0x1af" name="Uhorn"/><!-- LATIN CAPITAL LETTER U WITH HORN -->
      <map code="0x1b0" name="uhorn"/><!-- LATIN SMALL LETTER U WITH HORN -->
      <map code="0x1cd" name="uni01CD"/><!-- LATIN CAPITAL LETTER A WITH CARON -->
      <map code="0x1ce" name="uni01CE"/><!-- LATIN SMALL LETTER A WITH CARON -->
      <map code="0x1cf" name="uni01CF"/><!-- LATIN CAPITAL LETTER I WITH CARON -->
      <map code="0x1d0" name="uni01D0"/><!-- LATIN SMALL LETTER I WITH CARON -->
      <map code="0x1d1" name="uni01D1"/><!-- LATIN CAPITAL LETTER O WITH CARON -->
      <map code="0x1d2" name="uni01D2"/><!-- LATIN SMALL LETTER O WITH CARON -->
      <map code="0x1d3" name="uni01D3"/><!-- LATIN CAPITAL LETTER U WITH CARON -->
      <map code="0x1d4" name="uni01D4"/><!-- LATIN SMALL LETTER U WITH CARON -->
      <map code="0x1d5" name="uni01D5"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON -->
      <map code="0x1d6" name="uni01D6"/><!-- LATIN SMALL LETTER U WITH DIAERESIS AND MACRON -->
      <map code="0x1d7" name="uni01D7"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE -->
      <map code="0x1d8" name="uni01D8"/><!-- LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE -->
      <map code="0x1d9" name="uni01D9"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON -->
      <map code="0x1da" name="uni01DA"/><!-- LATIN SMALL LETTER U WITH DIAERESIS AND CARON -->
      <map code="0x1db" name="uni01DB"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE -->
      <map code="0x1dc" name="uni01DC"/><!-- LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE -->
      <map code="0x1e6" name="Gcaron"/><!-- LATIN CAPITAL LETTER G WITH CARON -->
      <map code="0x1e7" name="gcaron"/><!-- LATIN SMALL LETTER G WITH CARON -->
      <map code="0x1ea" name="uni01EA"/><!-- LATIN CAPITAL LETTER O WITH OGONEK -->
      <map code="0x1eb" name="uni01EB"/><!-- LATIN SMALL LETTER O WITH OGONEK -->
      <map code="0x1f0" name="uni01F0"/><!-- LATIN SMALL LETTER J WITH CARON -->
      <map code="0x1f8" name="uni01F8"/><!-- LATIN CAPITAL LETTER N WITH GRAVE -->
      <map code="0x1f9" name="uni01F9"/><!-- LATIN SMALL LETTER N WITH GRAVE -->
      <map code="0x218" name="uni0218"/><!-- LATIN CAPITAL LETTER S WITH COMMA BELOW -->
      <map code="0x219" name="uni0219"/><!-- LATIN SMALL LETTER S WITH COMMA BELOW -->
      <map code="0x21a" name="uni021A"/><!-- LATIN CAPITAL LETTER T WITH COMMA BELOW -->
      <map code="0x21b" name="uni021B"/><!-- LATIN SMALL LETTER T WITH COMMA BELOW -->
      <map code="0x226" name="uni0226"/><!-- LATIN CAPITAL LETTER A WITH DOT ABOVE -->
      <map code="0x227" name="uni0227"/><!-- LATIN SMALL LETTER A WITH DOT ABOVE -->
      <map code="0x22e" name="uni022E"/><!-- LATIN CAPITAL LETTER O WITH DOT ABOVE -->
      <map code="0x22f" name="uni022F"/><!-- LATIN SMALL LETTER O WITH DOT ABOVE -->
      <map code="0x232" name="uni0232"/><!-- LATIN CAPITAL LETTER Y WITH MACRON -->
      <map code="0x233" name="uni0233"/><!-- LATIN SMALL LETTER Y WITH MACRON -->
      <map code="0x237" name="uni0237"/><!-- LATIN SMALL LETTER DOTLESS J -->
      <map code="0x259" name="uni0259"/><!-- LATIN SMALL LETTER SCHWA -->
      <map code="0x2b9" name="uni02B9"/><!-- MODIFIER LETTER PRIME -->
      <map code="0x2ba" name="uni02BA"/><!-- MODIFIER LETTER DOUBLE PRIME -->
      <map code="0x2bb" name="uni02BB"/><!-- MODIFIER LETTER TURNED COMMA -->
      <map code="0x2bc" name="uni02BC"/><!-- MODIFIER LETTER APOSTROPHE -->
      <map code="0x2be" name="uni02BE"/><!-- MODIFIER LETTER RIGHT HALF RING -->
      <map code="0x2bf" name="uni02BF"/><!-- MODIFIER LETTER LEFT HALF RING -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2c7" name="caron"/><!-- CARON -->
      <map code="0x2c8" name="uni02C8"/><!-- MODIFIER LETTER VERTICAL LINE -->
      <map code="0x2cc" name="uni02CC"/><!-- MODIFIER LETTER LOW VERTICAL LINE -->
      <map code="0x2cd" name="uni02CD"/><!-- MODIFIER LETTER LOW MACRON -->
      <map code="0x2d8" name="breve"/><!-- BREVE -->
      <map code="0x2d9" name="dotaccent"/><!-- DOT ABOVE -->
      <map code="0x2da" name="ring"/><!-- RING ABOVE -->
      <map code="0x2db" name="ogonek"/><!-- OGONEK -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x2dd" name="hungarumlaut"/><!-- DOUBLE ACUTE ACCENT -->
      <map code="0x300" name="uni0300"/><!-- COMBINING GRAVE ACCENT -->
      <map code="0x301" name="uni0301"/><!-- COMBINING ACUTE ACCENT -->
      <map code="0x302" name="uni0302"/><!-- COMBINING CIRCUMFLEX ACCENT -->
      <map code="0x303" name="uni0303"/><!-- COMBINING TILDE -->
      <map code="0x304" name="uni0304"/><!-- COMBINING MACRON -->
      <map code="0x306" name="uni0306"/><!-- COMBINING BREVE -->
      <map code="0x307" name="uni0307"/><!-- COMBINING DOT ABOVE -->
      <map code="0x308" name="uni0308"/><!-- COMBINING DIAERESIS -->
      <map code="0x309" name="uni0309"/><!-- COMBINING HOOK ABOVE -->
      <map code="0x30a" name="uni030A"/><!-- COMBINING RING ABOVE -->
      <map code="0x30b" name="uni030B"/><!-- COMBINING DOUBLE ACUTE ACCENT -->
      <map code="0x30c" name="uni030C"/><!-- COMBINING CARON -->
      <map code="0x312" name="uni0312"/><!-- COMBINING TURNED COMMA ABOVE -->
      <map code="0x315" name="uni0315"/><!-- COMBINING COMMA ABOVE RIGHT -->
      <map code="0x323" name="uni0323"/><!-- COMBINING DOT BELOW -->
      <map code="0x324" name="uni0324"/><!-- COMBINING DIAERESIS BELOW -->
      <map code="0x326" name="uni0326"/><!-- COMBINING COMMA BELOW -->
      <map code="0x327" name="uni0327"/><!-- COMBINING CEDILLA -->
      <map code="0x328" name="uni0328"/><!-- COMBINING OGONEK -->
      <map code="0x32d" name="uni032D"/><!-- COMBINING CIRCUMFLEX ACCENT BELOW -->
      <map code="0x32e" name="uni032E"/><!-- COMBINING BREVE BELOW -->
      <map code="0x331" name="uni0331"/><!-- COMBINING MACRON BELOW -->
      <map code="0xe3f" name="uni0E3F"/><!-- THAI CURRENCY SYMBOL BAHT -->
      <map code="0x1e06" name="uni1E06"/><!-- LATIN CAPITAL LETTER B WITH LINE BELOW -->
      <map code="0x1e07" name="uni1E07"/><!-- LATIN SMALL LETTER B WITH LINE BELOW -->
      <map code="0x1e0c" name="uni1E0C"/><!-- LATIN CAPITAL LETTER D WITH DOT BELOW -->
      <map code="0x1e0d" name="uni1E0D"/><!-- LATIN SMALL LETTER D WITH DOT BELOW -->
      <map code="0x1e0e" name="uni1E0E"/><!-- LATIN CAPITAL LETTER D WITH LINE BELOW -->
      <map code="0x1e0f" name="uni1E0F"/><!-- LATIN SMALL LETTER D WITH LINE BELOW -->
      <map code="0x1e12" name="uni1E12"/><!-- LATIN CAPITAL LETTER D WITH CIRCUMFLEX BELOW -->
      <map code="0x1e13" name="uni1E13"/><!-- LATIN SMALL LETTER D WITH CIRCUMFLEX BELOW -->
      <map code="0x1e20" name="uni1E20"/><!-- LATIN CAPITAL LETTER G WITH MACRON -->
      <map code="0x1e21" name="uni1E21"/><!-- LATIN SMALL LETTER G WITH MACRON -->
      <map code="0x1e24" name="uni1E24"/><!-- LATIN CAPITAL LETTER H WITH DOT BELOW -->
      <map code="0x1e25" name="uni1E25"/><!-- LATIN SMALL LETTER H WITH DOT BELOW -->
      <map code="0x1e28" name="uni1E28"/><!-- LATIN CAPITAL LETTER H WITH CEDILLA -->
      <map code="0x1e29" name="uni1E29"/><!-- LATIN SMALL LETTER H WITH CEDILLA -->
      <map code="0x1e2a" name="uni1E2A"/><!-- LATIN CAPITAL LETTER H WITH BREVE BELOW -->
      <map code="0x1e2b" name="uni1E2B"/><!-- LATIN SMALL LETTER H WITH BREVE BELOW -->
      <map code="0x1e32" name="uni1E32"/><!-- LATIN CAPITAL LETTER K WITH DOT BELOW -->
      <map code="0x1e33" name="uni1E33"/><!-- LATIN SMALL LETTER K WITH DOT BELOW -->
      <map code="0x1e34" name="uni1E34"/><!-- LATIN CAPITAL LETTER K WITH LINE BELOW -->
      <map code="0x1e35" name="uni1E35"/><!-- LATIN SMALL LETTER K WITH LINE BELOW -->
      <map code="0x1e36" name="uni1E36"/><!-- LATIN CAPITAL LETTER L WITH DOT BELOW -->
      <map code="0x1e37" name="uni1E37"/><!-- LATIN SMALL LETTER L WITH DOT BELOW -->
      <map code="0x1e38" name="uni1E38"/><!-- LATIN CAPITAL LETTER L WITH DOT BELOW AND MACRON -->
      <map code="0x1e39" name="uni1E39"/><!-- LATIN SMALL LETTER L WITH DOT BELOW AND MACRON -->
      <map code="0x1e3a" name="uni1E3A"/><!-- LATIN CAPITAL LETTER L WITH LINE BELOW -->
      <map code="0x1e3b" name="uni1E3B"/><!-- LATIN SMALL LETTER L WITH LINE BELOW -->
      <map code="0x1e3c" name="uni1E3C"/><!-- LATIN CAPITAL LETTER L WITH CIRCUMFLEX BELOW -->
      <map code="0x1e3d" name="uni1E3D"/><!-- LATIN SMALL LETTER L WITH CIRCUMFLEX BELOW -->
      <map code="0x1e3e" name="uni1E3E"/><!-- LATIN CAPITAL LETTER M WITH ACUTE -->
      <map code="0x1e3f" name="uni1E3F"/><!-- LATIN SMALL LETTER M WITH ACUTE -->
      <map code="0x1e40" name="uni1E40"/><!-- LATIN CAPITAL LETTER M WITH DOT ABOVE -->
      <map code="0x1e41" name="uni1E41"/><!-- LATIN SMALL LETTER M WITH DOT ABOVE -->
      <map code="0x1e42" name="uni1E42"/><!-- LATIN CAPITAL LETTER M WITH DOT BELOW -->
      <map code="0x1e43" name="uni1E43"/><!-- LATIN SMALL LETTER M WITH DOT BELOW -->
      <map code="0x1e44" name="uni1E44"/><!-- LATIN CAPITAL LETTER N WITH DOT ABOVE -->
      <map code="0x1e45" name="uni1E45"/><!-- LATIN SMALL LETTER N WITH DOT ABOVE -->
      <map code="0x1e46" name="uni1E46"/><!-- LATIN CAPITAL LETTER N WITH DOT BELOW -->
      <map code="0x1e47" name="uni1E47"/><!-- LATIN SMALL LETTER N WITH DOT BELOW -->
      <map code="0x1e48" name="uni1E48"/><!-- LATIN CAPITAL LETTER N WITH LINE BELOW -->
      <map code="0x1e49" name="uni1E49"/><!-- LATIN SMALL LETTER N WITH LINE BELOW -->
      <map code="0x1e4a" name="uni1E4A"/><!-- LATIN CAPITAL LETTER N WITH CIRCUMFLEX BELOW -->
      <map code="0x1e4b" name="uni1E4B"/><!-- LATIN SMALL LETTER N WITH CIRCUMFLEX BELOW -->
      <map code="0x1e58" name="uni1E58"/><!-- LATIN CAPITAL LETTER R WITH DOT ABOVE -->
      <map code="0x1e59" name="uni1E59"/><!-- LATIN SMALL LETTER R WITH DOT ABOVE -->
      <map code="0x1e5a" name="uni1E5A"/><!-- LATIN CAPITAL LETTER R WITH DOT BELOW -->
      <map code="0x1e5b" name="uni1E5B"/><!-- LATIN SMALL LETTER R WITH DOT BELOW -->
      <map code="0x1e5c" name="uni1E5C"/><!-- LATIN CAPITAL LETTER R WITH DOT BELOW AND MACRON -->
      <map code="0x1e5d" name="uni1E5D"/><!-- LATIN SMALL LETTER R WITH DOT BELOW AND MACRON -->
      <map code="0x1e5e" name="uni1E5E"/><!-- LATIN CAPITAL LETTER R WITH LINE BELOW -->
      <map code="0x1e5f" name="uni1E5F"/><!-- LATIN SMALL LETTER R WITH LINE BELOW -->
      <map code="0x1e62" name="uni1E62"/><!-- LATIN CAPITAL LETTER S WITH DOT BELOW -->
      <map code="0x1e63" name="uni1E63"/><!-- LATIN SMALL LETTER S WITH DOT BELOW -->
      <map code="0x1e6c" name="uni1E6C"/><!-- LATIN CAPITAL LETTER T WITH DOT BELOW -->
      <map code="0x1e6d" name="uni1E6D"/><!-- LATIN SMALL LETTER T WITH DOT BELOW -->
      <map code="0x1e6e" name="uni1E6E"/><!-- LATIN CAPITAL LETTER T WITH LINE BELOW -->
      <map code="0x1e6f" name="uni1E6F"/><!-- LATIN SMALL LETTER T WITH LINE BELOW -->
      <map code="0x1e70" name="uni1E70"/><!-- LATIN CAPITAL LETTER T WITH CIRCUMFLEX BELOW -->
      <map code="0x1e71" name="uni1E71"/><!-- LATIN SMALL LETTER T WITH CIRCUMFLEX BELOW -->
      <map code="0x1e7e" name="uni1E7E"/><!-- LATIN CAPITAL LETTER V WITH DOT BELOW -->
      <map code="0x1e7f" name="uni1E7F"/><!-- LATIN SMALL LETTER V WITH DOT BELOW -->
      <map code="0x1e80" name="Wgrave"/><!-- LATIN CAPITAL LETTER W WITH GRAVE -->
      <map code="0x1e81" name="wgrave"/><!-- LATIN SMALL LETTER W WITH GRAVE -->
      <map code="0x1e82" name="Wacute"/><!-- LATIN CAPITAL LETTER W WITH ACUTE -->
      <map code="0x1e83" name="wacute"/><!-- LATIN SMALL LETTER W WITH ACUTE -->
      <map code="0x1e84" name="Wdieresis"/><!-- LATIN CAPITAL LETTER W WITH DIAERESIS -->
      <map code="0x1e85" name="wdieresis"/><!-- LATIN SMALL LETTER W WITH DIAERESIS -->
      <map code="0x1e8c" name="uni1E8C"/><!-- LATIN CAPITAL LETTER X WITH DIAERESIS -->
      <map code="0x1e8d" name="uni1E8D"/><!-- LATIN SMALL LETTER X WITH DIAERESIS -->
      <map code="0x1e8e" name="uni1E8E"/><!-- LATIN CAPITAL LETTER Y WITH DOT ABOVE -->
      <map code="0x1e8f" name="uni1E8F"/><!-- LATIN SMALL LETTER Y WITH DOT ABOVE -->
      <map code="0x1e90" name="uni1E90"/><!-- LATIN CAPITAL LETTER Z WITH CIRCUMFLEX -->
      <map code="0x1e91" name="uni1E91"/><!-- LATIN SMALL LETTER Z WITH CIRCUMFLEX -->
      <map code="0x1e92" name="uni1E92"/><!-- LATIN CAPITAL LETTER Z WITH DOT BELOW -->
      <map code="0x1e93" name="uni1E93"/><!-- LATIN SMALL LETTER Z WITH DOT BELOW -->
      <map code="0x1e94" name="uni1E94"/><!-- LATIN CAPITAL LETTER Z WITH LINE BELOW -->
      <map code="0x1e95" name="uni1E95"/><!-- LATIN SMALL LETTER Z WITH LINE BELOW -->
      <map code="0x1e96" name="uni1E96"/><!-- LATIN SMALL LETTER H WITH LINE BELOW -->
      <map code="0x1e9e" name="uni1E9E"/><!-- LATIN CAPITAL LETTER SHARP S -->
      <map code="0x1ea0" name="uni1EA0"/><!-- LATIN CAPITAL LETTER A WITH DOT BELOW -->
      <map code="0x1ea1" name="uni1EA1"/><!-- LATIN SMALL LETTER A WITH DOT BELOW -->
      <map code="0x1ea2" name="uni1EA2"/><!-- LATIN CAPITAL LETTER A WITH HOOK ABOVE -->
      <map code="0x1ea3" name="uni1EA3"/><!-- LATIN SMALL LETTER A WITH HOOK ABOVE -->
      <map code="0x1ea4" name="uni1EA4"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ea5" name="uni1EA5"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ea6" name="uni1EA6"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ea7" name="uni1EA7"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ea8" name="uni1EA8"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ea9" name="uni1EA9"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1eaa" name="uni1EAA"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1eab" name="uni1EAB"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1eac" name="uni1EAC"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ead" name="uni1EAD"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1eae" name="uni1EAE"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND ACUTE -->
      <map code="0x1eaf" name="uni1EAF"/><!-- LATIN SMALL LETTER A WITH BREVE AND ACUTE -->
      <map code="0x1eb0" name="uni1EB0"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND GRAVE -->
      <map code="0x1eb1" name="uni1EB1"/><!-- LATIN SMALL LETTER A WITH BREVE AND GRAVE -->
      <map code="0x1eb2" name="uni1EB2"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND HOOK ABOVE -->
      <map code="0x1eb3" name="uni1EB3"/><!-- LATIN SMALL LETTER A WITH BREVE AND HOOK ABOVE -->
      <map code="0x1eb4" name="uni1EB4"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND TILDE -->
      <map code="0x1eb5" name="uni1EB5"/><!-- LATIN SMALL LETTER A WITH BREVE AND TILDE -->
      <map code="0x1eb6" name="uni1EB6"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW -->
      <map code="0x1eb7" name="uni1EB7"/><!-- LATIN SMALL LETTER A WITH BREVE AND DOT BELOW -->
      <map code="0x1eb8" name="uni1EB8"/><!-- LATIN CAPITAL LETTER E WITH DOT BELOW -->
      <map code="0x1eb9" name="uni1EB9"/><!-- LATIN SMALL LETTER E WITH DOT BELOW -->
      <map code="0x1eba" name="uni1EBA"/><!-- LATIN CAPITAL LETTER E WITH HOOK ABOVE -->
      <map code="0x1ebb" name="uni1EBB"/><!-- LATIN SMALL LETTER E WITH HOOK ABOVE -->
      <map code="0x1ebc" name="uni1EBC"/><!-- LATIN CAPITAL LETTER E WITH TILDE -->
      <map code="0x1ebd" name="uni1EBD"/><!-- LATIN SMALL LETTER E WITH TILDE -->
      <map code="0x1ebe" name="uni1EBE"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ebf" name="uni1EBF"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ec0" name="uni1EC0"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ec1" name="uni1EC1"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ec2" name="uni1EC2"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ec3" name="uni1EC3"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ec4" name="uni1EC4"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ec5" name="uni1EC5"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ec6" name="uni1EC6"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ec7" name="uni1EC7"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ec8" name="uni1EC8"/><!-- LATIN CAPITAL LETTER I WITH HOOK ABOVE -->
      <map code="0x1ec9" name="uni1EC9"/><!-- LATIN SMALL LETTER I WITH HOOK ABOVE -->
      <map code="0x1eca" name="uni1ECA"/><!-- LATIN CAPITAL LETTER I WITH DOT BELOW -->
      <map code="0x1ecb" name="uni1ECB"/><!-- LATIN SMALL LETTER I WITH DOT BELOW -->
      <map code="0x1ecc" name="uni1ECC"/><!-- LATIN CAPITAL LETTER O WITH DOT BELOW -->
      <map code="0x1ecd" name="uni1ECD"/><!-- LATIN SMALL LETTER O WITH DOT BELOW -->
      <map code="0x1ece" name="uni1ECE"/><!-- LATIN CAPITAL LETTER O WITH HOOK ABOVE -->
      <map code="0x1ecf" name="uni1ECF"/><!-- LATIN SMALL LETTER O WITH HOOK ABOVE -->
      <map code="0x1ed0" name="uni1ED0"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ed1" name="uni1ED1"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ed2" name="uni1ED2"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ed3" name="uni1ED3"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ed4" name="uni1ED4"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ed5" name="uni1ED5"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ed6" name="uni1ED6"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ed7" name="uni1ED7"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ed8" name="uni1ED8"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ed9" name="uni1ED9"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1eda" name="uni1EDA"/><!-- LATIN CAPITAL LETTER O WITH HORN AND ACUTE -->
      <map code="0x1edb" name="uni1EDB"/><!-- LATIN SMALL LETTER O WITH HORN AND ACUTE -->
      <map code="0x1edc" name="uni1EDC"/><!-- LATIN CAPITAL LETTER O WITH HORN AND GRAVE -->
      <map code="0x1edd" name="uni1EDD"/><!-- LATIN SMALL LETTER O WITH HORN AND GRAVE -->
      <map code="0x1ede" name="uni1EDE"/><!-- LATIN CAPITAL LETTER O WITH HORN AND HOOK ABOVE -->
      <map code="0x1edf" name="uni1EDF"/><!-- LATIN SMALL LETTER O WITH HORN AND HOOK ABOVE -->
      <map code="0x1ee0" name="uni1EE0"/><!-- LATIN CAPITAL LETTER O WITH HORN AND TILDE -->
      <map code="0x1ee1" name="uni1EE1"/><!-- LATIN SMALL LETTER O WITH HORN AND TILDE -->
      <map code="0x1ee2" name="uni1EE2"/><!-- LATIN CAPITAL LETTER O WITH HORN AND DOT BELOW -->
      <map code="0x1ee3" name="uni1EE3"/><!-- LATIN SMALL LETTER O WITH HORN AND DOT BELOW -->
      <map code="0x1ee4" name="uni1EE4"/><!-- LATIN CAPITAL LETTER U WITH DOT BELOW -->
      <map code="0x1ee5" name="uni1EE5"/><!-- LATIN SMALL LETTER U WITH DOT BELOW -->
      <map code="0x1ee6" name="uni1EE6"/><!-- LATIN CAPITAL LETTER U WITH HOOK ABOVE -->
      <map code="0x1ee7" name="uni1EE7"/><!-- LATIN SMALL LETTER U WITH HOOK ABOVE -->
      <map code="0x1ee8" name="uni1EE8"/><!-- LATIN CAPITAL LETTER U WITH HORN AND ACUTE -->
      <map code="0x1ee9" name="uni1EE9"/><!-- LATIN SMALL LETTER U WITH HORN AND ACUTE -->
      <map code="0x1eea" name="uni1EEA"/><!-- LATIN CAPITAL LETTER U WITH HORN AND GRAVE -->
      <map code="0x1eeb" name="uni1EEB"/><!-- LATIN SMALL LETTER U WITH HORN AND GRAVE -->
      <map code="0x1eec" name="uni1EEC"/><!-- LATIN CAPITAL LETTER U WITH HORN AND HOOK ABOVE -->
      <map code="0x1eed" name="uni1EED"/><!-- LATIN SMALL LETTER U WITH HORN AND HOOK ABOVE -->
      <map code="0x1eee" name="uni1EEE"/><!-- LATIN CAPITAL LETTER U WITH HORN AND TILDE -->
      <map code="0x1eef" name="uni1EEF"/><!-- LATIN SMALL LETTER U WITH HORN AND TILDE -->
      <map code="0x1ef0" name="uni1EF0"/><!-- LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW -->
      <map code="0x1ef1" name="uni1EF1"/><!-- LATIN SMALL LETTER U WITH HORN AND DOT BELOW -->
      <map code="0x1ef2" name="Ygrave"/><!-- LATIN CAPITAL LETTER Y WITH GRAVE -->
      <map code="0x1ef3" name="ygrave"/><!-- LATIN SMALL LETTER Y WITH GRAVE -->
      <map code="0x1ef4" name="uni1EF4"/><!-- LATIN CAPITAL LETTER Y WITH DOT BELOW -->
      <map code="0x1ef5" name="uni1EF5"/><!-- LATIN SMALL LETTER Y WITH DOT BELOW -->
      <map code="0x1ef6" name="uni1EF6"/><!-- LATIN CAPITAL LETTER Y WITH HOOK ABOVE -->
      <map code="0x1ef7" name="uni1EF7"/><!-- LATIN SMALL LETTER Y WITH HOOK ABOVE -->
      <map code="0x1ef8" name="uni1EF8"/><!-- LATIN CAPITAL LETTER Y WITH TILDE -->
      <map code="0x1ef9" name="uni1EF9"/><!-- LATIN SMALL LETTER Y WITH TILDE -->
      <map code="0x1fed" name="uni00A80300"/><!-- GREEK DIALYTIKA AND VARIA -->
      <map code="0x1fee" name="uni00A80301"/><!-- GREEK DIALYTIKA AND OXIA -->
      <map code="0x2011" name="uni2011"/><!-- NON-BREAKING HYPHEN -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2015" name="uni2015"/><!-- HORIZONTAL BAR -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201a" name="quotesinglbase"/><!-- SINGLE LOW-9 QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2020" name="dagger"/><!-- DAGGER -->
      <map code="0x2021" name="daggerdbl"/><!-- DOUBLE DAGGER -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2025" name="uni2025"/><!-- TWO DOT LEADER -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x2039" name="guilsinglleft"/><!-- SINGLE LEFT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203a" name="guilsinglright"/><!-- SINGLE RIGHT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x2044" name="fraction"/><!-- FRACTION SLASH -->
      <map code="0x2070" name="zero.sup"/><!-- SUPERSCRIPT ZERO -->
      <map code="0x2074" name="four.sup"/><!-- SUPERSCRIPT FOUR -->
      <map code="0x2075" name="five.sup"/><!-- SUPERSCRIPT FIVE -->
      <map code="0x2076" name="six.sup"/><!-- SUPERSCRIPT SIX -->
      <map code="0x2077" name="seven.sup"/><!-- SUPERSCRIPT SEVEN -->
      <map code="0x2078" name="eight.sup"/><!-- SUPERSCRIPT EIGHT -->
      <map code="0x2079" name="nine.sup"/><!-- SUPERSCRIPT NINE -->
      <map code="0x2080" name="zero.inf"/><!-- SUBSCRIPT ZERO -->
      <map code="0x2081" name="one.inf"/><!-- SUBSCRIPT ONE -->
      <map code="0x2082" name="two.inf"/><!-- SUBSCRIPT TWO -->
      <map code="0x2083" name="three.inf"/><!-- SUBSCRIPT THREE -->
      <map code="0x2084" name="four.inf"/><!-- SUBSCRIPT FOUR -->
      <map code="0x2085" name="five.inf"/><!-- SUBSCRIPT FIVE -->
      <map code="0x2086" name="six.inf"/><!-- SUBSCRIPT SIX -->
      <map code="0x2087" name="seven.inf"/><!-- SUBSCRIPT SEVEN -->
      <map code="0x2088" name="eight.inf"/><!-- SUBSCRIPT EIGHT -->
      <map code="0x2089" name="nine.inf"/><!-- SUBSCRIPT NINE -->
      <map code="0x20a6" name="uni20A6"/><!-- NAIRA SIGN -->
      <map code="0x20a9" name="uni20A9"/><!-- WON SIGN -->
      <map code="0x20ab" name="dong"/><!-- DONG SIGN -->
      <map code="0x20ac" name="Euro"/><!-- EURO SIGN -->
      <map code="0x20b1" name="uni20B1"/><!-- PESO SIGN -->
      <map code="0x20b9" name="uni20B9"/><!-- INDIAN RUPEE SIGN -->
      <map code="0x20ba" name="uni20BA"/><!-- TURKISH LIRA SIGN -->
      <map code="0x20bd" name="uni20BD"/><!-- RUBLE SIGN -->
      <map code="0x2117" name="uni2117"/><!-- SOUND RECORDING COPYRIGHT -->
      <map code="0x2120" name="uni2120"/><!-- SERVICE MARK -->
      <map code="0x2122" name="trademark"/><!-- TRADE MARK SIGN -->
      <map code="0x2153" name="onethird"/><!-- VULGAR FRACTION ONE THIRD -->
      <map code="0x2154" name="twothirds"/><!-- VULGAR FRACTION TWO THIRDS -->
      <map code="0x2155" name="onefifth"/><!-- VULGAR FRACTION ONE FIFTH -->
      <map code="0x2156" name="twofifths"/><!-- VULGAR FRACTION TWO FIFTHS -->
      <map code="0x2157" name="threefifths"/><!-- VULGAR FRACTION THREE FIFTHS -->
      <map code="0x2158" name="fourfifths"/><!-- VULGAR FRACTION FOUR FIFTHS -->
      <map code="0x2159" name="onesixth"/><!-- VULGAR FRACTION ONE SIXTH -->
      <map code="0x215a" name="fivesixths"/><!-- VULGAR FRACTION FIVE SIXTHS -->
      <map code="0x215b" name="oneeighth"/><!-- VULGAR FRACTION ONE EIGHTH -->
      <map code="0x215c" name="threeeighths"/><!-- VULGAR FRACTION THREE EIGHTHS -->
      <map code="0x215d" name="fiveeighths"/><!-- VULGAR FRACTION FIVE EIGHTHS -->
      <map code="0x215e" name="seveneighths"/><!-- VULGAR FRACTION SEVEN EIGHTHS -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x2248" name="approxequal"/><!-- ALMOST EQUAL TO -->
      <map code="0x2260" name="notequal"/><!-- NOT EQUAL TO -->
      <map code="0x2264" name="lessequal"/><!-- LESS-THAN OR EQUAL TO -->
      <map code="0x2265" name="greaterequal"/><!-- GREATER-THAN OR EQUAL TO -->
      <map code="0xa788" name="uniA788"/><!-- MODIFIER LETTER LOW CIRCUMFLEX ACCENT -->
    </cmap_format_4>
    <cmap_format_6 platformID="1" platEncID="0" language="0">
      <map code="0x9" name="space"/>
      <map code="0xd" name="space"/>
      <map code="0x20" name="space"/>
      <map code="0x21" name="exclam"/>
      <map code="0x22" name="quotedbl"/>
      <map code="0x23" name="numbersign"/>
      <map code="0x24" name="dollar"/>
      <map code="0x25" name="percent"/>
      <map code="0x26" name="ampersand"/>
      <map code="0x27" name="quotesingle"/>
      <map code="0x28" name="parenleft"/>
      <map code="0x29" name="parenright"/>
      <map code="0x2a" name="asterisk"/>
      <map code="0x2b" name="plus"/>
      <map code="0x2c" name="comma"/>
      <map code="0x2d" name="hyphen"/>
      <map code="0x2e" name="period"/>
      <map code="0x2f" name="slash"/>
      <map code="0x30" name="zero"/>
      <map code="0x31" name="one"/>
      <map code="0x32" name="two"/>
      <map code="0x33" name="three"/>
      <map code="0x34" name="four"/>
      <map code="0x35" name="five"/>
      <map code="0x36" name="six"/>
      <map code="0x37" name="seven"/>
      <map code="0x38" name="eight"/>
      <map code="0x39" name="nine"/>
      <map code="0x3a" name="colon"/>
      <map code="0x3b" name="semicolon"/>
      <map code="0x3c" name="less"/>
      <map code="0x3d" name="equal"/>
      <map code="0x3e" name="greater"/>
      <map code="0x3f" name="question"/>
      <map code="0x40" name="at"/>
      <map code="0x41" name="A"/>
      <map code="0x42" name="B"/>
      <map code="0x43" name="C"/>
      <map code="0x44" name="D"/>
      <map code="0x45" name="E"/>
      <map code="0x46" name="F"/>
      <map code="0x47" name="G"/>
      <map code="0x48" name="H"/>
      <map code="0x49" name="I"/>
      <map code="0x4a" name="J"/>
      <map code="0x4b" name="K"/>
      <map code="0x4c" name="L"/>
      <map code="0x4d" name="M"/>
      <map code="0x4e" name="N"/>
      <map code="0x4f" name="O"/>
      <map code="0x50" name="P"/>
      <map code="0x51" name="Q"/>
      <map code="0x52" name="R"/>
      <map code="0x53" name="S"/>
      <map code="0x54" name="T"/>
      <map code="0x55" name="U"/>
      <map code="0x56" name="V"/>
      <map code="0x57" name="W"/>
      <map code="0x58" name="X"/>
      <map code="0x59" name="Y"/>
      <map code="0x5a" name="Z"/>
      <map code="0x5b" name="bracketleft"/>
      <map code="0x5c" name="backslash"/>
      <map code="0x5d" name="bracketright"/>
      <map code="0x5e" name="asciicircum"/>
      <map code="0x5f" name="underscore"/>
      <map code="0x60" name="grave"/>
      <map code="0x61" name="a"/>
      <map code="0x62" name="b"/>
      <map code="0x63" name="c"/>
      <map code="0x64" name="d"/>
      <map code="0x65" name="e"/>
      <map code="0x66" name="f"/>
      <map code="0x67" name="g"/>
      <map code="0x68" name="h"/>
      <map code="0x69" name="i"/>
      <map code="0x6a" name="j"/>
      <map code="0x6b" name="k"/>
      <map code="0x6c" name="l"/>
      <map code="0x6d" name="m"/>
      <map code="0x6e" name="n"/>
      <map code="0x6f" name="o"/>
      <map code="0x70" name="p"/>
      <map code="0x71" name="q"/>
      <map code="0x72" name="r"/>
      <map code="0x73" name="s"/>
      <map code="0x74" name="t"/>
      <map code="0x75" name="u"/>
      <map code="0x76" name="v"/>
      <map code="0x77" name="w"/>
      <map code="0x78" name="x"/>
      <map code="0x79" name="y"/>
      <map code="0x7a" name="z"/>
      <map code="0x7b" name="braceleft"/>
      <map code="0x7c" name="bar"/>
      <map code="0x7d" name="braceright"/>
      <map code="0x7e" name="asciitilde"/>
      <map code="0x80" name="Adieresis"/>
      <map code="0x81" name="Aring"/>
      <map code="0x82" name="Ccedilla"/>
      <map code="0x83" name="Eacute"/>
      <map code="0x84" name="Ntilde"/>
      <map code="0x85" name="Odieresis"/>
      <map code="0x86" name="Udieresis"/>
      <map code="0x87" name="aacute"/>
      <map code="0x88" name="agrave"/>
      <map code="0x89" name="acircumflex"/>
      <map code="0x8a" name="adieresis"/>
      <map code="0x8b" name="atilde"/>
      <map code="0x8c" name="aring"/>
      <map code="0x8d" name="ccedilla"/>
      <map code="0x8e" name="eacute"/>
      <map code="0x8f" name="egrave"/>
      <map code="0x90" name="ecircumflex"/>
      <map code="0x91" name="edieresis"/>
      <map code="0x92" name="iacute"/>
      <map code="0x93" name="igrave"/>
      <map code="0x94" name="icircumflex"/>
      <map code="0x95" name="idieresis"/>
      <map code="0x96" name="ntilde"/>
      <map code="0x97" name="oacute"/>
      <map code="0x98" name="ograve"/>
      <map code="0x99" name="ocircumflex"/>
      <map code="0x9a" name="odieresis"/>
      <map code="0x9b" name="otilde"/>
      <map code="0x9c" name="uacute"/>
      <map code="0x9d" name="ugrave"/>
      <map code="0x9e" name="ucircumflex"/>
      <map code="0x9f" name="udieresis"/>
      <map code="0xa0" name="dagger"/>
      <map code="0xa1" name="degree"/>
      <map code="0xa2" name="cent"/>
      <map code="0xa3" name="sterling"/>
      <map code="0xa4" name="section"/>
      <map code="0xa5" name="bullet"/>
      <map code="0xa6" name="paragraph"/>
      <map code="0xa7" name="germandbls"/>
      <map code="0xa8" name="registered"/>
      <map code="0xa9" name="copyright"/>
      <map code="0xaa" name="trademark"/>
      <map code="0xab" name="acute"/>
      <map code="0xac" name="dieresis"/>
      <map code="0xad" name="notequal"/>
      <map code="0xae" name="AE"/>
      <map code="0xaf" name="Oslash"/>
      <map code="0xb1" name="plusminus"/>
      <map code="0xb2" name="lessequal"/>
      <map code="0xb3" name="greaterequal"/>
      <map code="0xb4" name="yen"/>
      <map code="0xb5" name="mu"/>
      <map code="0xbb" name="ordfeminine"/>
      <map code="0xbc" name="ordmasculine"/>
      <map code="0xbe" name="ae"/>
      <map code="0xbf" name="oslash"/>
      <map code="0xc0" name="questiondown"/>
      <map code="0xc1" name="exclamdown"/>
      <map code="0xc5" name="approxequal"/>
      <map code="0xc7" name="uni00AB"/>
      <map code="0xc8" name="uni00BB"/>
      <map code="0xc9" name="ellipsis"/>
      <map code="0xca" name="uni00A0"/>
      <map code="0xcb" name="Agrave"/>
      <map code="0xcc" name="Atilde"/>
      <map code="0xcd" name="Otilde"/>
      <map code="0xce" name="OE"/>
      <map code="0xcf" name="oe"/>
      <map code="0xd0" name="endash"/>
      <map code="0xd1" name="emdash"/>
      <map code="0xd2" name="quotedblleft"/>
      <map code="0xd3" name="quotedblright"/>
      <map code="0xd4" name="quoteleft"/>
      <map code="0xd5" name="quoteright"/>
      <map code="0xd6" name="divide"/>
      <map code="0xd8" name="ydieresis"/>
      <map code="0xd9" name="Ydieresis"/>
      <map code="0xda" name="fraction"/>
      <map code="0xdb" name="Euro"/>
      <map code="0xdc" name="guilsinglleft"/>
      <map code="0xdd" name="guilsinglright"/>
      <map code="0xe0" name="daggerdbl"/>
      <map code="0xe1" name="periodcentered"/>
      <map code="0xe2" name="quotesinglbase"/>
      <map code="0xe3" name="quotedblbase"/>
      <map code="0xe5" name="Acircumflex"/>
      <map code="0xe6" name="Ecircumflex"/>
      <map code="0xe7" name="Aacute"/>
      <map code="0xe8" name="Edieresis"/>
      <map code="0xe9" name="Egrave"/>
      <map code="0xea" name="Iacute"/>
      <map code="0xeb" name="Icircumflex"/>
      <map code="0xec" name="Idieresis"/>
      <map code="0xed" name="Igrave"/>
      <map code="0xee" name="Oacute"/>
      <map code="0xef" name="Ocircumflex"/>
      <map code="0xf1" name="Ograve"/>
      <map code="0xf2" name="Uacute"/>
      <map code="0xf3" name="Ucircumflex"/>
      <map code="0xf4" name="Ugrave"/>
      <map code="0xf5" name="dotlessi"/>
      <map code="0xf6" name="circumflex"/>
      <map code="0xf7" name="tilde"/>
      <map code="0xf8" name="macron"/>
      <map code="0xf9" name="breve"/>
      <map code="0xfa" name="dotaccent"/>
      <map code="0xfb" name="ring"/>
      <map code="0xfc" name="cedilla"/>
      <map code="0xfd" name="hungarumlaut"/>
      <map code="0xfe" name="ogonek"/>
      <map code="0xff" name="caron"/>
    </cmap_format_6>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0xa1" name="exclamdown"/><!-- INVERTED EXCLAMATION MARK -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa8" name="dieresis"/><!-- DIAERESIS -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xaa" name="ordfeminine"/><!-- FEMININE ORDINAL INDICATOR -->
      <map code="0xab" name="uni00AB"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xae" name="registered"/><!-- REGISTERED SIGN -->
      <map code="0xaf" name="macron"/><!-- MACRON -->
      <map code="0xb0" name="degree"/><!-- DEGREE SIGN -->
      <map code="0xb1" name="plusminus"/><!-- PLUS-MINUS SIGN -->
      <map code="0xb2" name="two.sup"/><!-- SUPERSCRIPT TWO -->
      <map code="0xb3" name="three.sup"/><!-- SUPERSCRIPT THREE -->
      <map code="0xb4" name="acute"/><!-- ACUTE ACCENT -->
      <map code="0xb5" name="mu"/><!-- MICRO SIGN -->
      <map code="0xb6" name="paragraph"/><!-- PILCROW SIGN -->
      <map code="0xb7" name="periodcentered"/><!-- MIDDLE DOT -->
      <map code="0xb8" name="cedilla"/><!-- CEDILLA -->
      <map code="0xb9" name="one.sup"/><!-- SUPERSCRIPT ONE -->
      <map code="0xba" name="ordmasculine"/><!-- MASCULINE ORDINAL INDICATOR -->
      <map code="0xbb" name="uni00BB"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbc" name="onequarter"/><!-- VULGAR FRACTION ONE QUARTER -->
      <map code="0xbd" name="onehalf"/><!-- VULGAR FRACTION ONE HALF -->
      <map code="0xbe" name="threequarters"/><!-- VULGAR FRACTION THREE QUARTERS -->
      <map code="0xbf" name="questiondown"/><!-- INVERTED QUESTION MARK -->
      <map code="0xc0" name="Agrave"/><!-- LATIN CAPITAL LETTER A WITH GRAVE -->
      <map code="0xc1" name="Aacute"/><!-- LATIN CAPITAL LETTER A WITH ACUTE -->
      <map code="0xc2" name="Acircumflex"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX -->
      <map code="0xc3" name="Atilde"/><!-- LATIN CAPITAL LETTER A WITH TILDE -->
      <map code="0xc4" name="Adieresis"/><!-- LATIN CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0xc5" name="Aring"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE -->
      <map code="0xc6" name="AE"/><!-- LATIN CAPITAL LETTER AE -->
      <map code="0xc7" name="Ccedilla"/><!-- LATIN CAPITAL LETTER C WITH CEDILLA -->
      <map code="0xc8" name="Egrave"/><!-- LATIN CAPITAL LETTER E WITH GRAVE -->
      <map code="0xc9" name="Eacute"/><!-- LATIN CAPITAL LETTER E WITH ACUTE -->
      <map code="0xca" name="Ecircumflex"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX -->
      <map code="0xcb" name="Edieresis"/><!-- LATIN CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0xcc" name="Igrave"/><!-- LATIN CAPITAL LETTER I WITH GRAVE -->
      <map code="0xcd" name="Iacute"/><!-- LATIN CAPITAL LETTER I WITH ACUTE -->
      <map code="0xce" name="Icircumflex"/><!-- LATIN CAPITAL LETTER I WITH CIRCUMFLEX -->
      <map code="0xcf" name="Idieresis"/><!-- LATIN CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0xd0" name="Eth"/><!-- LATIN CAPITAL LETTER ETH -->
      <map code="0xd1" name="Ntilde"/><!-- LATIN CAPITAL LETTER N WITH TILDE -->
      <map code="0xd2" name="Ograve"/><!-- LATIN CAPITAL LETTER O WITH GRAVE -->
      <map code="0xd3" name="Oacute"/><!-- LATIN CAPITAL LETTER O WITH ACUTE -->
      <map code="0xd4" name="Ocircumflex"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX -->
      <map code="0xd5" name="Otilde"/><!-- LATIN CAPITAL LETTER O WITH TILDE -->
      <map code="0xd6" name="Odieresis"/><!-- LATIN CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xd8" name="Oslash"/><!-- LATIN CAPITAL LETTER O WITH STROKE -->
      <map code="0xd9" name="Ugrave"/><!-- LATIN CAPITAL LETTER U WITH GRAVE -->
      <map code="0xda" name="Uacute"/><!-- LATIN CAPITAL LETTER U WITH ACUTE -->
      <map code="0xdb" name="Ucircumflex"/><!-- LATIN CAPITAL LETTER U WITH CIRCUMFLEX -->
      <map code="0xdc" name="Udieresis"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0xdd" name="Yacute"/><!-- LATIN CAPITAL LETTER Y WITH ACUTE -->
      <map code="0xde" name="Thorn"/><!-- LATIN CAPITAL LETTER THORN -->
      <map code="0xdf" name="germandbls"/><!-- LATIN SMALL LETTER SHARP S -->
      <map code="0xe0" name="agrave"/><!-- LATIN SMALL LETTER A WITH GRAVE -->
      <map code="0xe1" name="aacute"/><!-- LATIN SMALL LETTER A WITH ACUTE -->
      <map code="0xe2" name="acircumflex"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX -->
      <map code="0xe3" name="atilde"/><!-- LATIN SMALL LETTER A WITH TILDE -->
      <map code="0xe4" name="adieresis"/><!-- LATIN SMALL LETTER A WITH DIAERESIS -->
      <map code="0xe5" name="aring"/><!-- LATIN SMALL LETTER A WITH RING ABOVE -->
      <map code="0xe6" name="ae"/><!-- LATIN SMALL LETTER AE -->
      <map code="0xe7" name="ccedilla"/><!-- LATIN SMALL LETTER C WITH CEDILLA -->
      <map code="0xe8" name="egrave"/><!-- LATIN SMALL LETTER E WITH GRAVE -->
      <map code="0xe9" name="eacute"/><!-- LATIN SMALL LETTER E WITH ACUTE -->
      <map code="0xea" name="ecircumflex"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX -->
      <map code="0xeb" name="edieresis"/><!-- LATIN SMALL LETTER E WITH DIAERESIS -->
      <map code="0xec" name="igrave"/><!-- LATIN SMALL LETTER I WITH GRAVE -->
      <map code="0xed" name="iacute"/><!-- LATIN SMALL LETTER I WITH ACUTE -->
      <map code="0xee" name="icircumflex"/><!-- LATIN SMALL LETTER I WITH CIRCUMFLEX -->
      <map code="0xef" name="idieresis"/><!-- LATIN SMALL LETTER I WITH DIAERESIS -->
      <map code="0xf0" name="eth"/><!-- LATIN SMALL LETTER ETH -->
      <map code="0xf1" name="ntilde"/><!-- LATIN SMALL LETTER N WITH TILDE -->
      <map code="0xf2" name="ograve"/><!-- LATIN SMALL LETTER O WITH GRAVE -->
      <map code="0xf3" name="oacute"/><!-- LATIN SMALL LETTER O WITH ACUTE -->
      <map code="0xf4" name="ocircumflex"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX -->
      <map code="0xf5" name="otilde"/><!-- LATIN SMALL LETTER O WITH TILDE -->
      <map code="0xf6" name="odieresis"/><!-- LATIN SMALL LETTER O WITH DIAERESIS -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0xf8" name="oslash"/><!-- LATIN SMALL LETTER O WITH STROKE -->
      <map code="0xf9" name="ugrave"/><!-- LATIN SMALL LETTER U WITH GRAVE -->
      <map code="0xfa" name="uacute"/><!-- LATIN SMALL LETTER U WITH ACUTE -->
      <map code="0xfb" name="ucircumflex"/><!-- LATIN SMALL LETTER U WITH CIRCUMFLEX -->
      <map code="0xfc" name="udieresis"/><!-- LATIN SMALL LETTER U WITH DIAERESIS -->
      <map code="0xfd" name="yacute"/><!-- LATIN SMALL LETTER Y WITH ACUTE -->
      <map code="0xfe" name="thorn"/><!-- LATIN SMALL LETTER THORN -->
      <map code="0xff" name="ydieresis"/><!-- LATIN SMALL LETTER Y WITH DIAERESIS -->
      <map code="0x100" name="Amacron"/><!-- LATIN CAPITAL LETTER A WITH MACRON -->
      <map code="0x101" name="amacron"/><!-- LATIN SMALL LETTER A WITH MACRON -->
      <map code="0x102" name="Abreve"/><!-- LATIN CAPITAL LETTER A WITH BREVE -->
      <map code="0x103" name="abreve"/><!-- LATIN SMALL LETTER A WITH BREVE -->
      <map code="0x104" name="Aogonek"/><!-- LATIN CAPITAL LETTER A WITH OGONEK -->
      <map code="0x105" name="aogonek"/><!-- LATIN SMALL LETTER A WITH OGONEK -->
      <map code="0x106" name="Cacute"/><!-- LATIN CAPITAL LETTER C WITH ACUTE -->
      <map code="0x107" name="cacute"/><!-- LATIN SMALL LETTER C WITH ACUTE -->
      <map code="0x108" name="Ccircumflex"/><!-- LATIN CAPITAL LETTER C WITH CIRCUMFLEX -->
      <map code="0x109" name="ccircumflex"/><!-- LATIN SMALL LETTER C WITH CIRCUMFLEX -->
      <map code="0x10a" name="Cdotaccent"/><!-- LATIN CAPITAL LETTER C WITH DOT ABOVE -->
      <map code="0x10b" name="cdotaccent"/><!-- LATIN SMALL LETTER C WITH DOT ABOVE -->
      <map code="0x10c" name="Ccaron"/><!-- LATIN CAPITAL LETTER C WITH CARON -->
      <map code="0x10d" name="ccaron"/><!-- LATIN SMALL LETTER C WITH CARON -->
      <map code="0x10e" name="Dcaron"/><!-- LATIN CAPITAL LETTER D WITH CARON -->
      <map code="0x10f" name="dcaron"/><!-- LATIN SMALL LETTER D WITH CARON -->
      <map code="0x110" name="Dcroat"/><!-- LATIN CAPITAL LETTER D WITH STROKE -->
      <map code="0x111" name="dcroat"/><!-- LATIN SMALL LETTER D WITH STROKE -->
      <map code="0x112" name="Emacron"/><!-- LATIN CAPITAL LETTER E WITH MACRON -->
      <map code="0x113" name="emacron"/><!-- LATIN SMALL LETTER E WITH MACRON -->
      <map code="0x114" name="Ebreve"/><!-- LATIN CAPITAL LETTER E WITH BREVE -->
      <map code="0x115" name="ebreve"/><!-- LATIN SMALL LETTER E WITH BREVE -->
      <map code="0x116" name="Edotaccent"/><!-- LATIN CAPITAL LETTER E WITH DOT ABOVE -->
      <map code="0x117" name="edotaccent"/><!-- LATIN SMALL LETTER E WITH DOT ABOVE -->
      <map code="0x118" name="Eogonek"/><!-- LATIN CAPITAL LETTER E WITH OGONEK -->
      <map code="0x119" name="eogonek"/><!-- LATIN SMALL LETTER E WITH OGONEK -->
      <map code="0x11a" name="Ecaron"/><!-- LATIN CAPITAL LETTER E WITH CARON -->
      <map code="0x11b" name="ecaron"/><!-- LATIN SMALL LETTER E WITH CARON -->
      <map code="0x11c" name="Gcircumflex"/><!-- LATIN CAPITAL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11d" name="gcircumflex"/><!-- LATIN SMALL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11e" name="Gbreve"/><!-- LATIN CAPITAL LETTER G WITH BREVE -->
      <map code="0x11f" name="gbreve"/><!-- LATIN SMALL LETTER G WITH BREVE -->
      <map code="0x120" name="Gdotaccent"/><!-- LATIN CAPITAL LETTER G WITH DOT ABOVE -->
      <map code="0x121" name="gdotaccent"/><!-- LATIN SMALL LETTER G WITH DOT ABOVE -->
      <map code="0x122" name="uni0122"/><!-- LATIN CAPITAL LETTER G WITH CEDILLA -->
      <map code="0x123" name="uni0123"/><!-- LATIN SMALL LETTER G WITH CEDILLA -->
      <map code="0x124" name="Hcircumflex"/><!-- LATIN CAPITAL LETTER H WITH CIRCUMFLEX -->
      <map code="0x125" name="hcircumflex"/><!-- LATIN SMALL LETTER H WITH CIRCUMFLEX -->
      <map code="0x126" name="Hbar"/><!-- LATIN CAPITAL LETTER H WITH STROKE -->
      <map code="0x127" name="hbar"/><!-- LATIN SMALL LETTER H WITH STROKE -->
      <map code="0x128" name="Itilde"/><!-- LATIN CAPITAL LETTER I WITH TILDE -->
      <map code="0x129" name="itilde"/><!-- LATIN SMALL LETTER I WITH TILDE -->
      <map code="0x12a" name="Imacron"/><!-- LATIN CAPITAL LETTER I WITH MACRON -->
      <map code="0x12b" name="imacron"/><!-- LATIN SMALL LETTER I WITH MACRON -->
      <map code="0x12c" name="Ibreve"/><!-- LATIN CAPITAL LETTER I WITH BREVE -->
      <map code="0x12d" name="ibreve"/><!-- LATIN SMALL LETTER I WITH BREVE -->
      <map code="0x12e" name="Iogonek"/><!-- LATIN CAPITAL LETTER I WITH OGONEK -->
      <map code="0x12f" name="iogonek"/><!-- LATIN SMALL LETTER I WITH OGONEK -->
      <map code="0x130" name="Idotaccent"/><!-- LATIN CAPITAL LETTER I WITH DOT ABOVE -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x134" name="Jcircumflex"/><!-- LATIN CAPITAL LETTER J WITH CIRCUMFLEX -->
      <map code="0x135" name="jcircumflex"/><!-- LATIN SMALL LETTER J WITH CIRCUMFLEX -->
      <map code="0x136" name="uni0136"/><!-- LATIN CAPITAL LETTER K WITH CEDILLA -->
      <map code="0x137" name="uni0137"/><!-- LATIN SMALL LETTER K WITH CEDILLA -->
      <map code="0x139" name="Lacute"/><!-- LATIN CAPITAL LETTER L WITH ACUTE -->
      <map code="0x13a" name="lacute"/><!-- LATIN SMALL LETTER L WITH ACUTE -->
      <map code="0x13b" name="uni013B"/><!-- LATIN CAPITAL LETTER L WITH CEDILLA -->
      <map code="0x13c" name="uni013C"/><!-- LATIN SMALL LETTER L WITH CEDILLA -->
      <map code="0x13d" name="Lcaron"/><!-- LATIN CAPITAL LETTER L WITH CARON -->
      <map code="0x13e" name="lcaron"/><!-- LATIN SMALL LETTER L WITH CARON -->
      <map code="0x13f" name="Ldot"/><!-- LATIN CAPITAL LETTER L WITH MIDDLE DOT -->
      <map code="0x140" name="ldot"/><!-- LATIN SMALL LETTER L WITH MIDDLE DOT -->
      <map code="0x141" name="Lslash"/><!-- LATIN CAPITAL LETTER L WITH STROKE -->
      <map code="0x142" name="lslash"/><!-- LATIN SMALL LETTER L WITH STROKE -->
      <map code="0x143" name="Nacute"/><!-- LATIN CAPITAL LETTER N WITH ACUTE -->
      <map code="0x144" name="nacute"/><!-- LATIN SMALL LETTER N WITH ACUTE -->
      <map code="0x145" name="uni0145"/><!-- LATIN CAPITAL LETTER N WITH CEDILLA -->
      <map code="0x146" name="uni0146"/><!-- LATIN SMALL LETTER N WITH CEDILLA -->
      <map code="0x147" name="Ncaron"/><!-- LATIN CAPITAL LETTER N WITH CARON -->
      <map code="0x148" name="ncaron"/><!-- LATIN SMALL LETTER N WITH CARON -->
      <map code="0x14a" name="Eng"/><!-- LATIN CAPITAL LETTER ENG -->
      <map code="0x14b" name="eng"/><!-- LATIN SMALL LETTER ENG -->
      <map code="0x14c" name="Omacron"/><!-- LATIN CAPITAL LETTER O WITH MACRON -->
      <map code="0x14d" name="omacron"/><!-- LATIN SMALL LETTER O WITH MACRON -->
      <map code="0x14e" name="Obreve"/><!-- LATIN CAPITAL LETTER O WITH BREVE -->
      <map code="0x14f" name="obreve"/><!-- LATIN SMALL LETTER O WITH BREVE -->
      <map code="0x150" name="Ohungarumlaut"/><!-- LATIN CAPITAL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x151" name="ohungarumlaut"/><!-- LATIN SMALL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x152" name="OE"/><!-- LATIN CAPITAL LIGATURE OE -->
      <map code="0x153" name="oe"/><!-- LATIN SMALL LIGATURE OE -->
      <map code="0x154" name="Racute"/><!-- LATIN CAPITAL LETTER R WITH ACUTE -->
      <map code="0x155" name="racute"/><!-- LATIN SMALL LETTER R WITH ACUTE -->
      <map code="0x156" name="uni0156"/><!-- LATIN CAPITAL LETTER R WITH CEDILLA -->
      <map code="0x157" name="uni0157"/><!-- LATIN SMALL LETTER R WITH CEDILLA -->
      <map code="0x158" name="Rcaron"/><!-- LATIN CAPITAL LETTER R WITH CARON -->
      <map code="0x159" name="rcaron"/><!-- LATIN SMALL LETTER R WITH CARON -->
      <map code="0x15a" name="Sacute"/><!-- LATIN CAPITAL LETTER S WITH ACUTE -->
      <map code="0x15b" name="sacute"/><!-- LATIN SMALL LETTER S WITH ACUTE -->
      <map code="0x15c" name="Scircumflex"/><!-- LATIN CAPITAL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15d" name="scircumflex"/><!-- LATIN SMALL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15e" name="uni015E"/><!-- LATIN CAPITAL LETTER S WITH CEDILLA -->
      <map code="0x15f" name="uni015F"/><!-- LATIN SMALL LETTER S WITH CEDILLA -->
      <map code="0x160" name="Scaron"/><!-- LATIN CAPITAL LETTER S WITH CARON -->
      <map code="0x161" name="scaron"/><!-- LATIN SMALL LETTER S WITH CARON -->
      <map code="0x162" name="uni0162"/><!-- LATIN CAPITAL LETTER T WITH CEDILLA -->
      <map code="0x163" name="uni0163"/><!-- LATIN SMALL LETTER T WITH CEDILLA -->
      <map code="0x164" name="Tcaron"/><!-- LATIN CAPITAL LETTER T WITH CARON -->
      <map code="0x165" name="tcaron"/><!-- LATIN SMALL LETTER T WITH CARON -->
      <map code="0x166" name="Tbar"/><!-- LATIN CAPITAL LETTER T WITH STROKE -->
      <map code="0x167" name="tbar"/><!-- LATIN SMALL LETTER T WITH STROKE -->
      <map code="0x168" name="Utilde"/><!-- LATIN CAPITAL LETTER U WITH TILDE -->
      <map code="0x169" name="utilde"/><!-- LATIN SMALL LETTER U WITH TILDE -->
      <map code="0x16a" name="Umacron"/><!-- LATIN CAPITAL LETTER U WITH MACRON -->
      <map code="0x16b" name="umacron"/><!-- LATIN SMALL LETTER U WITH MACRON -->
      <map code="0x16c" name="Ubreve"/><!-- LATIN CAPITAL LETTER U WITH BREVE -->
      <map code="0x16d" name="ubreve"/><!-- LATIN SMALL LETTER U WITH BREVE -->
      <map code="0x16e" name="Uring"/><!-- LATIN CAPITAL LETTER U WITH RING ABOVE -->
      <map code="0x16f" name="uring"/><!-- LATIN SMALL LETTER U WITH RING ABOVE -->
      <map code="0x170" name="Uhungarumlaut"/><!-- LATIN CAPITAL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x171" name="uhungarumlaut"/><!-- LATIN SMALL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x172" name="Uogonek"/><!-- LATIN CAPITAL LETTER U WITH OGONEK -->
      <map code="0x173" name="uogonek"/><!-- LATIN SMALL LETTER U WITH OGONEK -->
      <map code="0x174" name="Wcircumflex"/><!-- LATIN CAPITAL LETTER W WITH CIRCUMFLEX -->
      <map code="0x175" name="wcircumflex"/><!-- LATIN SMALL LETTER W WITH CIRCUMFLEX -->
      <map code="0x176" name="Ycircumflex"/><!-- LATIN CAPITAL LETTER Y WITH CIRCUMFLEX -->
      <map code="0x177" name="ycircumflex"/><!-- LATIN SMALL LETTER Y WITH CIRCUMFLEX -->
      <map code="0x178" name="Ydieresis"/><!-- LATIN CAPITAL LETTER Y WITH DIAERESIS -->
      <map code="0x179" name="Zacute"/><!-- LATIN CAPITAL LETTER Z WITH ACUTE -->
      <map code="0x17a" name="zacute"/><!-- LATIN SMALL LETTER Z WITH ACUTE -->
      <map code="0x17b" name="Zdotaccent"/><!-- LATIN CAPITAL LETTER Z WITH DOT ABOVE -->
      <map code="0x17c" name="zdotaccent"/><!-- LATIN SMALL LETTER Z WITH DOT ABOVE -->
      <map code="0x17d" name="Zcaron"/><!-- LATIN CAPITAL LETTER Z WITH CARON -->
      <map code="0x17e" name="zcaron"/><!-- LATIN SMALL LETTER Z WITH CARON -->
      <map code="0x18f" name="uni018F"/><!-- LATIN CAPITAL LETTER SCHWA -->
      <map code="0x1a0" name="Ohorn"/><!-- LATIN CAPITAL LETTER O WITH HORN -->
      <map code="0x1a1" name="ohorn"/><!-- LATIN SMALL LETTER O WITH HORN -->
      <map code="0x1af" name="Uhorn"/><!-- LATIN CAPITAL LETTER U WITH HORN -->
      <map code="0x1b0" name="uhorn"/><!-- LATIN SMALL LETTER U WITH HORN -->
      <map code="0x1cd" name="uni01CD"/><!-- LATIN CAPITAL LETTER A WITH CARON -->
      <map code="0x1ce" name="uni01CE"/><!-- LATIN SMALL LETTER A WITH CARON -->
      <map code="0x1cf" name="uni01CF"/><!-- LATIN CAPITAL LETTER I WITH CARON -->
      <map code="0x1d0" name="uni01D0"/><!-- LATIN SMALL LETTER I WITH CARON -->
      <map code="0x1d1" name="uni01D1"/><!-- LATIN CAPITAL LETTER O WITH CARON -->
      <map code="0x1d2" name="uni01D2"/><!-- LATIN SMALL LETTER O WITH CARON -->
      <map code="0x1d3" name="uni01D3"/><!-- LATIN CAPITAL LETTER U WITH CARON -->
      <map code="0x1d4" name="uni01D4"/><!-- LATIN SMALL LETTER U WITH CARON -->
      <map code="0x1d5" name="uni01D5"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON -->
      <map code="0x1d6" name="uni01D6"/><!-- LATIN SMALL LETTER U WITH DIAERESIS AND MACRON -->
      <map code="0x1d7" name="uni01D7"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE -->
      <map code="0x1d8" name="uni01D8"/><!-- LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE -->
      <map code="0x1d9" name="uni01D9"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON -->
      <map code="0x1da" name="uni01DA"/><!-- LATIN SMALL LETTER U WITH DIAERESIS AND CARON -->
      <map code="0x1db" name="uni01DB"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE -->
      <map code="0x1dc" name="uni01DC"/><!-- LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE -->
      <map code="0x1e6" name="Gcaron"/><!-- LATIN CAPITAL LETTER G WITH CARON -->
      <map code="0x1e7" name="gcaron"/><!-- LATIN SMALL LETTER G WITH CARON -->
      <map code="0x1ea" name="uni01EA"/><!-- LATIN CAPITAL LETTER O WITH OGONEK -->
      <map code="0x1eb" name="uni01EB"/><!-- LATIN SMALL LETTER O WITH OGONEK -->
      <map code="0x1f0" name="uni01F0"/><!-- LATIN SMALL LETTER J WITH CARON -->
      <map code="0x1f8" name="uni01F8"/><!-- LATIN CAPITAL LETTER N WITH GRAVE -->
      <map code="0x1f9" name="uni01F9"/><!-- LATIN SMALL LETTER N WITH GRAVE -->
      <map code="0x218" name="uni0218"/><!-- LATIN CAPITAL LETTER S WITH COMMA BELOW -->
      <map code="0x219" name="uni0219"/><!-- LATIN SMALL LETTER S WITH COMMA BELOW -->
      <map code="0x21a" name="uni021A"/><!-- LATIN CAPITAL LETTER T WITH COMMA BELOW -->
      <map code="0x21b" name="uni021B"/><!-- LATIN SMALL LETTER T WITH COMMA BELOW -->
      <map code="0x226" name="uni0226"/><!-- LATIN CAPITAL LETTER A WITH DOT ABOVE -->
      <map code="0x227" name="uni0227"/><!-- LATIN SMALL LETTER A WITH DOT ABOVE -->
      <map code="0x22e" name="uni022E"/><!-- LATIN CAPITAL LETTER O WITH DOT ABOVE -->
      <map code="0x22f" name="uni022F"/><!-- LATIN SMALL LETTER O WITH DOT ABOVE -->
      <map code="0x232" name="uni0232"/><!-- LATIN CAPITAL LETTER Y WITH MACRON -->
      <map code="0x233" name="uni0233"/><!-- LATIN SMALL LETTER Y WITH MACRON -->
      <map code="0x237" name="uni0237"/><!-- LATIN SMALL LETTER DOTLESS J -->
      <map code="0x259" name="uni0259"/><!-- LATIN SMALL LETTER SCHWA -->
      <map code="0x2b9" name="uni02B9"/><!-- MODIFIER LETTER PRIME -->
      <map code="0x2ba" name="uni02BA"/><!-- MODIFIER LETTER DOUBLE PRIME -->
      <map code="0x2bb" name="uni02BB"/><!-- MODIFIER LETTER TURNED COMMA -->
      <map code="0x2bc" name="uni02BC"/><!-- MODIFIER LETTER APOSTROPHE -->
      <map code="0x2be" name="uni02BE"/><!-- MODIFIER LETTER RIGHT HALF RING -->
      <map code="0x2bf" name="uni02BF"/><!-- MODIFIER LETTER LEFT HALF RING -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2c7" name="caron"/><!-- CARON -->
      <map code="0x2c8" name="uni02C8"/><!-- MODIFIER LETTER VERTICAL LINE -->
      <map code="0x2cc" name="uni02CC"/><!-- MODIFIER LETTER LOW VERTICAL LINE -->
      <map code="0x2cd" name="uni02CD"/><!-- MODIFIER LETTER LOW MACRON -->
      <map code="0x2d8" name="breve"/><!-- BREVE -->
      <map code="0x2d9" name="dotaccent"/><!-- DOT ABOVE -->
      <map code="0x2da" name="ring"/><!-- RING ABOVE -->
      <map code="0x2db" name="ogonek"/><!-- OGONEK -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x2dd" name="hungarumlaut"/><!-- DOUBLE ACUTE ACCENT -->
      <map code="0x300" name="uni0300"/><!-- COMBINING GRAVE ACCENT -->
      <map code="0x301" name="uni0301"/><!-- COMBINING ACUTE ACCENT -->
      <map code="0x302" name="uni0302"/><!-- COMBINING CIRCUMFLEX ACCENT -->
      <map code="0x303" name="uni0303"/><!-- COMBINING TILDE -->
      <map code="0x304" name="uni0304"/><!-- COMBINING MACRON -->
      <map code="0x306" name="uni0306"/><!-- COMBINING BREVE -->
      <map code="0x307" name="uni0307"/><!-- COMBINING DOT ABOVE -->
      <map code="0x308" name="uni0308"/><!-- COMBINING DIAERESIS -->
      <map code="0x309" name="uni0309"/><!-- COMBINING HOOK ABOVE -->
      <map code="0x30a" name="uni030A"/><!-- COMBINING RING ABOVE -->
      <map code="0x30b" name="uni030B"/><!-- COMBINING DOUBLE ACUTE ACCENT -->
      <map code="0x30c" name="uni030C"/><!-- COMBINING CARON -->
      <map code="0x312" name="uni0312"/><!-- COMBINING TURNED COMMA ABOVE -->
      <map code="0x315" name="uni0315"/><!-- COMBINING COMMA ABOVE RIGHT -->
      <map code="0x323" name="uni0323"/><!-- COMBINING DOT BELOW -->
      <map code="0x324" name="uni0324"/><!-- COMBINING DIAERESIS BELOW -->
      <map code="0x326" name="uni0326"/><!-- COMBINING COMMA BELOW -->
      <map code="0x327" name="uni0327"/><!-- COMBINING CEDILLA -->
      <map code="0x328" name="uni0328"/><!-- COMBINING OGONEK -->
      <map code="0x32d" name="uni032D"/><!-- COMBINING CIRCUMFLEX ACCENT BELOW -->
      <map code="0x32e" name="uni032E"/><!-- COMBINING BREVE BELOW -->
      <map code="0x331" name="uni0331"/><!-- COMBINING MACRON BELOW -->
      <map code="0xe3f" name="uni0E3F"/><!-- THAI CURRENCY SYMBOL BAHT -->
      <map code="0x1e06" name="uni1E06"/><!-- LATIN CAPITAL LETTER B WITH LINE BELOW -->
      <map code="0x1e07" name="uni1E07"/><!-- LATIN SMALL LETTER B WITH LINE BELOW -->
      <map code="0x1e0c" name="uni1E0C"/><!-- LATIN CAPITAL LETTER D WITH DOT BELOW -->
      <map code="0x1e0d" name="uni1E0D"/><!-- LATIN SMALL LETTER D WITH DOT BELOW -->
      <map code="0x1e0e" name="uni1E0E"/><!-- LATIN CAPITAL LETTER D WITH LINE BELOW -->
      <map code="0x1e0f" name="uni1E0F"/><!-- LATIN SMALL LETTER D WITH LINE BELOW -->
      <map code="0x1e12" name="uni1E12"/><!-- LATIN CAPITAL LETTER D WITH CIRCUMFLEX BELOW -->
      <map code="0x1e13" name="uni1E13"/><!-- LATIN SMALL LETTER D WITH CIRCUMFLEX BELOW -->
      <map code="0x1e20" name="uni1E20"/><!-- LATIN CAPITAL LETTER G WITH MACRON -->
      <map code="0x1e21" name="uni1E21"/><!-- LATIN SMALL LETTER G WITH MACRON -->
      <map code="0x1e24" name="uni1E24"/><!-- LATIN CAPITAL LETTER H WITH DOT BELOW -->
      <map code="0x1e25" name="uni1E25"/><!-- LATIN SMALL LETTER H WITH DOT BELOW -->
      <map code="0x1e28" name="uni1E28"/><!-- LATIN CAPITAL LETTER H WITH CEDILLA -->
      <map code="0x1e29" name="uni1E29"/><!-- LATIN SMALL LETTER H WITH CEDILLA -->
      <map code="0x1e2a" name="uni1E2A"/><!-- LATIN CAPITAL LETTER H WITH BREVE BELOW -->
      <map code="0x1e2b" name="uni1E2B"/><!-- LATIN SMALL LETTER H WITH BREVE BELOW -->
      <map code="0x1e32" name="uni1E32"/><!-- LATIN CAPITAL LETTER K WITH DOT BELOW -->
      <map code="0x1e33" name="uni1E33"/><!-- LATIN SMALL LETTER K WITH DOT BELOW -->
      <map code="0x1e34" name="uni1E34"/><!-- LATIN CAPITAL LETTER K WITH LINE BELOW -->
      <map code="0x1e35" name="uni1E35"/><!-- LATIN SMALL LETTER K WITH LINE BELOW -->
      <map code="0x1e36" name="uni1E36"/><!-- LATIN CAPITAL LETTER L WITH DOT BELOW -->
      <map code="0x1e37" name="uni1E37"/><!-- LATIN SMALL LETTER L WITH DOT BELOW -->
      <map code="0x1e38" name="uni1E38"/><!-- LATIN CAPITAL LETTER L WITH DOT BELOW AND MACRON -->
      <map code="0x1e39" name="uni1E39"/><!-- LATIN SMALL LETTER L WITH DOT BELOW AND MACRON -->
      <map code="0x1e3a" name="uni1E3A"/><!-- LATIN CAPITAL LETTER L WITH LINE BELOW -->
      <map code="0x1e3b" name="uni1E3B"/><!-- LATIN SMALL LETTER L WITH LINE BELOW -->
      <map code="0x1e3c" name="uni1E3C"/><!-- LATIN CAPITAL LETTER L WITH CIRCUMFLEX BELOW -->
      <map code="0x1e3d" name="uni1E3D"/><!-- LATIN SMALL LETTER L WITH CIRCUMFLEX BELOW -->
      <map code="0x1e3e" name="uni1E3E"/><!-- LATIN CAPITAL LETTER M WITH ACUTE -->
      <map code="0x1e3f" name="uni1E3F"/><!-- LATIN SMALL LETTER M WITH ACUTE -->
      <map code="0x1e40" name="uni1E40"/><!-- LATIN CAPITAL LETTER M WITH DOT ABOVE -->
      <map code="0x1e41" name="uni1E41"/><!-- LATIN SMALL LETTER M WITH DOT ABOVE -->
      <map code="0x1e42" name="uni1E42"/><!-- LATIN CAPITAL LETTER M WITH DOT BELOW -->
      <map code="0x1e43" name="uni1E43"/><!-- LATIN SMALL LETTER M WITH DOT BELOW -->
      <map code="0x1e44" name="uni1E44"/><!-- LATIN CAPITAL LETTER N WITH DOT ABOVE -->
      <map code="0x1e45" name="uni1E45"/><!-- LATIN SMALL LETTER N WITH DOT ABOVE -->
      <map code="0x1e46" name="uni1E46"/><!-- LATIN CAPITAL LETTER N WITH DOT BELOW -->
      <map code="0x1e47" name="uni1E47"/><!-- LATIN SMALL LETTER N WITH DOT BELOW -->
      <map code="0x1e48" name="uni1E48"/><!-- LATIN CAPITAL LETTER N WITH LINE BELOW -->
      <map code="0x1e49" name="uni1E49"/><!-- LATIN SMALL LETTER N WITH LINE BELOW -->
      <map code="0x1e4a" name="uni1E4A"/><!-- LATIN CAPITAL LETTER N WITH CIRCUMFLEX BELOW -->
      <map code="0x1e4b" name="uni1E4B"/><!-- LATIN SMALL LETTER N WITH CIRCUMFLEX BELOW -->
      <map code="0x1e58" name="uni1E58"/><!-- LATIN CAPITAL LETTER R WITH DOT ABOVE -->
      <map code="0x1e59" name="uni1E59"/><!-- LATIN SMALL LETTER R WITH DOT ABOVE -->
      <map code="0x1e5a" name="uni1E5A"/><!-- LATIN CAPITAL LETTER R WITH DOT BELOW -->
      <map code="0x1e5b" name="uni1E5B"/><!-- LATIN SMALL LETTER R WITH DOT BELOW -->
      <map code="0x1e5c" name="uni1E5C"/><!-- LATIN CAPITAL LETTER R WITH DOT BELOW AND MACRON -->
      <map code="0x1e5d" name="uni1E5D"/><!-- LATIN SMALL LETTER R WITH DOT BELOW AND MACRON -->
      <map code="0x1e5e" name="uni1E5E"/><!-- LATIN CAPITAL LETTER R WITH LINE BELOW -->
      <map code="0x1e5f" name="uni1E5F"/><!-- LATIN SMALL LETTER R WITH LINE BELOW -->
      <map code="0x1e62" name="uni1E62"/><!-- LATIN CAPITAL LETTER S WITH DOT BELOW -->
      <map code="0x1e63" name="uni1E63"/><!-- LATIN SMALL LETTER S WITH DOT BELOW -->
      <map code="0x1e6c" name="uni1E6C"/><!-- LATIN CAPITAL LETTER T WITH DOT BELOW -->
      <map code="0x1e6d" name="uni1E6D"/><!-- LATIN SMALL LETTER T WITH DOT BELOW -->
      <map code="0x1e6e" name="uni1E6E"/><!-- LATIN CAPITAL LETTER T WITH LINE BELOW -->
      <map code="0x1e6f" name="uni1E6F"/><!-- LATIN SMALL LETTER T WITH LINE BELOW -->
      <map code="0x1e70" name="uni1E70"/><!-- LATIN CAPITAL LETTER T WITH CIRCUMFLEX BELOW -->
      <map code="0x1e71" name="uni1E71"/><!-- LATIN SMALL LETTER T WITH CIRCUMFLEX BELOW -->
      <map code="0x1e7e" name="uni1E7E"/><!-- LATIN CAPITAL LETTER V WITH DOT BELOW -->
      <map code="0x1e7f" name="uni1E7F"/><!-- LATIN SMALL LETTER V WITH DOT BELOW -->
      <map code="0x1e80" name="Wgrave"/><!-- LATIN CAPITAL LETTER W WITH GRAVE -->
      <map code="0x1e81" name="wgrave"/><!-- LATIN SMALL LETTER W WITH GRAVE -->
      <map code="0x1e82" name="Wacute"/><!-- LATIN CAPITAL LETTER W WITH ACUTE -->
      <map code="0x1e83" name="wacute"/><!-- LATIN SMALL LETTER W WITH ACUTE -->
      <map code="0x1e84" name="Wdieresis"/><!-- LATIN CAPITAL LETTER W WITH DIAERESIS -->
      <map code="0x1e85" name="wdieresis"/><!-- LATIN SMALL LETTER W WITH DIAERESIS -->
      <map code="0x1e8c" name="uni1E8C"/><!-- LATIN CAPITAL LETTER X WITH DIAERESIS -->
      <map code="0x1e8d" name="uni1E8D"/><!-- LATIN SMALL LETTER X WITH DIAERESIS -->
      <map code="0x1e8e" name="uni1E8E"/><!-- LATIN CAPITAL LETTER Y WITH DOT ABOVE -->
      <map code="0x1e8f" name="uni1E8F"/><!-- LATIN SMALL LETTER Y WITH DOT ABOVE -->
      <map code="0x1e90" name="uni1E90"/><!-- LATIN CAPITAL LETTER Z WITH CIRCUMFLEX -->
      <map code="0x1e91" name="uni1E91"/><!-- LATIN SMALL LETTER Z WITH CIRCUMFLEX -->
      <map code="0x1e92" name="uni1E92"/><!-- LATIN CAPITAL LETTER Z WITH DOT BELOW -->
      <map code="0x1e93" name="uni1E93"/><!-- LATIN SMALL LETTER Z WITH DOT BELOW -->
      <map code="0x1e94" name="uni1E94"/><!-- LATIN CAPITAL LETTER Z WITH LINE BELOW -->
      <map code="0x1e95" name="uni1E95"/><!-- LATIN SMALL LETTER Z WITH LINE BELOW -->
      <map code="0x1e96" name="uni1E96"/><!-- LATIN SMALL LETTER H WITH LINE BELOW -->
      <map code="0x1e9e" name="uni1E9E"/><!-- LATIN CAPITAL LETTER SHARP S -->
      <map code="0x1ea0" name="uni1EA0"/><!-- LATIN CAPITAL LETTER A WITH DOT BELOW -->
      <map code="0x1ea1" name="uni1EA1"/><!-- LATIN SMALL LETTER A WITH DOT BELOW -->
      <map code="0x1ea2" name="uni1EA2"/><!-- LATIN CAPITAL LETTER A WITH HOOK ABOVE -->
      <map code="0x1ea3" name="uni1EA3"/><!-- LATIN SMALL LETTER A WITH HOOK ABOVE -->
      <map code="0x1ea4" name="uni1EA4"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ea5" name="uni1EA5"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ea6" name="uni1EA6"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ea7" name="uni1EA7"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ea8" name="uni1EA8"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ea9" name="uni1EA9"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1eaa" name="uni1EAA"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1eab" name="uni1EAB"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1eac" name="uni1EAC"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ead" name="uni1EAD"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1eae" name="uni1EAE"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND ACUTE -->
      <map code="0x1eaf" name="uni1EAF"/><!-- LATIN SMALL LETTER A WITH BREVE AND ACUTE -->
      <map code="0x1eb0" name="uni1EB0"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND GRAVE -->
      <map code="0x1eb1" name="uni1EB1"/><!-- LATIN SMALL LETTER A WITH BREVE AND GRAVE -->
      <map code="0x1eb2" name="uni1EB2"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND HOOK ABOVE -->
      <map code="0x1eb3" name="uni1EB3"/><!-- LATIN SMALL LETTER A WITH BREVE AND HOOK ABOVE -->
      <map code="0x1eb4" name="uni1EB4"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND TILDE -->
      <map code="0x1eb5" name="uni1EB5"/><!-- LATIN SMALL LETTER A WITH BREVE AND TILDE -->
      <map code="0x1eb6" name="uni1EB6"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW -->
      <map code="0x1eb7" name="uni1EB7"/><!-- LATIN SMALL LETTER A WITH BREVE AND DOT BELOW -->
      <map code="0x1eb8" name="uni1EB8"/><!-- LATIN CAPITAL LETTER E WITH DOT BELOW -->
      <map code="0x1eb9" name="uni1EB9"/><!-- LATIN SMALL LETTER E WITH DOT BELOW -->
      <map code="0x1eba" name="uni1EBA"/><!-- LATIN CAPITAL LETTER E WITH HOOK ABOVE -->
      <map code="0x1ebb" name="uni1EBB"/><!-- LATIN SMALL LETTER E WITH HOOK ABOVE -->
      <map code="0x1ebc" name="uni1EBC"/><!-- LATIN CAPITAL LETTER E WITH TILDE -->
      <map code="0x1ebd" name="uni1EBD"/><!-- LATIN SMALL LETTER E WITH TILDE -->
      <map code="0x1ebe" name="uni1EBE"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ebf" name="uni1EBF"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ec0" name="uni1EC0"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ec1" name="uni1EC1"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ec2" name="uni1EC2"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ec3" name="uni1EC3"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ec4" name="uni1EC4"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ec5" name="uni1EC5"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ec6" name="uni1EC6"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ec7" name="uni1EC7"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ec8" name="uni1EC8"/><!-- LATIN CAPITAL LETTER I WITH HOOK ABOVE -->
      <map code="0x1ec9" name="uni1EC9"/><!-- LATIN SMALL LETTER I WITH HOOK ABOVE -->
      <map code="0x1eca" name="uni1ECA"/><!-- LATIN CAPITAL LETTER I WITH DOT BELOW -->
      <map code="0x1ecb" name="uni1ECB"/><!-- LATIN SMALL LETTER I WITH DOT BELOW -->
      <map code="0x1ecc" name="uni1ECC"/><!-- LATIN CAPITAL LETTER O WITH DOT BELOW -->
      <map code="0x1ecd" name="uni1ECD"/><!-- LATIN SMALL LETTER O WITH DOT BELOW -->
      <map code="0x1ece" name="uni1ECE"/><!-- LATIN CAPITAL LETTER O WITH HOOK ABOVE -->
      <map code="0x1ecf" name="uni1ECF"/><!-- LATIN SMALL LETTER O WITH HOOK ABOVE -->
      <map code="0x1ed0" name="uni1ED0"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ed1" name="uni1ED1"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ed2" name="uni1ED2"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ed3" name="uni1ED3"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ed4" name="uni1ED4"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ed5" name="uni1ED5"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ed6" name="uni1ED6"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ed7" name="uni1ED7"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ed8" name="uni1ED8"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ed9" name="uni1ED9"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1eda" name="uni1EDA"/><!-- LATIN CAPITAL LETTER O WITH HORN AND ACUTE -->
      <map code="0x1edb" name="uni1EDB"/><!-- LATIN SMALL LETTER O WITH HORN AND ACUTE -->
      <map code="0x1edc" name="uni1EDC"/><!-- LATIN CAPITAL LETTER O WITH HORN AND GRAVE -->
      <map code="0x1edd" name="uni1EDD"/><!-- LATIN SMALL LETTER O WITH HORN AND GRAVE -->
      <map code="0x1ede" name="uni1EDE"/><!-- LATIN CAPITAL LETTER O WITH HORN AND HOOK ABOVE -->
      <map code="0x1edf" name="uni1EDF"/><!-- LATIN SMALL LETTER O WITH HORN AND HOOK ABOVE -->
      <map code="0x1ee0" name="uni1EE0"/><!-- LATIN CAPITAL LETTER O WITH HORN AND TILDE -->
      <map code="0x1ee1" name="uni1EE1"/><!-- LATIN SMALL LETTER O WITH HORN AND TILDE -->
      <map code="0x1ee2" name="uni1EE2"/><!-- LATIN CAPITAL LETTER O WITH HORN AND DOT BELOW -->
      <map code="0x1ee3" name="uni1EE3"/><!-- LATIN SMALL LETTER O WITH HORN AND DOT BELOW -->
      <map code="0x1ee4" name="uni1EE4"/><!-- LATIN CAPITAL LETTER U WITH DOT BELOW -->
      <map code="0x1ee5" name="uni1EE5"/><!-- LATIN SMALL LETTER U WITH DOT BELOW -->
      <map code="0x1ee6" name="uni1EE6"/><!-- LATIN CAPITAL LETTER U WITH HOOK ABOVE -->
      <map code="0x1ee7" name="uni1EE7"/><!-- LATIN SMALL LETTER U WITH HOOK ABOVE -->
      <map code="0x1ee8" name="uni1EE8"/><!-- LATIN CAPITAL LETTER U WITH HORN AND ACUTE -->
      <map code="0x1ee9" name="uni1EE9"/><!-- LATIN SMALL LETTER U WITH HORN AND ACUTE -->
      <map code="0x1eea" name="uni1EEA"/><!-- LATIN CAPITAL LETTER U WITH HORN AND GRAVE -->
      <map code="0x1eeb" name="uni1EEB"/><!-- LATIN SMALL LETTER U WITH HORN AND GRAVE -->
      <map code="0x1eec" name="uni1EEC"/><!-- LATIN CAPITAL LETTER U WITH HORN AND HOOK ABOVE -->
      <map code="0x1eed" name="uni1EED"/><!-- LATIN SMALL LETTER U WITH HORN AND HOOK ABOVE -->
      <map code="0x1eee" name="uni1EEE"/><!-- LATIN CAPITAL LETTER U WITH HORN AND TILDE -->
      <map code="0x1eef" name="uni1EEF"/><!-- LATIN SMALL LETTER U WITH HORN AND TILDE -->
      <map code="0x1ef0" name="uni1EF0"/><!-- LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW -->
      <map code="0x1ef1" name="uni1EF1"/><!-- LATIN SMALL LETTER U WITH HORN AND DOT BELOW -->
      <map code="0x1ef2" name="Ygrave"/><!-- LATIN CAPITAL LETTER Y WITH GRAVE -->
      <map code="0x1ef3" name="ygrave"/><!-- LATIN SMALL LETTER Y WITH GRAVE -->
      <map code="0x1ef4" name="uni1EF4"/><!-- LATIN CAPITAL LETTER Y WITH DOT BELOW -->
      <map code="0x1ef5" name="uni1EF5"/><!-- LATIN SMALL LETTER Y WITH DOT BELOW -->
      <map code="0x1ef6" name="uni1EF6"/><!-- LATIN CAPITAL LETTER Y WITH HOOK ABOVE -->
      <map code="0x1ef7" name="uni1EF7"/><!-- LATIN SMALL LETTER Y WITH HOOK ABOVE -->
      <map code="0x1ef8" name="uni1EF8"/><!-- LATIN CAPITAL LETTER Y WITH TILDE -->
      <map code="0x1ef9" name="uni1EF9"/><!-- LATIN SMALL LETTER Y WITH TILDE -->
      <map code="0x1fed" name="uni00A80300"/><!-- GREEK DIALYTIKA AND VARIA -->
      <map code="0x1fee" name="uni00A80301"/><!-- GREEK DIALYTIKA AND OXIA -->
      <map code="0x2011" name="uni2011"/><!-- NON-BREAKING HYPHEN -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2015" name="uni2015"/><!-- HORIZONTAL BAR -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201a" name="quotesinglbase"/><!-- SINGLE LOW-9 QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2020" name="dagger"/><!-- DAGGER -->
      <map code="0x2021" name="daggerdbl"/><!-- DOUBLE DAGGER -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2025" name="uni2025"/><!-- TWO DOT LEADER -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x2039" name="guilsinglleft"/><!-- SINGLE LEFT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203a" name="guilsinglright"/><!-- SINGLE RIGHT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x2044" name="fraction"/><!-- FRACTION SLASH -->
      <map code="0x2070" name="zero.sup"/><!-- SUPERSCRIPT ZERO -->
      <map code="0x2074" name="four.sup"/><!-- SUPERSCRIPT FOUR -->
      <map code="0x2075" name="five.sup"/><!-- SUPERSCRIPT FIVE -->
      <map code="0x2076" name="six.sup"/><!-- SUPERSCRIPT SIX -->
      <map code="0x2077" name="seven.sup"/><!-- SUPERSCRIPT SEVEN -->
      <map code="0x2078" name="eight.sup"/><!-- SUPERSCRIPT EIGHT -->
      <map code="0x2079" name="nine.sup"/><!-- SUPERSCRIPT NINE -->
      <map code="0x2080" name="zero.inf"/><!-- SUBSCRIPT ZERO -->
      <map code="0x2081" name="one.inf"/><!-- SUBSCRIPT ONE -->
      <map code="0x2082" name="two.inf"/><!-- SUBSCRIPT TWO -->
      <map code="0x2083" name="three.inf"/><!-- SUBSCRIPT THREE -->
      <map code="0x2084" name="four.inf"/><!-- SUBSCRIPT FOUR -->
      <map code="0x2085" name="five.inf"/><!-- SUBSCRIPT FIVE -->
      <map code="0x2086" name="six.inf"/><!-- SUBSCRIPT SIX -->
      <map code="0x2087" name="seven.inf"/><!-- SUBSCRIPT SEVEN -->
      <map code="0x2088" name="eight.inf"/><!-- SUBSCRIPT EIGHT -->
      <map code="0x2089" name="nine.inf"/><!-- SUBSCRIPT NINE -->
      <map code="0x20a6" name="uni20A6"/><!-- NAIRA SIGN -->
      <map code="0x20a9" name="uni20A9"/><!-- WON SIGN -->
      <map code="0x20ab" name="dong"/><!-- DONG SIGN -->
      <map code="0x20ac" name="Euro"/><!-- EURO SIGN -->
      <map code="0x20b1" name="uni20B1"/><!-- PESO SIGN -->
      <map code="0x20b9" name="uni20B9"/><!-- INDIAN RUPEE SIGN -->
      <map code="0x20ba" name="uni20BA"/><!-- TURKISH LIRA SIGN -->
      <map code="0x20bd" name="uni20BD"/><!-- RUBLE SIGN -->
      <map code="0x2117" name="uni2117"/><!-- SOUND RECORDING COPYRIGHT -->
      <map code="0x2120" name="uni2120"/><!-- SERVICE MARK -->
      <map code="0x2122" name="trademark"/><!-- TRADE MARK SIGN -->
      <map code="0x2153" name="onethird"/><!-- VULGAR FRACTION ONE THIRD -->
      <map code="0x2154" name="twothirds"/><!-- VULGAR FRACTION TWO THIRDS -->
      <map code="0x2155" name="onefifth"/><!-- VULGAR FRACTION ONE FIFTH -->
      <map code="0x2156" name="twofifths"/><!-- VULGAR FRACTION TWO FIFTHS -->
      <map code="0x2157" name="threefifths"/><!-- VULGAR FRACTION THREE FIFTHS -->
      <map code="0x2158" name="fourfifths"/><!-- VULGAR FRACTION FOUR FIFTHS -->
      <map code="0x2159" name="onesixth"/><!-- VULGAR FRACTION ONE SIXTH -->
      <map code="0x215a" name="fivesixths"/><!-- VULGAR FRACTION FIVE SIXTHS -->
      <map code="0x215b" name="oneeighth"/><!-- VULGAR FRACTION ONE EIGHTH -->
      <map code="0x215c" name="threeeighths"/><!-- VULGAR FRACTION THREE EIGHTHS -->
      <map code="0x215d" name="fiveeighths"/><!-- VULGAR FRACTION FIVE EIGHTHS -->
      <map code="0x215e" name="seveneighths"/><!-- VULGAR FRACTION SEVEN EIGHTHS -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x2248" name="approxequal"/><!-- ALMOST EQUAL TO -->
      <map code="0x2260" name="notequal"/><!-- NOT EQUAL TO -->
      <map code="0x2264" name="lessequal"/><!-- LESS-THAN OR EQUAL TO -->
      <map code="0x2265" name="greaterequal"/><!-- GREATER-THAN OR EQUAL TO -->
      <map code="0xa788" name="uniA788"/><!-- MODIFIER LETTER LOW CIRCUMFLEX ACCENT -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      NPUSHB[ ]	/* 74 values pushed */
      153 152 151 150 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115
      114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90
      89 88 87 86 85 84 83 81 80 79 78 77 76 75 74 73 72 71 70 40 31 16 10 9
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        11 10
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        RS[ ]	/* ReadStore */
        NEG[ ]	/* Negate */
        SPVFS[ ]	/* SetPVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        10 11
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        RS[ ]	/* ReadStore */
        SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        6
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        7
        RS[ ]	/* ReadStore */
        NEG[ ]	/* Negate */
        SPVFS[ ]	/* SetPVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        79
        CALL[ ]	/* CallFunction */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        64
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            RCVT[ ]	/* ReadCVT */
            WCVTP[ ]	/* WriteCVTInPixels */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          SUB[ ]	/* Subtract */
          ABS[ ]	/* Absolute */
          ROLL[ ]	/* RollTopThreeStack */
          MUL[ ]	/* Multiply */
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            RCVT[ ]	/* ReadCVT */
            WCVTP[ ]	/* WriteCVTInPixels */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        7
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        6
        RS[ ]	/* ReadStore */
        SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        SWAP[ ]	/* SwapTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        SWAP[ ]	/* SwapTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          70
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          71
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          72
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          73
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 2 values pushed */
        0 3
        CINDEX[ ]	/* CopyXToTopStack */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          1 3
          CINDEX[ ]	/* CopyXToTopStack */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            RS[ ]	/* ReadStore */
            MAX[ ]	/* Maximum */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          79
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        98
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
        SWAP[ ]	/* SwapTopStack */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        8 0
        GPV[ ]	/* GetPVector */
        POP[ ]	/* PopTopStack */
        EQ[ ]	/* Equal */
        ADD[ ]	/* Add */
        RS[ ]	/* ReadStore */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        12 0
        GPV[ ]	/* GetPVector */
        POP[ ]	/* PopTopStack */
        EQ[ ]	/* Equal */
        ADD[ ]	/* Add */
        RS[ ]	/* ReadStore */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        DUP[ ]	/* DuplicateTopStack */
        PUSHW[ ]	/* 1 value pushed */
        4096
        DIV[ ]	/* Divide */
        PUSHW[ ]	/* 1 value pushed */
        4096
        MUL[ ]	/* Multiply */
        EVEN[ ]	/* Even */
        SWAP[ ]	/* SwapTopStack */
        PUSHW[ ]	/* 1 value pushed */
        256
        DIV[ ]	/* Divide */
        PUSHW[ ]	/* 1 value pushed */
        4096
        MUL[ ]	/* Multiply */
        EVEN[ ]	/* Even */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          32
          ADD[ ]	/* Add */
          FLOOR[ ]	/* Floor */
        EIF[ ]	/* EndIf */
        SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GTEQ[ ]	/* GreaterThanOrEqual */
        PUSHW[ ]	/* 1 value pushed */
        53
        SWAP[ ]	/* SwapTopStack */
        JROT[ ]	/* JumpRelativeOnTrue */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        32
        MUL[ ]	/* Multiply */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        DIV[ ]	/* Divide */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          ROLL[ ]	/* RollTopThreeStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          ADD[ ]	/* Add */
          SWAP[ ]	/* SwapTopStack */
        ELSE[ ]	/* Else */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          6
          CINDEX[ ]	/* CopyXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          DIV[ ]	/* Divide */
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
            PUSHB[ ]	/* 1 value pushed */
            1
            SUB[ ]	/* Subtract */
          ELSE[ ]	/* Else */
            ROLL[ ]	/* RollTopThreeStack */
            POP[ ]	/* PopTopStack */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
            DUP[ ]	/* DuplicateTopStack */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        PUSHW[ ]	/* 1 value pushed */
        -63
        JMPR[ ]	/* Jump */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        32
        MUL[ ]	/* Multiply */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 0
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        35 1
        GETINFO[ ]	/* GetInfo */
        LTEQ[ ]	/* LessThenOrEqual */
        PUSHB[ ]	/* 2 values pushed */
        64 1
        GETINFO[ ]	/* GetInfo */
        GTEQ[ ]	/* GreaterThanOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          4096 32
          GETINFO[ ]	/* GetInfo */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
            PUSHB[ ]	/* 3 values pushed */
            2 1 2
            RS[ ]	/* ReadStore */
            ADD[ ]	/* Add */
            WS[ ]	/* WriteStore */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          36 1
          GETINFO[ ]	/* GetInfo */
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHW[ ]	/* 2 values pushed */
            8192 64
            GETINFO[ ]	/* GetInfo */
            EQ[ ]	/* Equal */
            IF[ ]	/* If */
              PUSHB[ ]	/* 3 values pushed */
              2 2 2
              RS[ ]	/* ReadStore */
              ADD[ ]	/* Add */
              WS[ ]	/* WriteStore */
              PUSHB[ ]	/* 2 values pushed */
              36 1
              GETINFO[ ]	/* GetInfo */
              EQ[ ]	/* Equal */
              IF[ ]	/* If */
                PUSHB[ ]	/* 3 values pushed */
                2 32 2
                RS[ ]	/* ReadStore */
                ADD[ ]	/* Add */
                WS[ ]	/* WriteStore */
                SVTCA[0]	/* SetFPVectorToAxis */
                MPPEM[ ]	/* MeasurePixelPerEm */
                SVTCA[1]	/* SetFPVectorToAxis */
                MPPEM[ ]	/* MeasurePixelPerEm */
                GT[ ]	/* GreaterThan */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 8 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
              ELSE[ ]	/* Else */
                PUSHW[ ]	/* 2 values pushed */
                16384 128
                GETINFO[ ]	/* GetInfo */
                EQ[ ]	/* Equal */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 4 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
                PUSHW[ ]	/* 2 values pushed */
                16384 128
                MUL[ ]	/* Multiply */
                PUSHW[ ]	/* 1 value pushed */
                256
                GETINFO[ ]	/* GetInfo */
                EQ[ ]	/* Equal */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 8 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
                PUSHW[ ]	/* 2 values pushed */
                16384 256
                MUL[ ]	/* Multiply */
                PUSHW[ ]	/* 1 value pushed */
                512
                GETINFO[ ]	/* GetInfo */
                EQ[ ]	/* Equal */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 16 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
                PUSHB[ ]	/* 2 values pushed */
                38 1
                GETINFO[ ]	/* GetInfo */
                LTEQ[ ]	/* LessThenOrEqual */
                IF[ ]	/* If */
                  PUSHW[ ]	/* 2 values pushed */
                  16384 512
                  MUL[ ]	/* Multiply */
                  PUSHW[ ]	/* 1 value pushed */
                  1024
                  GETINFO[ ]	/* GetInfo */
                  EQ[ ]	/* Equal */
                  IF[ ]	/* If */
                    PUSHB[ ]	/* 3 values pushed */
                    2 64 2
                    RS[ ]	/* ReadStore */
                    ADD[ ]	/* Add */
                    WS[ ]	/* WriteStore */
                  EIF[ ]	/* EndIf */
                  PUSHW[ ]	/* 2 values pushed */
                  16384 1024
                  MUL[ ]	/* Multiply */
                  PUSHW[ ]	/* 1 value pushed */
                  2048
                  GETINFO[ ]	/* GetInfo */
                  EQ[ ]	/* Equal */
                  IF[ ]	/* If */
                    PUSHB[ ]	/* 3 values pushed */
                    2 128 2
                    RS[ ]	/* ReadStore */
                    ADD[ ]	/* Add */
                    WS[ ]	/* WriteStore */
                  EIF[ ]	/* EndIf */
                  PUSHB[ ]	/* 2 values pushed */
                  40 1
                  GETINFO[ ]	/* GetInfo */
                  LTEQ[ ]	/* LessThenOrEqual */
                  IF[ ]	/* If */
                    PUSHW[ ]	/* 2 values pushed */
                    16384 2048
                    MUL[ ]	/* Multiply */
                    PUSHW[ ]	/* 1 value pushed */
                    4096
                    GETINFO[ ]	/* GetInfo */
                    EQ[ ]	/* Equal */
                    IF[ ]	/* If */
                      PUSHW[ ]	/* 3 values pushed */
                      2 256 2
                      RS[ ]	/* ReadStore */
                      ADD[ ]	/* Add */
                      WS[ ]	/* WriteStore */
                    EIF[ ]	/* EndIf */
                  EIF[ ]	/* EndIf */
                EIF[ ]	/* EndIf */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          NPUSHB[ ]	/* 10 values pushed */
          5 64 8 64 9 64 12 2 13 2
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          1 2
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
            PUSHB[ ]	/* 3 values pushed */
            5 64 8
            PUSHW[ ]	/* 3 values pushed */
            256 9 256
            PUSHB[ ]	/* 4 values pushed */
            12 1 13 1
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            128 2
            RS[ ]	/* ReadStore */
            GT[ ]	/* GreaterThan */
            IF[ ]	/* If */
              PUSHB[ ]	/* 3 values pushed */
              5 64 8
              PUSHW[ ]	/* 1 value pushed */
              384
              PUSHB[ ]	/* 2 values pushed */
              9 64
            ELSE[ ]	/* Else */
              PUSHW[ ]	/* 2 values pushed */
              256 2
              RS[ ]	/* ReadStore */
              GT[ ]	/* GreaterThan */
              IF[ ]	/* If */
                PUSHB[ ]	/* 3 values pushed */
                5 64 8
                PUSHW[ ]	/* 3 values pushed */
                384 9 320
              ELSE[ ]	/* Else */
                PUSHW[ ]	/* 2 values pushed */
                384 2
                RS[ ]	/* ReadStore */
                GT[ ]	/* GreaterThan */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  5 64 8
                  PUSHW[ ]	/* 1 value pushed */
                  512
                  PUSHB[ ]	/* 2 values pushed */
                  9 64
                ELSE[ ]	/* Else */
                  PUSHB[ ]	/* 3 values pushed */
                  5 64 8
                  PUSHW[ ]	/* 3 values pushed */
                  256 9 256
                EIF[ ]	/* EndIf */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
            PUSHW[ ]	/* 2 values pushed */
            16384 128
            GETINFO[ ]	/* GetInfo */
            NEQ[ ]	/* NotEqual */
            PUSHW[ ]	/* 2 values pushed */
            16384 512
            MUL[ ]	/* Multiply */
            PUSHW[ ]	/* 1 value pushed */
            1024
            GETINFO[ ]	/* GetInfo */
            NEQ[ ]	/* NotEqual */
            AND[ ]	/* LogicalAnd */
            IF[ ]	/* If */
              PUSHB[ ]	/* 4 values pushed */
              12 0 13 1
            ELSE[ ]	/* Else */
              PUSHB[ ]	/* 4 values pushed */
              12 0 13 1
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        WS[ ]	/* WriteStore */
        WS[ ]	/* WriteStore */
        WS[ ]	/* WriteStore */
        WS[ ]	/* WriteStore */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 2 values pushed */
        2 78
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        79
        CALL[ ]	/* CallFunction */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        64
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MPPEM[ ]	/* MeasurePixelPerEm */
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            2
            CINDEX[ ]	/* CopyXToTopStack */
            RCVT[ ]	/* ReadCVT */
            PUSHB[ ]	/* 2 values pushed */
            1 78
            CALL[ ]	/* CallFunction */
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          MPPEM[ ]	/* MeasurePixelPerEm */
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            CINDEX[ ]	/* CopyXToTopStack */
            RCVT[ ]	/* ReadCVT */
            DUP[ ]	/* DuplicateTopStack */
            ABS[ ]	/* Absolute */
            ROLL[ ]	/* RollTopThreeStack */
            MUL[ ]	/* Multiply */
            PUSHB[ ]	/* 1 value pushed */
            64
            GTEQ[ ]	/* GreaterThanOrEqual */
            IF[ ]	/* If */
              PUSHB[ ]	/* 2 values pushed */
              2 78
              CALL[ ]	/* CallFunction */
              ADD[ ]	/* Add */
            ELSE[ ]	/* Else */
              POP[ ]	/* PopTopStack */
            EIF[ ]	/* EndIf */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        DUP[ ]	/* DuplicateTopStack */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          NEG[ ]	/* Negate */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 2 values pushed */
        20 20
        ROLL[ ]	/* RollTopThreeStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 2 values pushed */
        16 16
        RS[ ]	/* ReadStore */
        MPPEM[ ]	/* MeasurePixelPerEm */
        ROLL[ ]	/* RollTopThreeStack */
        RS[ ]	/* ReadStore */
        LTEQ[ ]	/* LessThenOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          79
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 2 values pushed */
        97 6
        MINDEX[ ]	/* MoveXToTopStack */
        ADD[ ]	/* Add */
        CALL[ ]	/* CallFunction */
        ROLL[ ]	/* RollTopThreeStack */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          5
          RS[ ]	/* ReadStore */
          MAX[ ]	/* Maximum */
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        MD[0]	/* MeasureDistance */
        MUL[ ]	/* Multiply */
        SWAP[ ]	/* SwapTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        79
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        MD[0]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        MUL[ ]	/* Multiply */
        ODD[ ]	/* Odd */
        DUP[ ]	/* DuplicateTopStack */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        98
        ADD[ ]	/* Add */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        GC[0]	/* GetCoordOnPVector */
        ROLL[ ]	/* RollTopThreeStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        32
        MUL[ ]	/* Multiply */
        SUB[ ]	/* Subtract */
        MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 2 values pushed */
        2 3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 2 values pushed */
        1 4
        CINDEX[ ]	/* CopyXToTopStack */
        SVTCA[1]	/* SetFPVectorToAxis */
        MIAP[0]	/* MoveIndirectAbsPt */
        SVTCA[0]	/* SetFPVectorToAxis */
        MIAP[0]	/* MoveIndirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        1 2
        SPVTL[0]	/* SetPVectorToLine */
        GPV[ ]	/* GetPVector */
        PUSHB[ ]	/* 1 value pushed */
        10
        SWAP[ ]	/* SwapTopStack */
        NEG[ ]	/* Negate */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        11
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        2 3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 2 values pushed */
        1 4
        CINDEX[ ]	/* CopyXToTopStack */
        SVTCA[1]	/* SetFPVectorToAxis */
        MIAP[1]	/* MoveIndirectAbsPt */
        SVTCA[0]	/* SetFPVectorToAxis */
        MIAP[1]	/* MoveIndirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        1 2
        SPVTL[0]	/* SetPVectorToLine */
        GPV[ ]	/* GetPVector */
        PUSHB[ ]	/* 1 value pushed */
        6
        SWAP[ ]	/* SwapTopStack */
        NEG[ ]	/* Negate */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        7
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
          SWAP[ ]	/* SwapTopStack */
          RCVT[ ]	/* ReadCVT */
          DUP[ ]	/* DuplicateTopStack */
          RTG[ ]	/* RoundToGrid */
          ROUND[01]	/* Round */
          ROLL[ ]	/* RollTopThreeStack */
          MUL[ ]	/* Multiply */
          SWAP[ ]	/* SwapTopStack */
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            CEILING[ ]	/* Ceiling */
          ELSE[ ]	/* Else */
            FLOOR[ ]	/* Floor */
          EIF[ ]	/* EndIf */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          32
          MUL[ ]	/* Multiply */
          PUSHB[ ]	/* 1 value pushed */
          64
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          4
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          4 0
          WS[ ]	/* WriteStore */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        RTG[ ]	/* RoundToGrid */
        SVTCA[1]	/* SetFPVectorToAxis */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 2 values pushed */
        0 78
        CALL[ ]	/* CallFunction */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        PUSHB[ ]	/* 2 values pushed */
        64 79
        CALL[ ]	/* CallFunction */
        LT[ ]	/* LessThan */
        OR[ ]	/* LogicalOr */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 2 values pushed */
          1 78
          CALL[ ]	/* CallFunction */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 2 values pushed */
          64 4
          MINDEX[ ]	/* MoveXToTopStack */
          SUB[ ]	/* Subtract */
          MUL[ ]	/* Multiply */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 2 values pushed */
          1 78
          CALL[ ]	/* CallFunction */
          WCVTP[ ]	/* WriteCVTInPixels */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 2 values pushed */
          1 78
          CALL[ ]	/* CallFunction */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          WCVTP[ ]	/* WriteCVTInPixels */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        PUSHB[ ]	/* 2 values pushed */
        64 79
        CALL[ ]	/* CallFunction */
        LT[ ]	/* LessThan */
        OR[ ]	/* LogicalOr */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          SUB[ ]	/* Subtract */
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          RCVT[ ]	/* ReadCVT */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 2 values pushed */
        1 78
        CALL[ ]	/* CallFunction */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        64
        LTEQ[ ]	/* LessThenOrEqual */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        GTEQ[ ]	/* GreaterThanOrEqual */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        64
        LTEQ[ ]	/* LessThenOrEqual */
        AND[ ]	/* LogicalAnd */
        AND[ ]	/* LogicalAnd */
        PUSHB[ ]	/* 2 values pushed */
        64 79
        CALL[ ]	/* CallFunction */
        EQ[ ]	/* Equal */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          ROLL[ ]	/* RollTopThreeStack */
          GPV[ ]	/* GetPVector */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          GTEQ[ ]	/* GreaterThanOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 2 values pushed */
            64 64
            ROLL[ ]	/* RollTopThreeStack */
            SUB[ ]	/* Subtract */
            DUP[ ]	/* DuplicateTopStack */
            MUL[ ]	/* Multiply */
            SUB[ ]	/* Subtract */
          ELSE[ ]	/* Else */
            DUP[ ]	/* DuplicateTopStack */
            MUL[ ]	/* Multiply */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          ROLL[ ]	/* RollTopThreeStack */
        EIF[ ]	/* EndIf */
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 2 values pushed */
        2 78
        CALL[ ]	/* CallFunction */
        ADD[ ]	/* Add */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SFVTCA[1]	/* SetFVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        11 10
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        RS[ ]	/* ReadStore */
        NEG[ ]	/* Negate */
        SPVFS[ ]	/* SetPVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        10 11
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        RS[ ]	/* ReadStore */
        SFVFS[ ]	/* SetFVectorFromStack */
        SPVTCA[0]	/* SetPVectorToAxis */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        MUL[ ]	/* Multiply */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHW[ ]	/* 1 value pushed */
        8192
        DIV[ ]	/* Divide */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        DIV[ ]	/* Divide */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        32
        ADD[ ]	/* Add */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHW[ ]	/* 1 value pushed */
        8192
        DIV[ ]	/* Divide */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        DIV[ ]	/* Divide */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        MUL[ ]	/* Multiply */
        CEILING[ ]	/* Ceiling */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHW[ ]	/* 1 value pushed */
        8192
        DIV[ ]	/* Divide */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        DIV[ ]	/* Divide */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        MUL[ ]	/* Multiply */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        32
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHW[ ]	/* 1 value pushed */
        8192
        DIV[ ]	/* Divide */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        DIV[ ]	/* Divide */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 2 values pushed */
        2 78
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 2 values pushed */
        1 78
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        MD[1]	/* MeasureDistance */
        SWAP[ ]	/* SwapTopStack */
        RCVT[ ]	/* ReadCVT */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        3
        RS[ ]	/* ReadStore */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          DUP[ ]	/* DuplicateTopStack */
          ABS[ ]	/* Absolute */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 2 values pushed */
        2 78
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        MD[1]	/* MeasureDistance */
        SWAP[ ]	/* SwapTopStack */
        RCVT[ ]	/* ReadCVT */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        3
        RS[ ]	/* ReadStore */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          DUP[ ]	/* DuplicateTopStack */
          ABS[ ]	/* Absolute */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 2 values pushed */
        1 78
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 2 values pushed */
        2 78
        CALL[ ]	/* CallFunction */
        ROLL[ ]	/* RollTopThreeStack */
        SRP0[ ]	/* SetRefPoint0 */
        MSIRP[1]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 2 values pushed */
        1 78
        CALL[ ]	/* CallFunction */
        ROLL[ ]	/* RollTopThreeStack */
        SRP0[ ]	/* SetRefPoint0 */
        MSIRP[1]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 1 value pushed */
        103
        CALL[ ]	/* CallFunction */
        ROLL[ ]	/* RollTopThreeStack */
        SRP0[ ]	/* SetRefPoint0 */
        MSIRP[1]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 1 value pushed */
        104
        CALL[ ]	/* CallFunction */
        ROLL[ ]	/* RollTopThreeStack */
        SRP0[ ]	/* SetRefPoint0 */
        MSIRP[1]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          106
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          108
        EIF[ ]	/* EndIf */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        128
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SWAP[ ]	/* SwapTopStack */
        MSIRP[0]	/* MoveStackIndirRelPt */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SWAP[ ]	/* SwapTopStack */
        MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        128
        MUL[ ]	/* Multiply */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        MD[0]	/* MeasureDistance */
        MUL[ ]	/* Multiply */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        128
        MUL[ ]	/* Multiply */
        DUP[ ]	/* DuplicateTopStack */
        IF[ ]	/* If */
          DIV[ ]	/* Divide */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        ROLL[ ]	/* RollTopThreeStack */
        GC[0]	/* GetCoordOnPVector */
        ROLL[ ]	/* RollTopThreeStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        32
        MUL[ ]	/* Multiply */
        SUB[ ]	/* Subtract */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        110
        CALL[ ]	/* CallFunction */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SWAP[ ]	/* SwapTopStack */
        MSIRP[0]	/* MoveStackIndirRelPt */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SWAP[ ]	/* SwapTopStack */
        MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 2 values pushed */
          2 78
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          128
          LT[ ]	/* LessThan */
          DUP[ ]	/* DuplicateTopStack */
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        ADD[ ]	/* Add */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            DUP[ ]	/* DuplicateTopStack */
            FLOOR[ ]	/* Floor */
            SUB[ ]	/* Subtract */
            PUSHB[ ]	/* 1 value pushed */
            64
            SWAP[ ]	/* SwapTopStack */
            SUB[ ]	/* Subtract */
            PUSHB[ ]	/* 2 values pushed */
            0 3
            CINDEX[ ]	/* CopyXToTopStack */
            LT[ ]	/* LessThan */
            PUSHB[ ]	/* 1 value pushed */
            3
            CINDEX[ ]	/* CopyXToTopStack */
            PUSHB[ ]	/* 1 value pushed */
            3
            CINDEX[ ]	/* CopyXToTopStack */
            LT[ ]	/* LessThan */
            AND[ ]	/* LogicalAnd */
            IF[ ]	/* If */
              DUP[ ]	/* DuplicateTopStack */
              PUSHB[ ]	/* 1 value pushed */
              3
              CINDEX[ ]	/* CopyXToTopStack */
              SUB[ ]	/* Subtract */
              ROLL[ ]	/* RollTopThreeStack */
              GTEQ[ ]	/* GreaterThanOrEqual */
              IF[ ]	/* If */
                POP[ ]	/* PopTopStack */
                PUSHB[ ]	/* 1 value pushed */
                0
              EIF[ ]	/* EndIf */
            ELSE[ ]	/* Else */
              POP[ ]	/* PopTopStack */
            EIF[ ]	/* EndIf */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            7
            EQ[ ]	/* Equal */
            IF[ ]	/* If */
              DUP[ ]	/* DuplicateTopStack */
              FLOOR[ ]	/* Floor */
              SUB[ ]	/* Subtract */
              NEG[ ]	/* Negate */
              SWAP[ ]	/* SwapTopStack */
              POP[ ]	/* PopTopStack */
            ELSE[ ]	/* Else */
              POP[ ]	/* PopTopStack */
              POP[ ]	/* PopTopStack */
              PUSHB[ ]	/* 1 value pushed */
              0
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 2 values pushed */
        2 78
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        0
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          0
        ELSE[ ]	/* Else */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          PUSHB[ ]	/* 1 value pushed */
          1
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        FLOOR[ ]	/* Floor */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        MINDEX[ ]	/* MoveXToTopStack */
        MD[0]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        112
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        NEG[ ]	/* Negate */
        PUSHB[ ]	/* 1 value pushed */
        32
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        FLOOR[ ]	/* Floor */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        32
        SUB[ ]	/* Subtract */
        NEG[ ]	/* Negate */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 2 values pushed */
          2 78
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          RCVT[ ]	/* ReadCVT */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        SUB[ ]	/* Subtract */
        NEG[ ]	/* Negate */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        MSIRP[1]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHW[ ]	/* 1 value pushed */
        512
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHW[ ]	/* 1 value pushed */
        512
        MUL[ ]	/* Multiply */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        93
        ADD[ ]	/* Add */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        SRP1[ ]	/* SetRefPoint1 */
        ROLL[ ]	/* RollTopThreeStack */
        SRP2[ ]	/* SetRefPoint2 */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        IP[ ]	/* InterpolatePts */
        ROLL[ ]	/* RollTopThreeStack */
        IF[ ]	/* If */
          PUSHW[ ]	/* 3 values pushed */
          93 4096 4
          MINDEX[ ]	/* MoveXToTopStack */
          MUL[ ]	/* Multiply */
          ODD[ ]	/* Odd */
          ADD[ ]	/* Add */
          CALL[ ]	/* CallFunction */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          DUP[ ]	/* DuplicateTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          DUP[ ]	/* DuplicateTopStack */
          GC[0]	/* GetCoordOnPVector */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 2 values pushed */
          2 78
          CALL[ ]	/* CallFunction */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          DUP[ ]	/* DuplicateTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          MD[0]	/* MeasureDistance */
          PUSHB[ ]	/* 2 values pushed */
          2 78
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
        MSIRP[1]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHW[ ]	/* 3 values pushed */
        93 4096 9
        CINDEX[ ]	/* CopyXToTopStack */
        MUL[ ]	/* Multiply */
        ODD[ ]	/* Odd */
        ADD[ ]	/* Add */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        109
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 2 values pushed */
        93 7
        CINDEX[ ]	/* CopyXToTopStack */
        ADD[ ]	/* Add */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        111
        CALL[ ]	/* CallFunction */
        PUSHW[ ]	/* 3 values pushed */
        93 4096 8
        MINDEX[ ]	/* MoveXToTopStack */
        MUL[ ]	/* Multiply */
        ODD[ ]	/* Odd */
        ADD[ ]	/* Add */
        CALL[ ]	/* CallFunction */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          80
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          7
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          7
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          113
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          2
          SLOOP[ ]	/* SetLoopVariable */
          SHPIX[ ]	/* ShiftZoneByPixel */
          PUSHB[ ]	/* 1 value pushed */
          0
          GT[ ]	/* GreaterThan */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          GT[ ]	/* GreaterThan */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            CINDEX[ ]	/* CopyXToTopStack */
            PUSHB[ ]	/* 1 value pushed */
            6
            CINDEX[ ]	/* CopyXToTopStack */
            MD[0]	/* MeasureDistance */
            PUSHB[ ]	/* 1 value pushed */
            3
            CINDEX[ ]	/* CopyXToTopStack */
            PUSHB[ ]	/* 1 value pushed */
            5
            CINDEX[ ]	/* CopyXToTopStack */
            MD[0]	/* MeasureDistance */
            ADD[ ]	/* Add */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 1 value pushed */
            64
            GT[ ]	/* GreaterThan */
            IF[ ]	/* If */
              POP[ ]	/* PopTopStack */
            ELSE[ ]	/* Else */
              PUSHB[ ]	/* 1 value pushed */
              0
              GT[ ]	/* GreaterThan */
              IF[ ]	/* If */
                DUP[ ]	/* DuplicateTopStack */
                PUSHB[ ]	/* 1 value pushed */
                2
                EQ[ ]	/* Equal */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 1 value pushed */
                  4
                  CINDEX[ ]	/* CopyXToTopStack */
                  PUSHB[ ]	/* 1 value pushed */
                  4
                  CINDEX[ ]	/* CopyXToTopStack */
                  PUSHB[ ]	/* 1 value pushed */
                  7
                  CINDEX[ ]	/* CopyXToTopStack */
                  PUSHB[ ]	/* 1 value pushed */
                  7
                  CINDEX[ ]	/* CopyXToTopStack */
                  MD[0]	/* MeasureDistance */
                  PUSHB[ ]	/* 1 value pushed */
                  2
                  SLOOP[ ]	/* SetLoopVariable */
                  SHPIX[ ]	/* ShiftZoneByPixel */
                ELSE[ ]	/* Else */
                  PUSHB[ ]	/* 1 value pushed */
                  4
                  CINDEX[ ]	/* CopyXToTopStack */
                  PUSHB[ ]	/* 1 value pushed */
                  4
                  CINDEX[ ]	/* CopyXToTopStack */
                  PUSHB[ ]	/* 1 value pushed */
                  4
                  CINDEX[ ]	/* CopyXToTopStack */
                  PUSHB[ ]	/* 1 value pushed */
                  6
                  CINDEX[ ]	/* CopyXToTopStack */
                  MD[0]	/* MeasureDistance */
                  PUSHB[ ]	/* 1 value pushed */
                  2
                  SLOOP[ ]	/* SetLoopVariable */
                  SHPIX[ ]	/* ShiftZoneByPixel */
                EIF[ ]	/* EndIf */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHW[ ]	/* 3 values pushed */
        93 4096 11
        CINDEX[ ]	/* CopyXToTopStack */
        MUL[ ]	/* Multiply */
        ODD[ ]	/* Odd */
        ADD[ ]	/* Add */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        7
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        7
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        12
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        12
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        9
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        8
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        110
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        4
        SLOOP[ ]	/* SetLoopVariable */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 1 value pushed */
        7
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        7
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        7
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        109
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        109
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        80
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        113
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        SLOOP[ ]	/* SetLoopVariable */
        SHPIX[ ]	/* ShiftZoneByPixel */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        113
        CALL[ ]	/* CallFunction */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        NEG[ ]	/* Negate */
        PUSHB[ ]	/* 1 value pushed */
        2
        SLOOP[ ]	/* SetLoopVariable */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        64
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          SUB[ ]	/* Subtract */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          SUB[ ]	/* Subtract */
          SWAP[ ]	/* SwapTopStack */
        ELSE[ ]	/* Else */
          PUSHW[ ]	/* 1 value pushed */
          -64
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
            SWAP[ ]	/* SwapTopStack */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
            SWAP[ ]	/* SwapTopStack */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        8
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        8
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        SLOOP[ ]	/* SetLoopVariable */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        SLOOP[ ]	/* SetLoopVariable */
        SHPIX[ ]	/* ShiftZoneByPixel */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          6
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            0
            GT[ ]	/* GreaterThan */
            IF[ ]	/* If */
              PUSHB[ ]	/* 1 value pushed */
              6
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              6
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              6
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              6
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              11
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              11
              CINDEX[ ]	/* CopyXToTopStack */
              MD[0]	/* MeasureDistance */
              PUSHB[ ]	/* 1 value pushed */
              4
              SLOOP[ ]	/* SetLoopVariable */
              SHPIX[ ]	/* ShiftZoneByPixel */
              PUSHB[ ]	/* 1 value pushed */
              6
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              6
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              6
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              6
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              10
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              10
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              7
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              113
              CALL[ ]	/* CallFunction */
              PUSHB[ ]	/* 1 value pushed */
              4
              SLOOP[ ]	/* SetLoopVariable */
              SHPIX[ ]	/* ShiftZoneByPixel */
              PUSHB[ ]	/* 1 value pushed */
              4
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              4
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              5
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              7
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              5
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              113
              CALL[ ]	/* CallFunction */
              PUSHB[ ]	/* 1 value pushed */
              2
              SLOOP[ ]	/* SetLoopVariable */
              SHPIX[ ]	/* ShiftZoneByPixel */
            ELSE[ ]	/* Else */
              PUSHB[ ]	/* 1 value pushed */
              4
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHB[ ]	/* 1 value pushed */
              4
              CINDEX[ ]	/* CopyXToTopStack */
              PUSHW[ ]	/* 2 values pushed */
              -64 2
              SLOOP[ ]	/* SetLoopVariable */
              SHPIX[ ]	/* ShiftZoneByPixel */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        SDPVTL[1]	/* SetDualPVectorToLine */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          101
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          104
        EIF[ ]	/* EndIf */
        CALL[ ]	/* CallFunction */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        SPVTL[0]	/* SetPVectorToLine */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        MD[0]	/* MeasureDistance */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MUL[ ]	/* Multiply */
        LTEQ[ ]	/* LessThenOrEqual */
        PUSHB[ ]	/* 2 values pushed */
        0 3
        CINDEX[ ]	/* CopyXToTopStack */
        EQ[ ]	/* Equal */
        OR[ ]	/* LogicalOr */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          SPVTL[1]	/* SetPVectorToLine */
        ELSE[ ]	/* Else */
          DUP[ ]	/* DuplicateTopStack */
          MUL[ ]	/* Multiply */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          DUP[ ]	/* DuplicateTopStack */
          MUL[ ]	/* Multiply */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          83
          CALL[ ]	/* CallFunction */
          ROLL[ ]	/* RollTopThreeStack */
          MUL[ ]	/* Multiply */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          SDPVTL[1]	/* SetDualPVectorToLine */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          MD[1]	/* MeasureDistance */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NEG[ ]	/* Negate */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          DUP[ ]	/* DuplicateTopStack */
          SVTCA[1]	/* SetFPVectorToAxis */
          GC[0]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SVTCA[0]	/* SetFPVectorToAxis */
          GC[0]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          5
          MINDEX[ ]	/* MoveXToTopStack */
          DUP[ ]	/* DuplicateTopStack */
          SVTCA[1]	/* SetFPVectorToAxis */
          GC[0]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SVTCA[0]	/* SetFPVectorToAxis */
          GC[0]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          0
          SZPS[ ]	/* SetZonePointerS */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          SWAP[ ]	/* SwapTopStack */
          SCFS[ ]	/* SetCoordFromStackFP */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          SWAP[ ]	/* SwapTopStack */
          SCFS[ ]	/* SetCoordFromStackFP */
          SVTCA[0]	/* SetFPVectorToAxis */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          SWAP[ ]	/* SwapTopStack */
          SCFS[ ]	/* SetCoordFromStackFP */
          PUSHB[ ]	/* 1 value pushed */
          2
          SWAP[ ]	/* SwapTopStack */
          SCFS[ ]	/* SetCoordFromStackFP */
          SVTCA[1]	/* SetFPVectorToAxis */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          SWAP[ ]	/* SwapTopStack */
          SCFS[ ]	/* SetCoordFromStackFP */
          PUSHB[ ]	/* 1 value pushed */
          2
          SWAP[ ]	/* SwapTopStack */
          SCFS[ ]	/* SetCoordFromStackFP */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 3 values pushed */
          2 0 1
          SFVTL[0]	/* SetFVectorToLine */
          SWAP[ ]	/* SwapTopStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
          PUSHB[ ]	/* 3 values pushed */
          2 0 1
          SFVTL[1]	/* SetFVectorToLine */
          SWAP[ ]	/* SwapTopStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
          PUSHB[ ]	/* 2 values pushed */
          2 1
          SPVTL[1]	/* SetPVectorToLine */
          PUSHB[ ]	/* 1 value pushed */
          1
          SZPS[ ]	/* SetZonePointerS */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        GFV[ ]	/* GetFVector */
        GPV[ ]	/* GetPVector */
        ROLL[ ]	/* RollTopThreeStack */
        MUL[ ]	/* Multiply */
        SWAP[ ]	/* SwapTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        ABS[ ]	/* Absolute */
        PUSHW[ ]	/* 2 values pushed */
        16384 1024
        MUL[ ]	/* Multiply */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          0
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        9
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        9
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        7
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        118
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SFVTCA[1]	/* SetFVectorToAxis */
        ELSE[ ]	/* Else */
          SFVTCA[0]	/* SetFVectorToAxis */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        119
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        118
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        0
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SFVTCA[1]	/* SetFVectorToAxis */
        ELSE[ ]	/* Else */
          SFVTCA[0]	/* SetFVectorToAxis */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        119
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        7
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        8
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        118
        CALL[ ]	/* CallFunction */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SFVTCA[1]	/* SetFVectorToAxis */
        ELSE[ ]	/* Else */
          SFVTCA[0]	/* SetFVectorToAxis */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        7
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        119
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        118
        CALL[ ]	/* CallFunction */
        SFVTL[0]	/* SetFVectorToLine */
        PUSHB[ ]	/* 1 value pushed */
        119
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        7
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        8
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        118
        CALL[ ]	/* CallFunction */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        SFVTL[0]	/* SetFVectorToLine */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        119
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        118
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        0
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SFVTCA[1]	/* SetFVectorToAxis */
        ELSE[ ]	/* Else */
          SFVTCA[0]	/* SetFVectorToAxis */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        119
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        8
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        11
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        11
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        9
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        118
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        SFVTL[0]	/* SetFVectorToLine */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        7
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        119
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        118
        CALL[ ]	/* CallFunction */
        SFVTL[0]	/* SetFVectorToLine */
        PUSHB[ ]	/* 1 value pushed */
        119
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SPVTCA[1]	/* SetPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        MD[1]	/* MeasureDistance */
        SPVTCA[0]	/* SetPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        MUL[ ]	/* Multiply */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        MUL[ ]	/* Multiply */
        SUB[ ]	/* Subtract */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        93 14
        CINDEX[ ]	/* CopyXToTopStack */
        ADD[ ]	/* Add */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        12
        MINDEX[ ]	/* MoveXToTopStack */
        SRP1[ ]	/* SetRefPoint1 */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        SRP2[ ]	/* SetRefPoint2 */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        IP[ ]	/* InterpolatePts */
        PUSHB[ ]	/* 1 value pushed */
        7
        CINDEX[ ]	/* CopyXToTopStack */
        IP[ ]	/* InterpolatePts */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        9
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        124
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        PUSHB[ ]	/* 1 value pushed */
        11
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        8
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        124
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          7
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          11
          CINDEX[ ]	/* CopyXToTopStack */
          SDPVTL[1]	/* SetDualPVectorToLine */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SFVFS[ ]	/* SetFVectorFromStack */
          PUSHB[ ]	/* 1 value pushed */
          10
          CINDEX[ ]	/* CopyXToTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          CINDEX[ ]	/* CopyXToTopStack */
          MDRP[00001]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SFVFS[ ]	/* SetFVectorFromStack */
          PUSHB[ ]	/* 1 value pushed */
          7
          CINDEX[ ]	/* CopyXToTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          6
          CINDEX[ ]	/* CopyXToTopStack */
          MDRP[00001]	/* MoveDirectRelPt */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          7
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          11
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          11
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHW[ ]	/* 2 values pushed */
          -1 118
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SFVFS[ ]	/* SetFVectorFromStack */
          PUSHB[ ]	/* 1 value pushed */
          7
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          10
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          119
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          10
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHW[ ]	/* 2 values pushed */
          -1 118
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SFVFS[ ]	/* SetFVectorFromStack */
          PUSHB[ ]	/* 1 value pushed */
          10
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          7
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          119
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        8
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        8
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        SFVFS[ ]	/* SetFVectorFromStack */
        PUSHB[ ]	/* 1 value pushed */
        12
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        12
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        12
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          106
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          108
        EIF[ ]	/* EndIf */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        SFVFS[ ]	/* SetFVectorFromStack */
        PUSHB[ ]	/* 1 value pushed */
        9
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        9
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        9
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          106
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          108
        EIF[ ]	/* EndIf */
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        32
        MUL[ ]	/* Multiply */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        8
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        8
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        32
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 2 values pushed */
        1 12
        CINDEX[ ]	/* CopyXToTopStack */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SFVTCA[0]	/* SetFVectorToAxis */
        ELSE[ ]	/* Else */
          SFVTCA[1]	/* SetFVectorToAxis */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        10
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        MSIRP[0]	/* MoveStackIndirRelPt */
        PUSHB[ ]	/* 1 value pushed */
        6
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        MINDEX[ ]	/* MoveXToTopStack */
        SFVFS[ ]	/* SetFVectorFromStack */
        PUSHB[ ]	/* 1 value pushed */
        7
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        ROLL[ ]	/* RollTopThreeStack */
        MSIRP[0]	/* MoveStackIndirRelPt */
        PUSHB[ ]	/* 2 values pushed */
        1 7
        MINDEX[ ]	/* MoveXToTopStack */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SFVTCA[0]	/* SetFVectorToAxis */
        ELSE[ ]	/* Else */
          SFVTCA[1]	/* SetFVectorToAxis */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        MSIRP[0]	/* MoveStackIndirRelPt */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        SFVFS[ ]	/* SetFVectorFromStack */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SWAP[ ]	/* SwapTopStack */
        MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          0 16384
        ELSE[ ]	/* Else */
          PUSHW[ ]	/* 2 values pushed */
          16384 0
        EIF[ ]	/* EndIf */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          0 16384
        ELSE[ ]	/* Else */
          PUSHW[ ]	/* 2 values pushed */
          16384 0
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        125
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        SFVTL[0]	/* SetFVectorToLine */
        GFV[ ]	/* GetFVector */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          0 16384
        ELSE[ ]	/* Else */
          PUSHW[ ]	/* 2 values pushed */
          16384 0
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        125
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SFVTL[0]	/* SetFVectorToLine */
        PUSHB[ ]	/* 1 value pushed */
        1
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          0 16384
        ELSE[ ]	/* Else */
          PUSHW[ ]	/* 2 values pushed */
          16384 0
        EIF[ ]	/* EndIf */
        GFV[ ]	/* GetFVector */
        PUSHB[ ]	/* 1 value pushed */
        125
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        SFVTL[0]	/* SetFVectorToLine */
        GFV[ ]	/* GetFVector */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        SFVTL[0]	/* SetFVectorToLine */
        GFV[ ]	/* GetFVector */
        PUSHB[ ]	/* 1 value pushed */
        125
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        SVTCA[1]	/* SetFPVectorToAxis */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SVTCA[0]	/* SetFPVectorToAxis */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        10
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        ROLL[ ]	/* RollTopThreeStack */
        MUL[ ]	/* Multiply */
        SWAP[ ]	/* SwapTopStack */
        DIV[ ]	/* Divide */
        SUB[ ]	/* Subtract */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        9
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        RDTG[ ]	/* RoundDownToGrid */
        MDRP[00101]	/* MoveDirectRelPt */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          106
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          108
        EIF[ ]	/* EndIf */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          106
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          108
        EIF[ ]	/* EndIf */
        CALL[ ]	/* CallFunction */
        RTG[ ]	/* RoundToGrid */
        PUSHB[ ]	/* 1 value pushed */
        8
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        7
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        10
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        111
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          102
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          104
        EIF[ ]	/* EndIf */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          102
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          104
        EIF[ ]	/* EndIf */
        CALL[ ]	/* CallFunction */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          RDTG[ ]	/* RoundDownToGrid */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          MDRP[00101]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          1
          CINDEX[ ]	/* CopyXToTopStack */
          MDRP[00101]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          MINDEX[ ]	/* MoveXToTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          MINDEX[ ]	/* MoveXToTopStack */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          6
          MINDEX[ ]	/* MoveXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          MINDEX[ ]	/* MoveXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          111
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          RDTG[ ]	/* RoundDownToGrid */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          130
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          130
          CALL[ ]	/* CallFunction */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          ROUND[01]	/* Round */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          4
          RS[ ]	/* ReadStore */
          SVTCA[1]	/* SetFPVectorToAxis */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          96
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          ROUND[01]	/* Round */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          32
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          MINDEX[ ]	/* MoveXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          MINDEX[ ]	/* MoveXToTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          SLOOP[ ]	/* SetLoopVariable */
          SHPIX[ ]	/* ShiftZoneByPixel */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          ROUND[01]	/* Round */
          SUB[ ]	/* Subtract */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          2
          SLOOP[ ]	/* SetLoopVariable */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        RTG[ ]	/* RoundToGrid */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GT[ ]	/* GreaterThan */
        PUSHB[ ]	/* 2 values pushed */
        1 2
        RS[ ]	/* ReadStore */
        GTEQ[ ]	/* GreaterThanOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          DUP[ ]	/* DuplicateTopStack */
          SVTCA[1]	/* SetFPVectorToAxis */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          ALIGNRP[ ]	/* AlignRelativePt */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          IF[ ]	/* If */
            ALIGNRP[ ]	/* AlignRelativePt */
          ELSE[ ]	/* Else */
            IP[ ]	/* InterpolatePts */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          1
          ADD[ ]	/* Add */
          PUSHW[ ]	/* 1 value pushed */
          -23
          JMPR[ ]	/* Jump */
        EIF[ ]	/* EndIf */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        EQ[ ]	/* Equal */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SRP1[ ]	/* SetRefPoint1 */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP2[ ]	/* SetRefPoint2 */
        PUSHB[ ]	/* 1 value pushed */
        1
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        133
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        EQ[ ]	/* Equal */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP2[ ]	/* SetRefPoint2 */
        PUSHB[ ]	/* 1 value pushed */
        1
        SUB[ ]	/* Subtract */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SRP1[ ]	/* SetRefPoint1 */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        6
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        133
        CALL[ ]	/* CallFunction */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 1 value pushed */
        133
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          GPV[ ]	/* GetPVector */
          SPVTCA[0]	/* SetPVectorToAxis */
          ROLL[ ]	/* RollTopThreeStack */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GTEQ[ ]	/* GreaterThanOrEqual */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          MPPEM[ ]	/* MeasurePixelPerEm */
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
            SPVFS[ ]	/* SetPVectorFromStack */
            SHPIX[ ]	/* ShiftZoneByPixel */
          ELSE[ ]	/* Else */
            SPVFS[ ]	/* SetPVectorFromStack */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        152
        CALL[ ]	/* CallFunction */
        IF[ ]	/* If */
          GPV[ ]	/* GetPVector */
          SPVTCA[0]	/* SetPVectorToAxis */
          ROLL[ ]	/* RollTopThreeStack */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GTEQ[ ]	/* GreaterThanOrEqual */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          MPPEM[ ]	/* MeasurePixelPerEm */
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
            SPVFS[ ]	/* SetPVectorFromStack */
            SHPIX[ ]	/* ShiftZoneByPixel */
          ELSE[ ]	/* Else */
            SPVFS[ ]	/* SetPVectorFromStack */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        95
        SWAP[ ]	/* SwapTopStack */
        JROT[ ]	/* JumpRelativeOnTrue */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        86
        SWAP[ ]	/* SwapTopStack */
        JROF[ ]	/* JumpRelativeOnFalse */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        32
        DUP[ ]	/* DuplicateTopStack */
        NOT[ ]	/* LogicalNot */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 2 values pushed */
          0 71
          JMPR[ ]	/* Jump */
        EIF[ ]	/* EndIf */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        PUSHW[ ]	/* 1 value pushed */
        4096
        MUL[ ]	/* Multiply */
        ODD[ ]	/* Odd */
        IF[ ]	/* If */
          PUSHW[ ]	/* 1 value pushed */
          4096
          MUL[ ]	/* Multiply */
          ODD[ ]	/* Odd */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
            PUSHB[ ]	/* 2 values pushed */
            1 44
            JMPR[ ]	/* Jump */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        128
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        NOT[ ]	/* LogicalNot */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 2 values pushed */
          0 27
          JMPR[ ]	/* Jump */
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        128
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        NOT[ ]	/* LogicalNot */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 2 values pushed */
          0 12
          JMPR[ ]	/* Jump */
        EIF[ ]	/* EndIf */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        SUB[ ]	/* Subtract */
        PUSHW[ ]	/* 1 value pushed */
        -77
        JMPR[ ]	/* Jump */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        123
        SWAP[ ]	/* SwapTopStack */
        JROT[ ]	/* JumpRelativeOnTrue */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        114
        SWAP[ ]	/* SwapTopStack */
        JROF[ ]	/* JumpRelativeOnFalse */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RS[ ]	/* ReadStore */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 1 value pushed */
        32
        DUP[ ]	/* DuplicateTopStack */
        NOT[ ]	/* LogicalNot */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          99
          JMPR[ ]	/* Jump */
        EIF[ ]	/* EndIf */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        PUSHW[ ]	/* 1 value pushed */
        4096
        MUL[ ]	/* Multiply */
        ODD[ ]	/* Odd */
        IF[ ]	/* If */
          PUSHW[ ]	/* 1 value pushed */
          4096
          MUL[ ]	/* Multiply */
          ODD[ ]	/* Odd */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MINDEX[ ]	/* MoveXToTopStack */
            PUSHB[ ]	/* 1 value pushed */
            1
            OR[ ]	/* LogicalOr */
            PUSHB[ ]	/* 1 value pushed */
            4
            MINDEX[ ]	/* MoveXToTopStack */
            PUSHB[ ]	/* 1 value pushed */
            4
            MINDEX[ ]	/* MoveXToTopStack */
            PUSHB[ ]	/* 1 value pushed */
            4
            MINDEX[ ]	/* MoveXToTopStack */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
            PUSHB[ ]	/* 2 values pushed */
            54 0
            SWAP[ ]	/* SwapTopStack */
            JMPR[ ]	/* Jump */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        128
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        NOT[ ]	/* LogicalNot */
        IF[ ]	/* If */
          ROLL[ ]	/* RollTopThreeStack */
          NOT[ ]	/* LogicalNot */
          ROLL[ ]	/* RollTopThreeStack */
          AND[ ]	/* LogicalAnd */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          29
          JMPR[ ]	/* Jump */
        EIF[ ]	/* EndIf */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 1 value pushed */
        128
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        NOT[ ]	/* LogicalNot */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          14
          JMPR[ ]	/* Jump */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        SUB[ ]	/* Subtract */
        PUSHW[ ]	/* 1 value pushed */
        -104
        JMPR[ ]	/* Jump */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      NPUSHB[ ]	/* 255 values pushed */
      187 34 185 85 186 34 184 85 185 89 184 89 183 82 167 31 182 82 255 31 181 80 250 31 180
      80 255 31 179 81 255 31 178 81 125 31 177 79 250 31 176 79 255 31 175 78 255 31 174 78
      125 31 173 78 84 31 172 77 84 31 171 77 255 31 170 77 18 31 169 76 255 31 168 76 250
      31 167 76 125 31 166 74 255 31 165 74 167 31 164 75 250 31 163 75 255 31 162 75 56 31
      161 73 255 31 160 72 255 31 159 72 250 31 158 71 125 31 157 71 255 31 156 70 39 31 155
      69 100 31 154 69 255 31 153 69 42 31 152 66 63 31 151 66 250 31 150 66 255 31 149 66
      167 31 148 67 255 31 147 67 250 31 146 65 255 31 145 64 167 31 144 64 255 31 143 64 63
      31 142 63 255 31 141 59 100 31 140 59 255 31 139 62 255 31 138 62 167 31 137 61 255 31
      136 61 250 31 135 60 255 31 134 60 56 31 133 58 167 31 132 58 255 31 131 57 255 31 130
      56 167 31 129 56 255 31 128 55 250 31 127 55 255 31 126 55 250 31 125 55 100 31 124 54
      250 31 123 54 255
      NPUSHB[ ]	/* 255 values pushed */
      31 122 53 167 31 121 53 255 31 120 53 84 31 119 52 255 31 118 50 39 31 117 51 167 31
      116 51 255 31 115 50 255 31 114 50 84 31 113 49 125 31 112 49 250 31 111 49 255 31 110
      47 255 31 109 48 255 31 108 48 250 31 107 48 125 31 106 46 250 31 105 46 250 31 104 45
      100 31 103 45 255 31 102 44 250 31 101 44 255 31 100 43 255 31 99 43 100 31 98 42 84
      31 97 42 255 31 96 42 167 31 95 41 100 31 94 41 255 31 93 41 125 31 92 41 84 31
      91 40 255 31 90 39 255 31 89 39 250 31 88 38 255 31 87 37 255 31 86 37 125 31 85
      37 72 31 84 37 46 31 83 36 255 31 82 80 46 31 81 80 125 31 79 78 250 31 76 74
      42 31 75 74 34 31 72 70 250 31 71 70 84 31 70 68 167 31 69 68 21 31 67 66 63
      31 62 59 100 31 61 59 39 31 60 59 19 31 58 57 250 31 57 55 39 31 56 55 84 31
      55 35 255 31 54 53 84 31 53 35 28 31 52 34 10 31 51 50 72 31 50 34 255 31 49
      84 47 85 48 47
      NPUSHB[ ]	/* 177 values pushed */
      84 31 47 33 255 31 46 33 27 31 45 43 39 31 44 43 72 31 43 26 32 30 92 42 32
      34 31 41 5 31 30 92 40 31 50 31 39 38 100 31 38 84 37 85 37 30 255 31 36 30
      16 31 35 56 33 55 91 32 54 30 43 91 34 56 33 55 91 31 54 30 43 91 29 33 63
      30 255 90 19 34 18 85 17 125 16 85 18 89 16 89 13 34 12 85 5 34 4 85 12 89
      4 89 127 4 175 4 223 4 3 15 55 14 85 11 55 10 85 7 55 6 85 1 56 0 85
      14 89 10 89 6 89 15 6 127 6 159 6 191 6 4 0 89 15 0 79 0 127 0 175 0
      4 9 34 8 85 3 34 2 85 8 89 2 89 127 2 175 2 223 2 3 16 0 3 64 64
      5 1
      PUSHW[ ]	/* 2 values pushed */
      400 84
      CALL[ ]	/* CallFunction */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      2047
      GT[ ]	/* GreaterThan */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      9
      LT[ ]	/* LessThan */
      OR[ ]	/* LogicalOr */
      PUSHB[ ]	/* 1 value pushed */
      1
      GETINFO[ ]	/* GetInfo */
      PUSHB[ ]	/* 1 value pushed */
      37
      GTEQ[ ]	/* GreaterThanOrEqual */
      PUSHB[ ]	/* 1 value pushed */
      1
      GETINFO[ ]	/* GetInfo */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      PUSHB[ ]	/* 1 value pushed */
      6
      GETINFO[ ]	/* GetInfo */
      PUSHB[ ]	/* 1 value pushed */
      0
      NEQ[ ]	/* NotEqual */
      AND[ ]	/* LogicalAnd */
      OR[ ]	/* LogicalOr */
      IF[ ]	/* If */
        PUSHB[ ]	/* 2 values pushed */
        1 1
        INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      SCANCTRL[ ]	/* ScanConversionControl */
      SCANTYPE[ ]	/* ScanType */
      SCANTYPE[ ]	/* ScanType */
      SVTCA[0]	/* SetFPVectorToAxis */
      SCVTCI[ ]	/* SetCVTCutIn */
      WS[ ]	/* WriteStore */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      144
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
        PUSHB[ ]	/* 3 values pushed */
        3 0 0
        SCVTCI[ ]	/* SetCVTCutIn */
        WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 2 values pushed */
      2 2
      RS[ ]	/* ReadStore */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
        PUSHB[ ]	/* 2 values pushed */
        4 3
        INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      RTG[ ]	/* RoundToGrid */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="710"/>
    <cv index="1" value="9"/>
    <cv index="2" value="655"/>
    <cv index="3" value="15"/>
    <cv index="4" value="655"/>
    <cv index="5" value="15"/>
    <cv index="6" value="465"/>
    <cv index="7" value="15"/>
    <cv index="8" value="0"/>
    <cv index="9" value="-15"/>
    <cv index="10" value="0"/>
    <cv index="11" value="-15"/>
    <cv index="12" value="0"/>
    <cv index="13" value="-15"/>
    <cv index="14" value="-230"/>
    <cv index="15" value="-9"/>
    <cv index="16" value="666"/>
    <cv index="17" value="4"/>
    <cv index="18" value="0"/>
    <cv index="19" value="-15"/>
    <cv index="20" value="0"/>
    <cv index="21" value="655"/>
    <cv index="22" value="188"/>
    <cv index="23" value="465"/>
    <cv index="24" value="133"/>
    <cv index="25" value="655"/>
    <cv index="26" value="188"/>
    <cv index="27" value="666"/>
    <cv index="28" value="191"/>
    <cv index="29" value="83"/>
    <cv index="30" value="83"/>
    <cv index="31" value="71"/>
    <cv index="32" value="71"/>
    <cv index="33" value="82"/>
    <cv index="34" value="72"/>
    <cv index="35" value="72"/>
    <cv index="36" value="50"/>
    <cv index="37" value="84"/>
    <cv index="38" value="5"/>
    <cv index="39" value="94"/>
    <cv index="40" value="61"/>
    <cv index="41" value="72"/>
    <cv index="42" value="56"/>
    <cv index="43" value="76"/>
    <cv index="44" value="82"/>
    <cv index="45" value="89"/>
    <cv index="46" value="63"/>
    <cv index="47" value="82"/>
    <cv index="48" value="76"/>
    <cv index="49" value="6"/>
    <cv index="50" value="71"/>
    <cv index="51" value="78"/>
    <cv index="52" value="127"/>
    <cv index="53" value="54"/>
    <cv index="54" value="60"/>
    <cv index="55" value="72"/>
    <cv index="56" value="77"/>
    <cv index="57" value="85"/>
    <cv index="58" value="87"/>
    <cv index="59" value="86"/>
    <cv index="60" value="59"/>
    <cv index="61" value="74"/>
    <cv index="62" value="82"/>
    <cv index="63" value="189"/>
    <cv index="64" value="72"/>
    <cv index="65" value="58"/>
    <cv index="66" value="75"/>
    <cv index="67" value="67"/>
    <cv index="68" value="88"/>
    <cv index="69" value="64"/>
    <cv index="70" value="91"/>
    <cv index="71" value="85"/>
    <cv index="72" value="93"/>
    <cv index="73" value="184"/>
    <cv index="74" value="72"/>
    <cv index="75" value="57"/>
    <cv index="76" value="84"/>
    <cv index="77" value="157"/>
    <cv index="78" value="57"/>
    <cv index="79" value="59"/>
    <cv index="80" value="73"/>
    <cv index="81" value="69"/>
    <cv index="82" value="84"/>
    <cv index="83" value="50"/>
    <cv index="84" value="73"/>
    <cv index="85" value="77"/>
    <cv index="86" value="80"/>
    <cv index="87" value="84"/>
    <cv index="88" value="89"/>
    <cv index="89" value="92"/>
    <cv index="90" value="94"/>
    <cv index="91" value="61"/>
    <cv index="92" value="66"/>
    <cv index="93" value="68"/>
    <cv index="94" value="72"/>
    <cv index="95" value="77"/>
    <cv index="96" value="53"/>
    <cv index="97" value="56"/>
    <cv index="98" value="62"/>
    <cv index="99" value="70"/>
    <cv index="100" value="75"/>
    <cv index="101" value="82"/>
    <cv index="102" value="84"/>
    <cv index="103" value="89"/>
    <cv index="104" value="94"/>
    <cv index="105" value="61"/>
    <cv index="106" value="65"/>
    <cv index="107" value="72"/>
    <cv index="108" value="75"/>
    <cv index="109" value="77"/>
    <cv index="110" value="82"/>
    <cv index="111" value="88"/>
    <cv index="112" value="90"/>
    <cv index="113" value="92"/>
    <cv index="114" value="66"/>
    <cv index="115" value="72"/>
    <cv index="116" value="78"/>
    <cv index="117" value="81"/>
    <cv index="118" value="84"/>
    <cv index="119" value="127"/>
    <cv index="120" value="48"/>
    <cv index="121" value="54"/>
    <cv index="122" value="57"/>
    <cv index="123" value="60"/>
    <cv index="124" value="62"/>
    <cv index="125" value="65"/>
    <cv index="126" value="68"/>
    <cv index="127" value="70"/>
    <cv index="128" value="73"/>
    <cv index="129" value="77"/>
    <cv index="130" value="80"/>
    <cv index="131" value="84"/>
    <cv index="132" value="87"/>
    <cv index="133" value="90"/>
    <cv index="134" value="50"/>
    <cv index="135" value="60"/>
    <cv index="136" value="72"/>
    <cv index="137" value="74"/>
    <cv index="138" value="79"/>
    <cv index="139" value="82"/>
    <cv index="140" value="87"/>
    <cv index="141" value="92"/>
    <cv index="142" value="189"/>
    <cv index="143" value="64"/>
    <cv index="144" value="72"/>
    <cv index="145" value="74"/>
    <cv index="146" value="58"/>
    <cv index="147" value="65"/>
    <cv index="148" value="67"/>
    <cv index="149" value="72"/>
    <cv index="150" value="75"/>
    <cv index="151" value="77"/>
    <cv index="152" value="83"/>
    <cv index="153" value="52"/>
    <cv index="154" value="63"/>
    <cv index="155" value="68"/>
    <cv index="156" value="78"/>
    <cv index="157" value="84"/>
    <cv index="158" value="89"/>
    <cv index="159" value="91"/>
    <cv index="160" value="94"/>
    <cv index="161" value="184"/>
    <cv index="162" value="48"/>
    <cv index="163" value="56"/>
    <cv index="164" value="58"/>
    <cv index="165" value="69"/>
    <cv index="166" value="72"/>
    <cv index="167" value="80"/>
    <cv index="168" value="82"/>
    <cv index="169" value="84"/>
    <cv index="170" value="129"/>
    <cv index="171" value="156"/>
    <cv index="172" value="162"/>
    <cv index="173" value="50"/>
    <cv index="174" value="52"/>
    <cv index="175" value="56"/>
    <cv index="176" value="59"/>
    <cv index="177" value="61"/>
    <cv index="178" value="65"/>
    <cv index="179" value="68"/>
    <cv index="180" value="74"/>
    <cv index="181" value="76"/>
    <cv index="182" value="84"/>
    <cv index="183" value="87"/>
    <cv index="184" value="380"/>
    <cv index="185" value="0"/>
    <cv index="186" value="15"/>
    <cv index="187" value="-15"/>
    <cv index="188" value="299"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef" xMin="57" yMin="-240" xMax="557" yMax="960">
      <contour>
        <pt x="557" y="-240" on="1"/>
        <pt x="57" y="-240" on="1"/>
        <pt x="57" y="960" on="1"/>
        <pt x="557" y="960" on="1"/>
      </contour>
      <contour>
        <pt x="464" y="910" on="1"/>
        <pt x="149" y="910" on="1"/>
        <pt x="307" y="429" on="1"/>
      </contour>
      <contour>
        <pt x="507" y="874" on="1"/>
        <pt x="335" y="360" on="1"/>
        <pt x="507" y="-154" on="1"/>
      </contour>
      <contour>
        <pt x="107" y="-154" on="1"/>
        <pt x="278" y="360" on="1"/>
        <pt x="107" y="874" on="1"/>
      </contour>
      <contour>
        <pt x="464" y="-190" on="1"/>
        <pt x="307" y="291" on="1"/>
        <pt x="149" y="-190" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          12 7 5 5 2 9 10 10 15 15 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="A" xMin="-20" yMin="0" xMax="502" yMax="655">
      <contour>
        <pt x="171" y="201" on="1"/>
        <pt x="47" y="0" on="1"/>
        <pt x="-20" y="0" on="1"/>
        <pt x="393" y="655" on="1"/>
        <pt x="467" y="655" on="1"/>
        <pt x="502" y="0" on="1"/>
        <pt x="442" y="0" on="1"/>
        <pt x="432" y="201" on="1"/>
      </contour>
      <contour>
        <pt x="414" y="596" on="1"/>
        <pt x="202" y="252" on="1"/>
        <pt x="430" y="252" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          9 8 0 0 2 3 2 114 6 2 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="AE" xMin="-75" yMin="0" xMax="713" yMax="655">
      <contour>
        <pt x="120" y="200" on="1"/>
        <pt x="-8" y="0" on="1"/>
        <pt x="-75" y="0" on="1"/>
        <pt x="351" y="655" on="1"/>
        <pt x="713" y="655" on="1"/>
        <pt x="698" y="604" on="1"/>
        <pt x="470" y="604" on="1"/>
        <pt x="399" y="357" on="1"/>
        <pt x="599" y="357" on="1"/>
        <pt x="585" y="306" on="1"/>
        <pt x="385" y="306" on="1"/>
        <pt x="312" y="51" on="1"/>
        <pt x="540" y="51" on="1"/>
        <pt x="525" y="0" on="1"/>
        <pt x="236" y="0" on="1"/>
        <pt x="293" y="200" on="1"/>
      </contour>
      <contour>
        <pt x="378" y="604" on="1"/>
        <pt x="152" y="251" on="1"/>
        <pt x="308" y="251" on="1"/>
        <pt x="409" y="604" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          17 0 7 10 0 10 0 10 2 16 6 3 2 114 11 14 14 2 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Aacute" xMin="-20" yMin="0" xMax="646" yMax="920">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 11 3 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Abreve" xMin="-20" yMin="0" xMax="666" yMax="909">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 18 3 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Acircumflex" xMin="-20" yMin="0" xMax="621" yMax="911">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="288" y="-10" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 11 3 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Adieresis" xMin="-20" yMin="0" xMax="648" yMax="856">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 14 3 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Agrave" xMin="-20" yMin="0" xMax="517" yMax="913">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 13 3 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Amacron" xMin="-20" yMin="0" xMax="625" yMax="821">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 12 3 1 1 116 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Aogonek" xMin="-20" yMin="-235" xMax="502" yMax="655">
      <contour>
        <pt x="171" y="201" on="1"/>
        <pt x="47" y="0" on="1"/>
        <pt x="-20" y="0" on="1"/>
        <pt x="393" y="655" on="1"/>
        <pt x="467" y="655" on="1"/>
        <pt x="502" y="0" on="1"/>
        <pt x="488" y="0" on="1"/>
        <pt x="432" y="-57" on="0"/>
        <pt x="380" y="-131" on="0"/>
        <pt x="380" y="-158" on="1"/>
        <pt x="380" y="-173" on="0"/>
        <pt x="405" y="-186" on="0"/>
        <pt x="436" y="-188" on="1"/>
        <pt x="501" y="-192" on="1"/>
        <pt x="485" y="-235" on="1"/>
        <pt x="410" y="-231" on="1"/>
        <pt x="360" y="-228" on="0"/>
        <pt x="318" y="-201" on="0"/>
        <pt x="318" y="-170" on="1"/>
        <pt x="318" y="-136" on="0"/>
        <pt x="375" y="-64" on="0"/>
        <pt x="447" y="0" on="1"/>
        <pt x="442" y="0" on="1"/>
        <pt x="432" y="201" on="1"/>
      </contour>
      <contour>
        <pt x="414" y="596" on="1"/>
        <pt x="202" y="252" on="1"/>
        <pt x="430" y="252" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          24 2 25 0 0 14 3 2 114 6 22 22 13 14 2 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Aring" xMin="-20" yMin="0" xMax="599" yMax="834">
      <contour>
        <pt x="171" y="201" on="1"/>
        <pt x="47" y="0" on="1"/>
        <pt x="-20" y="0" on="1"/>
        <pt x="370" y="618" on="1"/>
        <pt x="334" y="629" on="0"/>
        <pt x="295" y="674" on="0"/>
        <pt x="295" y="706" on="1"/>
        <pt x="295" y="763" on="0"/>
        <pt x="383" y="834" on="0"/>
        <pt x="461" y="834" on="1"/>
        <pt x="523" y="834" on="0"/>
        <pt x="599" y="782" on="0"/>
        <pt x="599" y="737" on="1"/>
        <pt x="599" y="687" on="0"/>
        <pt x="530" y="619" on="0"/>
        <pt x="469" y="611" on="1"/>
        <pt x="502" y="0" on="1"/>
        <pt x="442" y="0" on="1"/>
        <pt x="432" y="201" on="1"/>
      </contour>
      <contour>
        <pt x="550" y="735" on="1"/>
        <pt x="550" y="762" on="0"/>
        <pt x="499" y="790" on="0"/>
        <pt x="451" y="790" on="1"/>
        <pt x="403" y="790" on="0"/>
        <pt x="344" y="743" on="0"/>
        <pt x="344" y="708" on="1"/>
        <pt x="344" y="681" on="0"/>
        <pt x="395" y="653" on="0"/>
        <pt x="443" y="653" on="1"/>
        <pt x="491" y="653" on="0"/>
        <pt x="550" y="700" on="0"/>
      </contour>
      <contour>
        <pt x="414" y="596" on="1"/>
        <pt x="202" y="252" on="1"/>
        <pt x="430" y="252" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          22 9 28 32 0 0 1 31 15 3 28 2 114 17 1 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Atilde" xMin="-20" yMin="0" xMax="666" yMax="897">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 15 3 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="B" xMin="37" yMin="0" xMax="617" yMax="655">
      <contour>
        <pt x="37" y="0" on="1"/>
        <pt x="225" y="655" on="1"/>
        <pt x="444" y="655" on="1"/>
        <pt x="527" y="655" on="0"/>
        <pt x="617" y="589" on="0"/>
        <pt x="617" y="529" on="1"/>
        <pt x="617" y="457" on="0"/>
        <pt x="514" y="360" on="0"/>
        <pt x="413" y="338" on="1"/>
        <pt x="413" y="334" on="1"/>
        <pt x="479" y="321" on="0"/>
        <pt x="548" y="249" on="0"/>
        <pt x="548" y="194" on="1"/>
        <pt x="548" y="106" on="0"/>
        <pt x="405" y="0" on="0"/>
        <pt x="281" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="551" y="519" on="1"/>
        <pt x="551" y="561" on="0"/>
        <pt x="492" y="606" on="0"/>
        <pt x="436" y="606" on="1"/>
        <pt x="270" y="606" on="1"/>
        <pt x="199" y="359" on="1"/>
        <pt x="317" y="364" on="1"/>
        <pt x="423" y="369" on="0"/>
        <pt x="551" y="457" on="0"/>
      </contour>
      <contour>
        <pt x="485" y="198" on="1"/>
        <pt x="485" y="248" on="0"/>
        <pt x="400" y="308" on="0"/>
        <pt x="323" y="310" on="1"/>
        <pt x="186" y="314" on="1"/>
        <pt x="110" y="49" on="1"/>
        <pt x="297" y="49" on="1"/>
        <pt x="380" y="49" on="0"/>
        <pt x="485" y="135" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          9 8 29 22 21 21 28 29 29 0 20 1 2 114 30 0 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="C" xMin="69" yMin="-15" xMax="656" yMax="670">
      <contour>
        <pt x="266" y="-15" on="1"/>
        <pt x="170" y="-15" on="0"/>
        <pt x="69" y="91" on="0"/>
        <pt x="69" y="193" on="1"/>
        <pt x="69" y="279" on="0"/>
        <pt x="119" y="444" on="0"/>
        <pt x="164" y="510" on="1"/>
        <pt x="217" y="587" on="0"/>
        <pt x="361" y="670" on="0"/>
        <pt x="443" y="670" on="1"/>
        <pt x="507" y="670" on="0"/>
        <pt x="598" y="629" on="0"/>
        <pt x="656" y="576" on="1"/>
        <pt x="616" y="532" on="1"/>
        <pt x="567" y="579" on="0"/>
        <pt x="491" y="619" on="0"/>
        <pt x="441" y="619" on="1"/>
        <pt x="372" y="619" on="0"/>
        <pt x="252" y="543" on="0"/>
        <pt x="208" y="471" on="1"/>
        <pt x="172" y="413" on="0"/>
        <pt x="133" y="269" on="0"/>
        <pt x="133" y="195" on="1"/>
        <pt x="133" y="120" on="0"/>
        <pt x="204" y="36" on="0"/>
        <pt x="265" y="36" on="1"/>
        <pt x="313" y="36" on="0"/>
        <pt x="414" y="77" on="0"/>
        <pt x="492" y="127" on="1"/>
        <pt x="524" y="81" on="1"/>
        <pt x="442" y="27" on="0"/>
        <pt x="329" y="-15" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          25 0 16 9 3 114 0 9 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Cacute" xMin="69" yMin="-15" xMax="684" yMax="920">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="330" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 32 9 1 1 63 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ccaron" xMin="69" yMin="-15" xMax="694" yMax="920">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="330" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 32 9 1 1 63 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ccedilla" xMin="69" yMin="-270" xMax="656" yMax="670">
      <contour>
        <pt x="376" y="-151" on="1"/>
        <pt x="376" y="-192" on="0"/>
        <pt x="320" y="-233" on="0"/>
        <pt x="255" y="-247" on="1"/>
        <pt x="223" y="-253" on="0"/>
        <pt x="139" y="-265" on="0"/>
        <pt x="85" y="-270" on="1"/>
        <pt x="85" y="-221" on="1"/>
        <pt x="124" y="-217" on="0"/>
        <pt x="186" y="-210" on="0"/>
        <pt x="210" y="-207" on="1"/>
        <pt x="266" y="-198" on="0"/>
        <pt x="312" y="-177" on="0"/>
        <pt x="312" y="-155" on="1"/>
        <pt x="312" y="-135" on="0"/>
        <pt x="256" y="-116" on="0"/>
        <pt x="179" y="-108" on="1"/>
        <pt x="176" y="-98" on="1"/>
        <pt x="231" y="-13" on="1"/>
        <pt x="152" y="-4" on="0"/>
        <pt x="69" y="101" on="0"/>
        <pt x="69" y="193" on="1"/>
        <pt x="69" y="279" on="0"/>
        <pt x="119" y="444" on="0"/>
        <pt x="164" y="510" on="1"/>
        <pt x="217" y="587" on="0"/>
        <pt x="361" y="670" on="0"/>
        <pt x="443" y="670" on="1"/>
        <pt x="507" y="670" on="0"/>
        <pt x="598" y="629" on="0"/>
        <pt x="656" y="576" on="1"/>
        <pt x="616" y="532" on="1"/>
        <pt x="567" y="579" on="0"/>
        <pt x="491" y="619" on="0"/>
        <pt x="441" y="619" on="1"/>
        <pt x="372" y="619" on="0"/>
        <pt x="252" y="543" on="0"/>
        <pt x="208" y="471" on="1"/>
        <pt x="172" y="413" on="0"/>
        <pt x="133" y="269" on="0"/>
        <pt x="133" y="195" on="1"/>
        <pt x="133" y="120" on="0"/>
        <pt x="204" y="36" on="0"/>
        <pt x="265" y="36" on="1"/>
        <pt x="313" y="36" on="0"/>
        <pt x="414" y="77" on="0"/>
        <pt x="492" y="127" on="1"/>
        <pt x="524" y="81" on="1"/>
        <pt x="444" y="28" on="0"/>
        <pt x="334" y="-14" on="0"/>
        <pt x="274" y="-15" on="1"/>
        <pt x="242" y="-66" on="1"/>
        <pt x="318" y="-78" on="0"/>
        <pt x="376" y="-112" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          16 17 51 3 7 6 43 18 50 9 114 34 27 3 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ccircumflex" xMin="69" yMin="-15" xMax="661" yMax="916">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="328" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 32 9 1 1 59 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Cdotaccent" xMin="69" yMin="-15" xMax="656" yMax="860">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307.cap" x="330" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 35 9 1 1 83 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="D" xMin="34" yMin="0" xMax="604" yMax="655">
      <contour>
        <pt x="34" y="0" on="1"/>
        <pt x="222" y="655" on="1"/>
        <pt x="312" y="655" on="1"/>
        <pt x="391" y="655" on="0"/>
        <pt x="508" y="618" on="0"/>
        <pt x="544" y="582" on="1"/>
        <pt x="574" y="552" on="0"/>
        <pt x="604" y="470" on="0"/>
        <pt x="604" y="419" on="1"/>
        <pt x="604" y="334" on="0"/>
        <pt x="543" y="185" on="0"/>
        <pt x="485" y="127" on="1"/>
        <pt x="422" y="64" on="0"/>
        <pt x="237" y="0" on="0"/>
        <pt x="117" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="540" y="425" on="1"/>
        <pt x="540" y="512" on="0"/>
        <pt x="427" y="604" on="0"/>
        <pt x="320" y="604" on="1"/>
        <pt x="268" y="604" on="1"/>
        <pt x="110" y="51" on="1"/>
        <pt x="307" y="51" on="0"/>
        <pt x="540" y="256" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          20 0 19 1 2 114 0 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Dcaron" xMin="34" yMin="0" xMax="637" yMax="920">
      <component glyphName="D" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="273" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 23 1 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Dcroat" xMin="54" yMin="0" xMax="606" yMax="655">
      <component glyphName="Eth" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="E" xMin="37" yMin="0" xMax="655" yMax="655">
      <contour>
        <pt x="37" y="0" on="1"/>
        <pt x="225" y="655" on="1"/>
        <pt x="655" y="655" on="1"/>
        <pt x="640" y="604" on="1"/>
        <pt x="271" y="604" on="1"/>
        <pt x="200" y="357" on="1"/>
        <pt x="505" y="357" on="1"/>
        <pt x="491" y="306" on="1"/>
        <pt x="186" y="306" on="1"/>
        <pt x="113" y="51" on="1"/>
        <pt x="491" y="51" on="1"/>
        <pt x="476" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 13 values pushed */
          9 0 5 8 8 0 4 1 2 114 0 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Eacute" xMin="37" yMin="0" xMax="689" yMax="920">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 1 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ebreve" xMin="37" yMin="0" xMax="709" yMax="909">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 19 1 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ecaron" xMin="37" yMin="0" xMax="699" yMax="920">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 1 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ecircumflex" xMin="37" yMin="0" xMax="668" yMax="921">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 1 1 1 77 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Edieresis" xMin="37" yMin="0" xMax="691" yMax="856">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 15 1 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Edotaccent" xMin="37" yMin="0" xMax="655" yMax="860">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 15 1 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Egrave" xMin="37" yMin="0" xMax="655" yMax="913">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 14 1 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Emacron" xMin="37" yMin="0" xMax="668" yMax="821">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 13 1 1 1 116 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Eng" xMin="31" yMin="-239" xMax="639" yMax="655">
      <contour>
        <pt x="261" y="616" on="1"/>
        <pt x="89" y="0" on="1"/>
        <pt x="31" y="0" on="1"/>
        <pt x="219" y="655" on="1"/>
        <pt x="309" y="655" on="1"/>
        <pt x="413" y="55" on="1"/>
        <pt x="581" y="655" on="1"/>
        <pt x="639" y="655" on="1"/>
        <pt x="430" y="-74" on="1"/>
        <pt x="409" y="-150" on="0"/>
        <pt x="310" y="-224" on="0"/>
        <pt x="221" y="-230" on="1"/>
        <pt x="89" y="-239" on="1"/>
        <pt x="89" y="-188" on="1"/>
        <pt x="233" y="-178" on="1"/>
        <pt x="296" y="-173" on="0"/>
        <pt x="361" y="-121" on="0"/>
        <pt x="380" y="-63" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          0 5 2 7 3 2 114 8 17 17 13 12 2 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Eogonek" xMin="37" yMin="-235" xMax="655" yMax="655">
      <contour>
        <pt x="241" y="-170" on="1"/>
        <pt x="241" y="-136" on="0"/>
        <pt x="298" y="-64" on="0"/>
        <pt x="370" y="0" on="1"/>
        <pt x="37" y="0" on="1"/>
        <pt x="225" y="655" on="1"/>
        <pt x="655" y="655" on="1"/>
        <pt x="640" y="604" on="1"/>
        <pt x="271" y="604" on="1"/>
        <pt x="200" y="357" on="1"/>
        <pt x="505" y="357" on="1"/>
        <pt x="491" y="306" on="1"/>
        <pt x="186" y="306" on="1"/>
        <pt x="113" y="51" on="1"/>
        <pt x="491" y="51" on="1"/>
        <pt x="476" y="0" on="1"/>
        <pt x="411" y="0" on="1"/>
        <pt x="355" y="-57" on="0"/>
        <pt x="303" y="-131" on="0"/>
        <pt x="303" y="-158" on="1"/>
        <pt x="303" y="-173" on="0"/>
        <pt x="328" y="-186" on="0"/>
        <pt x="359" y="-188" on="1"/>
        <pt x="424" y="-192" on="1"/>
        <pt x="408" y="-235" on="1"/>
        <pt x="333" y="-231" on="1"/>
        <pt x="283" y="-228" on="0"/>
        <pt x="241" y="-201" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          9 12 12 24 8 5 2 114 23 24 128 16 13 4 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Eth" xMin="54" yMin="0" xMax="606" yMax="655">
      <contour>
        <pt x="142" y="308" on="1"/>
        <pt x="56" y="308" on="1"/>
        <pt x="69" y="352" on="1"/>
        <pt x="155" y="352" on="1"/>
        <pt x="242" y="655" on="1"/>
        <pt x="323" y="655" on="1"/>
        <pt x="400" y="655" on="0"/>
        <pt x="510" y="620" on="0"/>
        <pt x="547" y="583" on="1"/>
        <pt x="576" y="554" on="0"/>
        <pt x="606" y="471" on="0"/>
        <pt x="606" y="419" on="1"/>
        <pt x="606" y="334" on="0"/>
        <pt x="545" y="185" on="0"/>
        <pt x="487" y="127" on="1"/>
        <pt x="424" y="64" on="0"/>
        <pt x="248" y="0" on="0"/>
        <pt x="137" y="0" on="1"/>
        <pt x="54" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="356" y="352" on="1"/>
        <pt x="343" y="308" on="1"/>
        <pt x="203" y="308" on="1"/>
        <pt x="130" y="51" on="1"/>
        <pt x="318" y="51" on="0"/>
        <pt x="542" y="258" on="0"/>
        <pt x="542" y="425" on="1"/>
        <pt x="542" y="512" on="0"/>
        <pt x="439" y="604" on="0"/>
        <pt x="340" y="604" on="1"/>
        <pt x="288" y="604" on="1"/>
        <pt x="216" y="352" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          2 30 30 1 21 21 4 22 18 8 114 29 4 2 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Euro" xMin="37" yMin="-15" xMax="645" yMax="670">
      <contour>
        <pt x="126" y="233" on="1"/>
        <pt x="37" y="233" on="1"/>
        <pt x="51" y="281" on="1"/>
        <pt x="138" y="281" on="1"/>
        <pt x="164" y="374" on="1"/>
        <pt x="77" y="374" on="1"/>
        <pt x="91" y="422" on="1"/>
        <pt x="178" y="422" on="1"/>
        <pt x="216" y="543" on="0"/>
        <pt x="359" y="670" on="0"/>
        <pt x="457" y="670" on="1"/>
        <pt x="509" y="670" on="0"/>
        <pt x="591" y="647" on="0"/>
        <pt x="645" y="617" on="1"/>
        <pt x="621" y="569" on="1"/>
        <pt x="570" y="597" on="0"/>
        <pt x="503" y="619" on="0"/>
        <pt x="465" y="619" on="1"/>
        <pt x="385" y="619" on="0"/>
        <pt x="274" y="521" on="0"/>
        <pt x="241" y="421" on="1"/>
        <pt x="480" y="421" on="1"/>
        <pt x="467" y="375" on="1"/>
        <pt x="228" y="375" on="1"/>
        <pt x="200" y="280" on="1"/>
        <pt x="439" y="280" on="1"/>
        <pt x="426" y="234" on="1"/>
        <pt x="188" y="234" on="1"/>
        <pt x="184" y="213" on="0"/>
        <pt x="180" y="178" on="0"/>
        <pt x="180" y="162" on="1"/>
        <pt x="181" y="99" on="0"/>
        <pt x="249" y="36" on="0"/>
        <pt x="315" y="36" on="1"/>
        <pt x="356" y="36" on="0"/>
        <pt x="434" y="61" on="0"/>
        <pt x="488" y="90" on="1"/>
        <pt x="512" y="42" on="1"/>
        <pt x="461" y="13" on="0"/>
        <pt x="359" y="-15" on="0"/>
        <pt x="308" y="-15" on="1"/>
        <pt x="215" y="-15" on="0"/>
        <pt x="118" y="73" on="0"/>
        <pt x="118" y="157" on="1"/>
        <pt x="118" y="179" on="0"/>
        <pt x="122" y="214" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          0 27 27 24 20 7 7 4 4 23 3 24 24 10 33 40 13 114 17 10 5 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="F" xMin="37" yMin="0" xMax="651" yMax="655">
      <contour>
        <pt x="37" y="0" on="1"/>
        <pt x="225" y="655" on="1"/>
        <pt x="651" y="655" on="1"/>
        <pt x="636" y="604" on="1"/>
        <pt x="271" y="604" on="1"/>
        <pt x="192" y="326" on="1"/>
        <pt x="520" y="326" on="1"/>
        <pt x="506" y="275" on="1"/>
        <pt x="177" y="275" on="1"/>
        <pt x="98" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          5 8 8 0 4 1 2 114 0 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="G" xMin="61" yMin="-15" xMax="623" yMax="664">
      <contour>
        <pt x="623" y="655" on="1"/>
        <pt x="612" y="603" on="1"/>
        <pt x="580" y="609" on="0"/>
        <pt x="537" y="613" on="0"/>
        <pt x="508" y="613" on="1"/>
        <pt x="424" y="613" on="0"/>
        <pt x="283" y="557" on="0"/>
        <pt x="232" y="503" on="1"/>
        <pt x="180" y="449" on="0"/>
        <pt x="125" y="304" on="0"/>
        <pt x="125" y="224" on="1"/>
        <pt x="125" y="129" on="0"/>
        <pt x="221" y="36" on="0"/>
        <pt x="319" y="36" on="1"/>
        <pt x="344" y="36" on="0"/>
        <pt x="397" y="43" on="0"/>
        <pt x="423" y="49" on="1"/>
        <pt x="503" y="292" on="1"/>
        <pt x="328" y="292" on="1"/>
        <pt x="342" y="343" on="1"/>
        <pt x="578" y="343" on="1"/>
        <pt x="470" y="7" on="1"/>
        <pt x="431" y="-5" on="0"/>
        <pt x="360" y="-15" on="0"/>
        <pt x="316" y="-15" on="1"/>
        <pt x="190" y="-15" on="0"/>
        <pt x="61" y="105" on="0"/>
        <pt x="61" y="223" on="1"/>
        <pt x="61" y="314" on="0"/>
        <pt x="129" y="482" on="0"/>
        <pt x="192" y="543" on="1"/>
        <pt x="253" y="603" on="0"/>
        <pt x="418" y="664" on="0"/>
        <pt x="517" y="664" on="1"/>
        <pt x="542" y="664" on="0"/>
        <pt x="590" y="660" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          18 19 19 24 4 33 3 114 13 24 9 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Gbreve" xMin="61" yMin="-15" xMax="727" yMax="914">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306.cap" x="353" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 43 33 1 1 70 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Gcaron" xMin="61" yMin="-15" xMax="717" yMax="925">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="353" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 36 33 1 1 70 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Gcircumflex" xMin="61" yMin="-15" xMax="684" yMax="921">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="351" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 36 33 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Gdotaccent" xMin="61" yMin="-15" xMax="623" yMax="865">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307.cap" x="353" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 39 33 1 1 90 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="H" xMin="34" yMin="0" xMax="636" yMax="655">
      <contour>
        <pt x="34" y="0" on="1"/>
        <pt x="222" y="655" on="1"/>
        <pt x="283" y="655" on="1"/>
        <pt x="197" y="356" on="1"/>
        <pt x="489" y="356" on="1"/>
        <pt x="575" y="655" on="1"/>
        <pt x="636" y="655" on="1"/>
        <pt x="448" y="0" on="1"/>
        <pt x="387" y="0" on="1"/>
        <pt x="475" y="305" on="1"/>
        <pt x="183" y="305" on="1"/>
        <pt x="95" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          3 10 10 0 6 1 2 114 8 0 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Hbar" xMin="54" yMin="0" xMax="663" yMax="655">
      <contour>
        <pt x="191" y="477" on="1"/>
        <pt x="105" y="477" on="1"/>
        <pt x="117" y="521" on="1"/>
        <pt x="204" y="521" on="1"/>
        <pt x="242" y="655" on="1"/>
        <pt x="303" y="655" on="1"/>
        <pt x="265" y="521" on="1"/>
        <pt x="517" y="521" on="1"/>
        <pt x="555" y="655" on="1"/>
        <pt x="616" y="655" on="1"/>
        <pt x="578" y="521" on="1"/>
        <pt x="663" y="521" on="1"/>
        <pt x="651" y="477" on="1"/>
        <pt x="565" y="477" on="1"/>
        <pt x="428" y="0" on="1"/>
        <pt x="367" y="0" on="1"/>
        <pt x="449" y="285" on="1"/>
        <pt x="197" y="285" on="1"/>
        <pt x="115" y="0" on="1"/>
        <pt x="54" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="252" y="477" on="1"/>
        <pt x="211" y="336" on="1"/>
        <pt x="463" y="336" on="1"/>
        <pt x="504" y="477" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          13 20 20 10 6 6 3 3 0 17 21 21 4 15 19 8 114 9 4 2 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Hcircumflex" xMin="34" yMin="0" xMax="640" yMax="921">
      <component glyphName="H" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 1 1 1 77 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="I" xMin="73" yMin="0" xMax="597" yMax="655">
      <contour>
        <pt x="73" y="0" on="1"/>
        <pt x="81" y="26" on="1"/>
        <pt x="219" y="49" on="1"/>
        <pt x="391" y="608" on="1"/>
        <pt x="253" y="629" on="1"/>
        <pt x="261" y="655" on="1"/>
        <pt x="597" y="655" on="1"/>
        <pt x="589" y="629" on="1"/>
        <pt x="452" y="606" on="1"/>
        <pt x="280" y="47" on="1"/>
        <pt x="416" y="26" on="1"/>
        <pt x="409" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          5 2 114 0 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Iacute" xMin="73" yMin="0" xMax="661" yMax="920">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ibreve" xMin="73" yMin="0" xMax="681" yMax="909">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 19 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Icircumflex" xMin="73" yMin="0" xMax="639" yMax="921">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 5 1 1 77 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Idieresis" xMin="73" yMin="0" xMax="663" yMax="856">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 15 5 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Idotaccent" xMin="73" yMin="0" xMax="597" yMax="860">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 15 5 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Igrave" xMin="73" yMin="0" xMax="597" yMax="913">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 14 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Imacron" xMin="73" yMin="0" xMax="640" yMax="821">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 13 5 1 1 116 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Iogonek" xMin="73" yMin="-234" xMax="597" yMax="655">
      <contour>
        <pt x="73" y="0" on="1"/>
        <pt x="81" y="26" on="1"/>
        <pt x="219" y="49" on="1"/>
        <pt x="391" y="608" on="1"/>
        <pt x="253" y="629" on="1"/>
        <pt x="261" y="655" on="1"/>
        <pt x="597" y="655" on="1"/>
        <pt x="589" y="629" on="1"/>
        <pt x="452" y="606" on="1"/>
        <pt x="280" y="47" on="1"/>
        <pt x="416" y="26" on="1"/>
        <pt x="409" y="0" on="1"/>
        <pt x="260" y="0" on="1"/>
        <pt x="205" y="-56" on="0"/>
        <pt x="153" y="-130" on="0"/>
        <pt x="153" y="-157" on="1"/>
        <pt x="153" y="-172" on="0"/>
        <pt x="178" y="-185" on="0"/>
        <pt x="209" y="-187" on="1"/>
        <pt x="274" y="-191" on="1"/>
        <pt x="258" y="-234" on="1"/>
        <pt x="183" y="-230" on="1"/>
        <pt x="133" y="-227" on="0"/>
        <pt x="91" y="-200" on="0"/>
        <pt x="91" y="-169" on="1"/>
        <pt x="91" y="-135" on="0"/>
        <pt x="147" y="-63" on="0"/>
        <pt x="218" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          5 2 114 19 20 9 2 2 12 0 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Itilde" xMin="73" yMin="0" xMax="681" yMax="897">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 16 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="J" xMin="36" yMin="-10" xMax="625" yMax="655">
      <contour>
        <pt x="263" y="-10" on="1"/>
        <pt x="197" y="-10" on="0"/>
        <pt x="96" y="57" on="0"/>
        <pt x="36" y="138" on="1"/>
        <pt x="82" y="175" on="1"/>
        <pt x="134" y="102" on="0"/>
        <pt x="215" y="40" on="0"/>
        <pt x="266" y="40" on="1"/>
        <pt x="327" y="40" on="0"/>
        <pt x="408" y="111" on="0"/>
        <pt x="428" y="182" on="1"/>
        <pt x="564" y="655" on="1"/>
        <pt x="625" y="655" on="1"/>
        <pt x="489" y="180" on="1"/>
        <pt x="461" y="83" on="0"/>
        <pt x="349" y="-10" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          7 0 11 2 114 0 9 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Jcircumflex" xMin="36" yMin="-10" xMax="801" yMax="911">
      <component glyphName="J" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="468" y="-10" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 16 11 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="K" xMin="37" yMin="0" xMax="692" yMax="655">
      <contour>
        <pt x="225" y="655" on="1"/>
        <pt x="286" y="655" on="1"/>
        <pt x="195" y="338" on="1"/>
        <pt x="603" y="655" on="1"/>
        <pt x="692" y="655" on="1"/>
        <pt x="692" y="653" on="1"/>
        <pt x="264" y="326" on="1"/>
        <pt x="519" y="2" on="1"/>
        <pt x="519" y="0" on="1"/>
        <pt x="440" y="0" on="1"/>
        <pt x="191" y="324" on="1"/>
        <pt x="98" y="0" on="1"/>
        <pt x="37" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 13 values pushed */
          10 6 2 3 0 9 12 8 114 4 0 2 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="L" xMin="37" yMin="0" xMax="487" yMax="655">
      <contour>
        <pt x="37" y="0" on="1"/>
        <pt x="225" y="655" on="1"/>
        <pt x="286" y="655" on="1"/>
        <pt x="112" y="50" on="1"/>
        <pt x="487" y="50" on="1"/>
        <pt x="473" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 0 1 2 114 0 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Lacute" xMin="37" yMin="0" xMax="492" yMax="920">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="138" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 6 1 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Lcaron" xMin="37" yMin="0" xMax="535" yMax="655">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0315" x="327" y="-55" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 8 1 0 0 0 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ldot" xMin="37" yMin="0" xMax="560" yMax="655">
      <component glyphName="middotcat.cap" x="216" y="0" flags="0x4"/>
      <component glyphName="L" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="Lslash" xMin="37" yMin="0" xMax="487" yMax="655">
      <contour>
        <pt x="140" y="255" on="1"/>
        <pt x="37" y="196" on="1"/>
        <pt x="55" y="258" on="1"/>
        <pt x="158" y="317" on="1"/>
        <pt x="255" y="655" on="1"/>
        <pt x="316" y="655" on="1"/>
        <pt x="228" y="348" on="1"/>
        <pt x="478" y="491" on="1"/>
        <pt x="460" y="429" on="1"/>
        <pt x="210" y="286" on="1"/>
        <pt x="142" y="50" on="1"/>
        <pt x="487" y="50" on="1"/>
        <pt x="473" y="0" on="1"/>
        <pt x="67" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          1 0 2 9 3 6 8 7 8 4 10 13 8 114 4 2 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="M" xMin="1" yMin="0" xMax="644" yMax="655">
      <contour>
        <pt x="559" y="655" on="1"/>
        <pt x="644" y="655" on="1"/>
        <pt x="481" y="0" on="1"/>
        <pt x="422" y="0" on="1"/>
        <pt x="574" y="593" on="1"/>
        <pt x="305" y="185" on="1"/>
        <pt x="284" y="185" on="1"/>
        <pt x="244" y="581" on="1"/>
        <pt x="60" y="0" on="1"/>
        <pt x="1" y="0" on="1"/>
        <pt x="214" y="655" on="1"/>
        <pt x="287" y="655" on="1"/>
        <pt x="323" y="299" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          6 5 12 7 4 5 3 1 10 2 114 3 9 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="N" xMin="31" yMin="0" xMax="639" yMax="655">
      <contour>
        <pt x="261" y="616" on="1"/>
        <pt x="89" y="0" on="1"/>
        <pt x="31" y="0" on="1"/>
        <pt x="219" y="655" on="1"/>
        <pt x="309" y="655" on="1"/>
        <pt x="413" y="55" on="1"/>
        <pt x="581" y="655" on="1"/>
        <pt x="639" y="655" on="1"/>
        <pt x="451" y="0" on="1"/>
        <pt x="369" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          0 5 2 7 3 2 114 9 2 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Nacute" xMin="31" yMin="0" xMax="665" yMax="915">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="311" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 10 6 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ncaron" xMin="31" yMin="0" xMax="675" yMax="915">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="311" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 10 6 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ntilde" xMin="31" yMin="0" xMax="687" yMax="897">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303.cap" x="313" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 14 6 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="O" xMin="61" yMin="-15" xMax="606" yMax="670">
      <contour>
        <pt x="84" y="366" on="1"/>
        <pt x="123" y="501" on="0"/>
        <pt x="300" y="670" on="0"/>
        <pt x="407" y="670" on="1"/>
        <pt x="502" y="670" on="0"/>
        <pt x="606" y="556" on="0"/>
        <pt x="606" y="449" on="1"/>
        <pt x="606" y="411" on="0"/>
        <pt x="594" y="327" on="0"/>
        <pt x="583" y="289" on="1"/>
        <pt x="544" y="154" on="0"/>
        <pt x="367" y="-15" on="0"/>
        <pt x="260" y="-15" on="1"/>
        <pt x="165" y="-15" on="0"/>
        <pt x="61" y="99" on="0"/>
        <pt x="61" y="206" on="1"/>
        <pt x="61" y="244" on="0"/>
        <pt x="73" y="328" on="0"/>
      </contour>
      <contour>
        <pt x="124" y="203" on="1"/>
        <pt x="124" y="122" on="0"/>
        <pt x="196" y="36" on="0"/>
        <pt x="263" y="36" on="1"/>
        <pt x="347" y="36" on="0"/>
        <pt x="486" y="176" on="0"/>
        <pt x="519" y="290" on="1"/>
        <pt x="531" y="330" on="0"/>
        <pt x="543" y="415" on="0"/>
        <pt x="543" y="452" on="1"/>
        <pt x="543" y="533" on="0"/>
        <pt x="471" y="619" on="0"/>
        <pt x="404" y="619" on="1"/>
        <pt x="320" y="619" on="0"/>
        <pt x="181" y="479" on="0"/>
        <pt x="148" y="365" on="1"/>
        <pt x="136" y="325" on="0"/>
        <pt x="124" y="240" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          21 12 30 3 3 114 12 9 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="OE" xMin="29" yMin="0" xMax="715" yMax="655">
      <contour>
        <pt x="527" y="0" on="1"/>
        <pt x="226" y="0" on="1"/>
        <pt x="127" y="0" on="0"/>
        <pt x="29" y="89" on="0"/>
        <pt x="29" y="179" on="1"/>
        <pt x="29" y="276" on="0"/>
        <pt x="111" y="499" on="0"/>
        <pt x="169" y="557" on="1"/>
        <pt x="223" y="611" on="0"/>
        <pt x="343" y="655" on="0"/>
        <pt x="441" y="655" on="1"/>
        <pt x="715" y="655" on="1"/>
        <pt x="700" y="604" on="1"/>
        <pt x="472" y="604" on="1"/>
        <pt x="401" y="357" on="1"/>
        <pt x="601" y="357" on="1"/>
        <pt x="587" y="306" on="1"/>
        <pt x="387" y="306" on="1"/>
        <pt x="314" y="51" on="1"/>
        <pt x="542" y="51" on="1"/>
      </contour>
      <contour>
        <pt x="217" y="523" on="1"/>
        <pt x="163" y="469" on="0"/>
        <pt x="92" y="272" on="0"/>
        <pt x="92" y="185" on="1"/>
        <pt x="92" y="116" on="0"/>
        <pt x="158" y="51" on="0"/>
        <pt x="228" y="51" on="1"/>
        <pt x="252" y="51" on="1"/>
        <pt x="411" y="604" on="1"/>
        <pt x="352" y="603" on="0"/>
        <pt x="258" y="564" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          14 17 17 1 28 13 13 10 2 114 26 18 18 1 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Oacute" xMin="61" yMin="-15" xMax="648" yMax="925">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 36 3 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Obreve" xMin="61" yMin="-15" xMax="668" yMax="914">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 43 3 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ocircumflex" xMin="61" yMin="-15" xMax="625" yMax="921">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 36 3 1 1 62 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Odieresis" xMin="61" yMin="-15" xMax="650" yMax="861">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 39 3 1 1 86 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ograve" xMin="61" yMin="-15" xMax="606" yMax="918">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 38 3 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ohorn" xMin="61" yMin="-15" xMax="746" yMax="768">
      <contour>
        <pt x="84" y="359" on="1"/>
        <pt x="122" y="490" on="0"/>
        <pt x="299" y="655" on="0"/>
        <pt x="407" y="655" on="1"/>
        <pt x="521" y="655" on="1"/>
        <pt x="600" y="655" on="0"/>
        <pt x="663" y="698" on="0"/>
        <pt x="686" y="768" on="1"/>
        <pt x="746" y="768" on="1"/>
        <pt x="722" y="679" on="0"/>
        <pt x="638" y="616" on="0"/>
        <pt x="532" y="616" on="1"/>
        <pt x="530" y="616" on="0"/>
        <pt x="524" y="616" on="0"/>
        <pt x="522" y="616" on="1"/>
        <pt x="520" y="614" on="1"/>
        <pt x="565" y="588" on="0"/>
        <pt x="606" y="505" on="0"/>
        <pt x="606" y="442" on="1"/>
        <pt x="606" y="404" on="0"/>
        <pt x="594" y="320" on="0"/>
        <pt x="583" y="282" on="1"/>
        <pt x="545" y="151" on="0"/>
        <pt x="367" y="-15" on="0"/>
        <pt x="260" y="-15" on="1"/>
        <pt x="165" y="-15" on="0"/>
        <pt x="61" y="96" on="0"/>
        <pt x="61" y="199" on="1"/>
        <pt x="61" y="237" on="0"/>
        <pt x="73" y="321" on="0"/>
      </contour>
      <contour>
        <pt x="124" y="196" on="1"/>
        <pt x="124" y="119" on="0"/>
        <pt x="196" y="36" on="0"/>
        <pt x="263" y="36" on="1"/>
        <pt x="348" y="36" on="0"/>
        <pt x="487" y="173" on="0"/>
        <pt x="519" y="283" on="1"/>
        <pt x="531" y="323" on="0"/>
        <pt x="543" y="408" on="0"/>
        <pt x="543" y="445" on="1"/>
        <pt x="543" y="522" on="0"/>
        <pt x="471" y="604" on="0"/>
        <pt x="404" y="604" on="1"/>
        <pt x="319" y="604" on="0"/>
        <pt x="180" y="468" on="0"/>
        <pt x="148" y="358" on="1"/>
        <pt x="136" y="318" on="0"/>
        <pt x="124" y="233" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          33 24 9 114 15 11 42 42 7 3 2 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ohungarumlaut" xMin="61" yMin="-15" xMax="736" yMax="927">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030B.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 36 3 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Omacron" xMin="61" yMin="-15" xMax="627" yMax="826">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 37 3 1 1 106 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Oslash" xMin="-56" yMin="-71" xMax="726" yMax="726">
      <contour>
        <pt x="84" y="366" on="1"/>
        <pt x="123" y="501" on="0"/>
        <pt x="300" y="670" on="0"/>
        <pt x="407" y="670" on="1"/>
        <pt x="453" y="670" on="0"/>
        <pt x="529" y="638" on="0"/>
        <pt x="555" y="607" on="1"/>
        <pt x="656" y="726" on="1"/>
        <pt x="726" y="726" on="1"/>
        <pt x="579" y="572" on="1"/>
        <pt x="592" y="546" on="0"/>
        <pt x="606" y="484" on="0"/>
        <pt x="606" y="449" on="1"/>
        <pt x="606" y="411" on="0"/>
        <pt x="594" y="327" on="0"/>
        <pt x="583" y="289" on="1"/>
        <pt x="544" y="154" on="0"/>
        <pt x="367" y="-15" on="0"/>
        <pt x="260" y="-15" on="1"/>
        <pt x="215" y="-15" on="0"/>
        <pt x="140" y="17" on="0"/>
        <pt x="113" y="47" on="1"/>
        <pt x="14" y="-71" on="1"/>
        <pt x="-56" y="-71" on="1"/>
        <pt x="89" y="81" on="1"/>
        <pt x="75" y="106" on="0"/>
        <pt x="61" y="169" on="0"/>
        <pt x="61" y="206" on="1"/>
        <pt x="61" y="244" on="0"/>
        <pt x="73" y="328" on="0"/>
      </contour>
      <contour>
        <pt x="148" y="365" on="1"/>
        <pt x="136" y="325" on="0"/>
        <pt x="124" y="240" on="0"/>
        <pt x="124" y="203" on="1"/>
        <pt x="124" y="183" on="0"/>
        <pt x="129" y="145" on="0"/>
        <pt x="134" y="128" on="1"/>
        <pt x="515" y="565" on="1"/>
        <pt x="498" y="592" on="0"/>
        <pt x="442" y="619" on="0"/>
        <pt x="404" y="619" on="1"/>
        <pt x="320" y="619" on="0"/>
        <pt x="181" y="479" on="0"/>
      </contour>
      <contour>
        <pt x="263" y="36" on="1"/>
        <pt x="347" y="36" on="0"/>
        <pt x="486" y="176" on="0"/>
        <pt x="519" y="290" on="1"/>
        <pt x="531" y="330" on="0"/>
        <pt x="543" y="415" on="0"/>
        <pt x="543" y="452" on="1"/>
        <pt x="543" y="473" on="0"/>
        <pt x="538" y="509" on="0"/>
        <pt x="534" y="524" on="1"/>
        <pt x="153" y="89" on="1"/>
        <pt x="170" y="63" on="0"/>
        <pt x="226" y="36" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          21 24 36 52 37 9 6 7 3 43 22 18 9 114 40 7 3 3 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Otilde" xMin="61" yMin="-15" xMax="668" yMax="902">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 40 3 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="P" xMin="37" yMin="0" xMax="630" yMax="655">
      <contour>
        <pt x="37" y="0" on="1"/>
        <pt x="225" y="655" on="1"/>
        <pt x="440" y="655" on="1"/>
        <pt x="529" y="655" on="0"/>
        <pt x="630" y="567" on="0"/>
        <pt x="630" y="490" on="1"/>
        <pt x="630" y="439" on="0"/>
        <pt x="593" y="348" on="0"/>
        <pt x="558" y="313" on="1"/>
        <pt x="517" y="272" on="0"/>
        <pt x="400" y="236" on="0"/>
        <pt x="306" y="236" on="1"/>
        <pt x="166" y="236" on="1"/>
        <pt x="98" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="564" y="498" on="1"/>
        <pt x="564" y="550" on="0"/>
        <pt x="494" y="604" on="0"/>
        <pt x="427" y="604" on="1"/>
        <pt x="271" y="604" on="1"/>
        <pt x="180" y="286" on="1"/>
        <pt x="316" y="286" on="1"/>
        <pt x="434" y="286" on="0"/>
        <pt x="564" y="398" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          19 12 12 0 18 1 2 114 0 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Q" xMin="61" yMin="-137" xMax="606" yMax="670">
      <contour>
        <pt x="420" y="40" on="1"/>
        <pt x="497" y="-108" on="1"/>
        <pt x="448" y="-137" on="1"/>
        <pt x="375" y="12" on="1"/>
        <pt x="346" y="-2" on="0"/>
        <pt x="289" y="-15" on="0"/>
        <pt x="260" y="-15" on="1"/>
        <pt x="165" y="-15" on="0"/>
        <pt x="61" y="99" on="0"/>
        <pt x="61" y="206" on="1"/>
        <pt x="61" y="244" on="0"/>
        <pt x="73" y="328" on="0"/>
        <pt x="84" y="366" on="1"/>
        <pt x="123" y="501" on="0"/>
        <pt x="300" y="670" on="0"/>
        <pt x="407" y="670" on="1"/>
        <pt x="502" y="670" on="0"/>
        <pt x="606" y="556" on="0"/>
        <pt x="606" y="449" on="1"/>
        <pt x="606" y="411" on="0"/>
        <pt x="594" y="327" on="0"/>
        <pt x="583" y="289" on="1"/>
        <pt x="560" y="209" on="0"/>
        <pt x="475" y="80" on="0"/>
      </contour>
      <contour>
        <pt x="124" y="203" on="1"/>
        <pt x="124" y="122" on="0"/>
        <pt x="196" y="36" on="0"/>
        <pt x="263" y="36" on="1"/>
        <pt x="286" y="36" on="0"/>
        <pt x="331" y="47" on="0"/>
        <pt x="352" y="58" on="1"/>
        <pt x="278" y="206" on="1"/>
        <pt x="323" y="231" on="1"/>
        <pt x="396" y="87" on="1"/>
        <pt x="437" y="121" on="0"/>
        <pt x="501" y="227" on="0"/>
        <pt x="519" y="290" on="1"/>
        <pt x="531" y="330" on="0"/>
        <pt x="543" y="415" on="0"/>
        <pt x="543" y="452" on="1"/>
        <pt x="543" y="533" on="0"/>
        <pt x="471" y="619" on="0"/>
        <pt x="404" y="619" on="1"/>
        <pt x="320" y="619" on="0"/>
        <pt x="181" y="479" on="0"/>
        <pt x="148" y="365" on="1"/>
        <pt x="136" y="325" on="0"/>
        <pt x="124" y="240" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          42 15 3 114 31 32 32 33 33 30 30 27 0 3 3 27 27 1 2 6 9 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="R" xMin="37" yMin="0" xMax="614" yMax="655">
      <contour>
        <pt x="399" y="183" on="1"/>
        <pt x="507" y="4" on="1"/>
        <pt x="506" y="0" on="1"/>
        <pt x="436" y="0" on="1"/>
        <pt x="335" y="174" on="1"/>
        <pt x="299" y="237" on="0"/>
        <pt x="241" y="275" on="0"/>
        <pt x="177" y="277" on="1"/>
        <pt x="98" y="0" on="1"/>
        <pt x="37" y="0" on="1"/>
        <pt x="225" y="655" on="1"/>
        <pt x="441" y="655" on="1"/>
        <pt x="521" y="655" on="0"/>
        <pt x="614" y="579" on="0"/>
        <pt x="614" y="515" on="1"/>
        <pt x="614" y="408" on="0"/>
        <pt x="464" y="297" on="0"/>
        <pt x="308" y="287" on="1"/>
        <pt x="308" y="282" on="1"/>
        <pt x="337" y="265" on="0"/>
        <pt x="375" y="223" on="0"/>
      </contour>
      <contour>
        <pt x="550" y="516" on="1"/>
        <pt x="550" y="559" on="0"/>
        <pt x="489" y="605" on="0"/>
        <pt x="432" y="605" on="1"/>
        <pt x="272" y="605" on="1"/>
        <pt x="191" y="326" on="1"/>
        <pt x="284" y="329" on="1"/>
        <pt x="418" y="334" on="0"/>
        <pt x="550" y="427" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          18 17 26 26 7 7 9 25 10 2 114 3 9 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Racute" xMin="37" yMin="0" xMax="673" yMax="920">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="319" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 30 10 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Rcaron" xMin="37" yMin="0" xMax="683" yMax="920">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="319" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 30 10 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="S" xMin="33" yMin="-13" xMax="623" yMax="668">
      <contour>
        <pt x="284" y="38" on="1"/>
        <pt x="367" y="38" on="0"/>
        <pt x="461" y="111" on="0"/>
        <pt x="461" y="175" on="1"/>
        <pt x="461" y="212" on="0"/>
        <pt x="418" y="270" on="0"/>
        <pt x="374" y="295" on="1"/>
        <pt x="284" y="345" on="1"/>
        <pt x="229" y="376" on="0"/>
        <pt x="178" y="450" on="0"/>
        <pt x="178" y="499" on="1"/>
        <pt x="178" y="572" on="0"/>
        <pt x="302" y="668" on="0"/>
        <pt x="403" y="668" on="1"/>
        <pt x="459" y="668" on="0"/>
        <pt x="556" y="649" on="0"/>
        <pt x="623" y="625" on="1"/>
        <pt x="605" y="571" on="1"/>
        <pt x="549" y="595" on="0"/>
        <pt x="451" y="617" on="0"/>
        <pt x="403" y="617" on="1"/>
        <pt x="327" y="617" on="0"/>
        <pt x="241" y="556" on="0"/>
        <pt x="241" y="503" on="1"/>
        <pt x="241" y="466" on="0"/>
        <pt x="277" y="415" on="0"/>
        <pt x="318" y="392" on="1"/>
        <pt x="408" y="341" on="1"/>
        <pt x="471" y="305" on="0"/>
        <pt x="524" y="234" on="0"/>
        <pt x="524" y="177" on="1"/>
        <pt x="524" y="89" on="0"/>
        <pt x="395" y="-13" on="0"/>
        <pt x="284" y="-13" on="1"/>
        <pt x="220" y="-13" on="0"/>
        <pt x="104" y="20" on="0"/>
        <pt x="33" y="59" on="1"/>
        <pt x="60" y="110" on="1"/>
        <pt x="127" y="72" on="0"/>
        <pt x="234" y="38" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          3 30 6 7 27 26 10 23 8 13 0 33 9 114 20 13 3 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Sacute" xMin="33" yMin="-13" xMax="668" yMax="925">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="314" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 40 13 1 1 69 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Scaron" xMin="33" yMin="-13" xMax="678" yMax="925">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="314" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 40 13 1 1 69 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Scircumflex" xMin="33" yMin="-13" xMax="645" yMax="921">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="312" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 40 13 1 1 65 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="T" xMin="160" yMin="0" xMax="677" yMax="655">
      <contour>
        <pt x="381" y="604" on="1"/>
        <pt x="160" y="604" on="1"/>
        <pt x="175" y="655" on="1"/>
        <pt x="677" y="655" on="1"/>
        <pt x="662" y="604" on="1"/>
        <pt x="442" y="604" on="1"/>
        <pt x="269" y="0" on="1"/>
        <pt x="208" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          5 1 1 2 2 114 6 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Tbar" xMin="145" yMin="0" xMax="677" yMax="655">
      <contour>
        <pt x="296" y="309" on="1"/>
        <pt x="145" y="309" on="1"/>
        <pt x="157" y="353" on="1"/>
        <pt x="309" y="353" on="1"/>
        <pt x="381" y="604" on="1"/>
        <pt x="160" y="604" on="1"/>
        <pt x="175" y="655" on="1"/>
        <pt x="677" y="655" on="1"/>
        <pt x="662" y="604" on="1"/>
        <pt x="442" y="604" on="1"/>
        <pt x="370" y="353" on="1"/>
        <pt x="522" y="353" on="1"/>
        <pt x="510" y="309" on="1"/>
        <pt x="357" y="309" on="1"/>
        <pt x="269" y="0" on="1"/>
        <pt x="208" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          13 1 10 1 2 2 6 14 8 114 9 5 5 6 2 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Tcaron" xMin="160" yMin="0" xMax="677" yMax="920">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="297" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 8 2 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Thorn" xMin="37" yMin="0" xMax="602" yMax="655">
      <contour>
        <pt x="37" y="0" on="1"/>
        <pt x="225" y="655" on="1"/>
        <pt x="286" y="655" on="1"/>
        <pt x="241" y="497" on="1"/>
        <pt x="421" y="497" on="1"/>
        <pt x="507" y="497" on="0"/>
        <pt x="602" y="426" on="0"/>
        <pt x="602" y="362" on="1"/>
        <pt x="602" y="322" on="0"/>
        <pt x="575" y="252" on="0"/>
        <pt x="549" y="226" on="1"/>
        <pt x="513" y="190" on="0"/>
        <pt x="408" y="158" on="0"/>
        <pt x="325" y="158" on="1"/>
        <pt x="143" y="158" on="1"/>
        <pt x="98" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="538" y="359" on="1"/>
        <pt x="538" y="402" on="0"/>
        <pt x="478" y="446" on="0"/>
        <pt x="418" y="446" on="1"/>
        <pt x="226" y="446" on="1"/>
        <pt x="158" y="208" on="1"/>
        <pt x="336" y="208" on="1"/>
        <pt x="430" y="208" on="0"/>
        <pt x="538" y="291" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          21 14 20 3 14 3 14 3 0 1 2 114 0 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="U" xMin="74" yMin="-15" xMax="654" yMax="655">
      <contour>
        <pt x="275" y="36" on="1"/>
        <pt x="347" y="36" on="0"/>
        <pt x="440" y="122" on="0"/>
        <pt x="466" y="211" on="1"/>
        <pt x="594" y="655" on="1"/>
        <pt x="654" y="655" on="1"/>
        <pt x="524" y="205" on="1"/>
        <pt x="491" y="90" on="0"/>
        <pt x="368" y="-15" on="0"/>
        <pt x="267" y="-15" on="1"/>
        <pt x="174" y="-15" on="0"/>
        <pt x="74" y="76" on="0"/>
        <pt x="74" y="162" on="1"/>
        <pt x="74" y="185" on="0"/>
        <pt x="84" y="240" on="0"/>
        <pt x="96" y="281" on="1"/>
        <pt x="204" y="655" on="1"/>
        <pt x="265" y="655" on="1"/>
        <pt x="155" y="273" on="1"/>
        <pt x="144" y="233" on="0"/>
        <pt x="133" y="178" on="0"/>
        <pt x="133" y="159" on="1"/>
        <pt x="133" y="100" on="0"/>
        <pt x="206" y="36" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          5 0 9 16 2 114 9 9 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Uacute" xMin="74" yMin="-15" xMax="659" yMax="915">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="305" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 24 4 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ubreve" xMin="74" yMin="-15" xMax="679" yMax="904">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306.cap" x="305" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 31 4 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ucircumflex" xMin="74" yMin="-15" xMax="654" yMax="921">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 24 16 1 1 77 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Udieresis" xMin="74" yMin="-15" xMax="663" yMax="856">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 27 16 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ugrave" xMin="74" yMin="-15" xMax="654" yMax="908">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300.cap" x="305" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 26 4 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Uhorn" xMin="74" yMin="-15" xMax="836" yMax="768">
      <contour>
        <pt x="275" y="36" on="1"/>
        <pt x="347" y="36" on="0"/>
        <pt x="440" y="122" on="0"/>
        <pt x="466" y="211" on="1"/>
        <pt x="594" y="655" on="1"/>
        <pt x="631" y="655" on="1"/>
        <pt x="700" y="655" on="0"/>
        <pt x="752" y="695" on="0"/>
        <pt x="776" y="768" on="1"/>
        <pt x="836" y="768" on="1"/>
        <pt x="811" y="679" on="0"/>
        <pt x="730" y="610" on="0"/>
        <pt x="641" y="610" on="1"/>
        <pt x="524" y="205" on="1"/>
        <pt x="491" y="90" on="0"/>
        <pt x="368" y="-15" on="0"/>
        <pt x="267" y="-15" on="1"/>
        <pt x="174" y="-15" on="0"/>
        <pt x="74" y="76" on="0"/>
        <pt x="74" y="162" on="1"/>
        <pt x="74" y="185" on="0"/>
        <pt x="84" y="240" on="0"/>
        <pt x="96" y="281" on="1"/>
        <pt x="204" y="655" on="1"/>
        <pt x="265" y="655" on="1"/>
        <pt x="155" y="273" on="1"/>
        <pt x="144" y="233" on="0"/>
        <pt x="133" y="178" on="0"/>
        <pt x="133" y="159" on="1"/>
        <pt x="133" y="100" on="0"/>
        <pt x="206" y="36" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          12 8 4 23 2 114 0 16 9 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Uhungarumlaut" xMin="74" yMin="-15" xMax="749" yMax="922">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030B.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 24 16 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Umacron" xMin="74" yMin="-15" xMax="654" yMax="821">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 25 16 1 1 116 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Uogonek" xMin="74" yMin="-240" xMax="654" yMax="655">
      <contour>
        <pt x="108" y="-175" on="1"/>
        <pt x="108" y="-143" on="0"/>
        <pt x="161" y="-74" on="0"/>
        <pt x="228" y="-13" on="1"/>
        <pt x="153" y="-3" on="0"/>
        <pt x="74" y="86" on="0"/>
        <pt x="74" y="162" on="1"/>
        <pt x="74" y="185" on="0"/>
        <pt x="84" y="240" on="0"/>
        <pt x="96" y="281" on="1"/>
        <pt x="204" y="655" on="1"/>
        <pt x="265" y="655" on="1"/>
        <pt x="155" y="273" on="1"/>
        <pt x="144" y="233" on="0"/>
        <pt x="133" y="178" on="0"/>
        <pt x="133" y="159" on="1"/>
        <pt x="133" y="100" on="0"/>
        <pt x="206" y="36" on="0"/>
        <pt x="275" y="36" on="1"/>
        <pt x="347" y="36" on="0"/>
        <pt x="440" y="122" on="0"/>
        <pt x="466" y="211" on="1"/>
        <pt x="594" y="655" on="1"/>
        <pt x="654" y="655" on="1"/>
        <pt x="524" y="205" on="1"/>
        <pt x="491" y="90" on="0"/>
        <pt x="369" y="-15" on="0"/>
        <pt x="268" y="-15" on="1"/>
        <pt x="218" y="-68" on="0"/>
        <pt x="170" y="-137" on="0"/>
        <pt x="170" y="-163" on="1"/>
        <pt x="170" y="-178" on="0"/>
        <pt x="195" y="-191" on="0"/>
        <pt x="226" y="-193" on="1"/>
        <pt x="291" y="-197" on="1"/>
        <pt x="275" y="-240" on="1"/>
        <pt x="200" y="-236" on="1"/>
        <pt x="150" y="-233" on="0"/>
        <pt x="108" y="-206" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          34 35 18 3 27 9 23 10 2 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Uring" xMin="74" yMin="-15" xMax="654" yMax="951">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030A.cap" x="305" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 27 4 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Utilde" xMin="74" yMin="-15" xMax="681" yMax="897">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 28 4 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="V" xMin="168" yMin="0" xMax="690" yMax="655">
      <contour>
        <pt x="205" y="0" on="1"/>
        <pt x="168" y="655" on="1"/>
        <pt x="226" y="655" on="1"/>
        <pt x="258" y="68" on="1"/>
        <pt x="624" y="655" on="1"/>
        <pt x="690" y="655" on="1"/>
        <pt x="277" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          3 0 5 1 2 114 0 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="W" xMin="77" yMin="0" xMax="685" yMax="655">
      <contour>
        <pt x="685" y="655" on="1"/>
        <pt x="405" y="0" on="1"/>
        <pt x="330" y="0" on="1"/>
        <pt x="348" y="377" on="1"/>
        <pt x="150" y="0" on="1"/>
        <pt x="77" y="0" on="1"/>
        <pt x="173" y="655" on="1"/>
        <pt x="232" y="655" on="1"/>
        <pt x="136" y="68" on="1"/>
        <pt x="379" y="531" on="1"/>
        <pt x="403" y="531" on="1"/>
        <pt x="381" y="63" on="1"/>
        <pt x="624" y="655" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          11 8 3 3 9 9 5 12 6 2 114 2 5 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Wacute" xMin="77" yMin="0" xMax="685" yMax="910">
      <component glyphName="W" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="303" y="-10" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 13 12 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Wcircumflex" xMin="77" yMin="0" xMax="685" yMax="921">
      <component glyphName="W" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 13 6 1 1 77 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Wdieresis" xMin="77" yMin="0" xMax="685" yMax="856">
      <component glyphName="W" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 16 6 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Wgrave" xMin="77" yMin="0" xMax="685" yMax="903">
      <component glyphName="W" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300.cap" x="303" y="-10" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 15 12 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="X" xMin="-8" yMin="0" xMax="659" yMax="655">
      <contour>
        <pt x="66" y="0" on="1"/>
        <pt x="-8" y="0" on="1"/>
        <pt x="304" y="343" on="1"/>
        <pt x="192" y="655" on="1"/>
        <pt x="260" y="655" on="1"/>
        <pt x="347" y="386" on="1"/>
        <pt x="581" y="655" on="1"/>
        <pt x="659" y="655" on="1"/>
        <pt x="368" y="333" on="1"/>
        <pt x="492" y="0" on="1"/>
        <pt x="422" y="0" on="1"/>
        <pt x="324" y="290" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          5 2 8 11 4 1 7 3 2 114 10 1 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Y" xMin="175" yMin="0" xMax="683" yMax="655">
      <contour>
        <pt x="607" y="655" on="1"/>
        <pt x="683" y="655" on="1"/>
        <pt x="348" y="267" on="1"/>
        <pt x="272" y="0" on="1"/>
        <pt x="211" y="0" on="1"/>
        <pt x="294" y="288" on="1"/>
        <pt x="175" y="655" on="1"/>
        <pt x="241" y="655" on="1"/>
        <pt x="339" y="337" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          2 5 8 3 3 1 6 2 114 3 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Yacute" xMin="175" yMin="0" xMax="683" yMax="915">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="290" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 9 0 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ycircumflex" xMin="175" yMin="0" xMax="683" yMax="921">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 9 6 1 1 77 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ydieresis" xMin="175" yMin="0" xMax="683" yMax="856">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 12 6 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ygrave" xMin="175" yMin="0" xMax="683" yMax="908">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300.cap" x="290" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 11 0 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Z" xMin="16" yMin="0" xMax="637" yMax="655">
      <contour>
        <pt x="480" y="0" on="1"/>
        <pt x="16" y="0" on="1"/>
        <pt x="16" y="29" on="1"/>
        <pt x="540" y="601" on="1"/>
        <pt x="540" y="604" on="1"/>
        <pt x="177" y="604" on="1"/>
        <pt x="192" y="655" on="1"/>
        <pt x="637" y="655" on="1"/>
        <pt x="637" y="626" on="1"/>
        <pt x="112" y="53" on="1"/>
        <pt x="112" y="50" on="1"/>
        <pt x="494" y="50" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          3 8 5 5 6 2 114 9 2 10 10 1 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Zacute" xMin="16" yMin="0" xMax="660" yMax="920">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 6 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Zcaron" xMin="16" yMin="0" xMax="670" yMax="920">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 6 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Zdotaccent" xMin="16" yMin="0" xMax="637" yMax="860">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307.cap" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 15 6 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="a" xMin="39" yMin="-5" xMax="523" yMax="465">
      <contour>
        <pt x="514" y="319" on="1"/>
        <pt x="437" y="102" on="1"/>
        <pt x="434" y="93" on="0"/>
        <pt x="431" y="79" on="0"/>
        <pt x="431" y="74" on="1"/>
        <pt x="431" y="64" on="0"/>
        <pt x="446" y="54" on="0"/>
        <pt x="469" y="50" on="1"/>
        <pt x="513" y="44" on="1"/>
        <pt x="499" y="-3" on="1"/>
        <pt x="450" y="2" on="1"/>
        <pt x="413" y="5" on="0"/>
        <pt x="375" y="38" on="0"/>
        <pt x="370" y="70" on="1"/>
        <pt x="364" y="70" on="1"/>
        <pt x="295" y="29" on="0"/>
        <pt x="194" y="-5" on="0"/>
        <pt x="141" y="-5" on="1"/>
        <pt x="90" y="-5" on="0"/>
        <pt x="39" y="40" on="0"/>
        <pt x="39" y="84" on="1"/>
        <pt x="39" y="118" on="0"/>
        <pt x="66" y="182" on="0"/>
        <pt x="90" y="206" on="1"/>
        <pt x="117" y="233" on="0"/>
        <pt x="203" y="258" on="0"/>
        <pt x="290" y="266" on="1"/>
        <pt x="442" y="280" on="1"/>
        <pt x="457" y="323" on="0"/>
        <pt x="462" y="344" on="0"/>
        <pt x="462" y="356" on="1"/>
        <pt x="462" y="387" on="0"/>
        <pt x="407" y="415" on="0"/>
        <pt x="347" y="415" on="1"/>
        <pt x="318" y="415" on="0"/>
        <pt x="218" y="404" on="0"/>
        <pt x="161" y="395" on="1"/>
        <pt x="176" y="448" on="1"/>
        <pt x="230" y="457" on="0"/>
        <pt x="316" y="465" on="0"/>
        <pt x="363" y="465" on="1"/>
        <pt x="444" y="465" on="0"/>
        <pt x="523" y="418" on="0"/>
        <pt x="523" y="369" on="1"/>
        <pt x="523" y="356" on="0"/>
        <pt x="519" y="331" on="0"/>
      </contour>
      <contour>
        <pt x="102" y="94" on="1"/>
        <pt x="102" y="67" on="0"/>
        <pt x="131" y="45" on="0"/>
        <pt x="164" y="45" on="1"/>
        <pt x="212" y="45" on="0"/>
        <pt x="322" y="87" on="0"/>
        <pt x="390" y="132" on="1"/>
        <pt x="425" y="234" on="1"/>
        <pt x="300" y="222" on="1"/>
        <pt x="230" y="215" on="0"/>
        <pt x="156" y="194" on="0"/>
        <pt x="136" y="174" on="1"/>
        <pt x="119" y="157" on="0"/>
        <pt x="102" y="117" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 23 values pushed */
          26 27 27 54 53 53 17 33 40 7 114 52 14 14 49 49 17 11 114 8 10 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="aacute" xMin="39" yMin="-5" xMax="589" yMax="746">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 60 40 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="abreve" xMin="39" yMin="-5" xMax="623" yMax="735">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 67 40 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="acircumflex" xMin="39" yMin="-5" xMax="574" yMax="741">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="298" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 60 40 1 1 68 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="acute" xMin="317" yMin="536" xMax="597" yMax="741">
      <component glyphName="uni0301" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="adieresis" xMin="39" yMin="-5" xMax="579" yMax="660">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 63 40 1 1 93 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ae" xMin="-1" yMin="-5" xMax="603" yMax="470">
      <contour>
        <pt x="328" y="217" on="1"/>
        <pt x="323" y="197" on="0"/>
        <pt x="318" y="162" on="0"/>
        <pt x="318" y="148" on="1"/>
        <pt x="318" y="88" on="0"/>
        <pt x="382" y="44" on="0"/>
        <pt x="468" y="44" on="1"/>
        <pt x="452" y="-5" on="1"/>
        <pt x="373" y="-5" on="0"/>
        <pt x="289" y="25" on="0"/>
        <pt x="272" y="59" on="1"/>
        <pt x="263" y="59" on="1"/>
        <pt x="207" y="23" on="0"/>
        <pt x="140" y="-5" on="0"/>
        <pt x="101" y="-5" on="1"/>
        <pt x="50" y="-5" on="0"/>
        <pt x="-1" y="40" on="0"/>
        <pt x="-1" y="84" on="1"/>
        <pt x="-1" y="117" on="0"/>
        <pt x="22" y="178" on="0"/>
        <pt x="43" y="199" on="1"/>
        <pt x="69" y="225" on="0"/>
        <pt x="171" y="249" on="0"/>
        <pt x="279" y="257" on="1"/>
        <pt x="295" y="315" on="0"/>
        <pt x="308" y="365" on="0"/>
        <pt x="308" y="376" on="1"/>
        <pt x="308" y="399" on="0"/>
        <pt x="285" y="420" on="0"/>
        <pt x="259" y="420" on="1"/>
        <pt x="228" y="420" on="0"/>
        <pt x="166" y="413" on="0"/>
        <pt x="119" y="405" on="1"/>
        <pt x="134" y="456" on="1"/>
        <pt x="167" y="463" on="0"/>
        <pt x="228" y="470" on="0"/>
        <pt x="258" y="470" on="1"/>
        <pt x="311" y="470" on="0"/>
        <pt x="357" y="434" on="0"/>
        <pt x="360" y="388" on="1"/>
        <pt x="390" y="427" on="0"/>
        <pt x="463" y="470" on="0"/>
        <pt x="500" y="470" on="1"/>
        <pt x="548" y="470" on="0"/>
        <pt x="603" y="419" on="0"/>
        <pt x="603" y="374" on="1"/>
        <pt x="603" y="302" on="0"/>
        <pt x="472" y="231" on="0"/>
      </contour>
      <contour>
        <pt x="541" y="373" on="1"/>
        <pt x="541" y="396" on="0"/>
        <pt x="515" y="420" on="0"/>
        <pt x="491" y="420" on="1"/>
        <pt x="452" y="420" on="0"/>
        <pt x="370" y="330" on="0"/>
        <pt x="343" y="262" on="1"/>
        <pt x="442" y="273" on="0"/>
        <pt x="541" y="328" on="0"/>
      </contour>
      <contour>
        <pt x="62" y="94" on="1"/>
        <pt x="62" y="67" on="0"/>
        <pt x="91" y="45" on="0"/>
        <pt x="124" y="45" on="1"/>
        <pt x="149" y="45" on="0"/>
        <pt x="212" y="72" on="0"/>
        <pt x="259" y="103" on="1"/>
        <pt x="258" y="113" on="0"/>
        <pt x="256" y="135" on="0"/>
        <pt x="256" y="147" on="1"/>
        <pt x="256" y="162" on="0"/>
        <pt x="261" y="194" on="0"/>
        <pt x="267" y="212" on="1"/>
        <pt x="185" y="204" on="0"/>
        <pt x="108" y="186" on="0"/>
        <pt x="89" y="167" on="1"/>
        <pt x="76" y="154" on="0"/>
        <pt x="62" y="116" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 26 values pushed */
          51 42 7 54 23 23 0 69 69 14 39 29 29 36 7 114 63 10 60 60 6 7 7 14 11
          114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="agrave" xMin="39" yMin="-5" xMax="523" yMax="739">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 62 40 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="amacron" xMin="39" yMin="-5" xMax="577" yMax="631">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 61 40 1 1 113 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ampersand" xMin="31" yMin="-5" xMax="584" yMax="669">
      <contour>
        <pt x="308" y="324" on="1"/>
        <pt x="229" y="300" on="0"/>
        <pt x="153" y="266" on="0"/>
        <pt x="131" y="244" on="1"/>
        <pt x="112" y="225" on="0"/>
        <pt x="94" y="171" on="0"/>
        <pt x="94" y="130" on="1"/>
        <pt x="94" y="89" on="0"/>
        <pt x="137" y="47" on="0"/>
        <pt x="177" y="47" on="1"/>
        <pt x="230" y="47" on="0"/>
        <pt x="305" y="107" on="0"/>
        <pt x="364" y="194" on="1"/>
      </contour>
      <contour>
        <pt x="31" y="124" on="1"/>
        <pt x="31" y="174" on="0"/>
        <pt x="58" y="249" on="0"/>
        <pt x="87" y="278" on="1"/>
        <pt x="113" y="304" on="0"/>
        <pt x="203" y="344" on="0"/>
        <pt x="289" y="368" on="1"/>
        <pt x="269" y="408" on="0"/>
        <pt x="243" y="487" on="0"/>
        <pt x="243" y="517" on="1"/>
        <pt x="243" y="583" on="0"/>
        <pt x="344" y="669" on="0"/>
        <pt x="423" y="669" on="1"/>
        <pt x="453" y="669" on="0"/>
        <pt x="527" y="659" on="0"/>
        <pt x="581" y="647" on="1"/>
        <pt x="566" y="596" on="1"/>
        <pt x="517" y="608" on="0"/>
        <pt x="448" y="618" on="0"/>
        <pt x="418" y="618" on="1"/>
        <pt x="369" y="618" on="0"/>
        <pt x="305" y="560" on="0"/>
        <pt x="305" y="515" on="1"/>
        <pt x="305" y="496" on="0"/>
        <pt x="316" y="455" on="0"/>
        <pt x="327" y="429" on="1"/>
        <pt x="408" y="243" on="1"/>
        <pt x="532" y="439" on="1"/>
        <pt x="584" y="417" on="1"/>
        <pt x="435" y="191" on="1"/>
        <pt x="520" y="0" on="1"/>
        <pt x="451" y="0" on="1"/>
        <pt x="392" y="139" on="1"/>
        <pt x="330" y="54" on="0"/>
        <pt x="237" y="-5" on="0"/>
        <pt x="168" y="-5" on="1"/>
        <pt x="102" y="-5" on="0"/>
        <pt x="31" y="61" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          12 42 39 0 19 41 38 40 8 25 9 48 9 114 44 8 114 32 25 3 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="aogonek" xMin="39" yMin="-235" xMax="523" yMax="465">
      <contour>
        <pt x="256" y="-170" on="1"/>
        <pt x="256" y="-135" on="0"/>
        <pt x="319" y="-57" on="0"/>
        <pt x="402" y="16" on="1"/>
        <pt x="389" y="24" on="0"/>
        <pt x="373" y="50" on="0"/>
        <pt x="370" y="70" on="1"/>
        <pt x="364" y="70" on="1"/>
        <pt x="295" y="29" on="0"/>
        <pt x="194" y="-5" on="0"/>
        <pt x="141" y="-5" on="1"/>
        <pt x="90" y="-5" on="0"/>
        <pt x="39" y="40" on="0"/>
        <pt x="39" y="84" on="1"/>
        <pt x="39" y="118" on="0"/>
        <pt x="66" y="182" on="0"/>
        <pt x="90" y="206" on="1"/>
        <pt x="117" y="233" on="0"/>
        <pt x="203" y="258" on="0"/>
        <pt x="290" y="266" on="1"/>
        <pt x="442" y="280" on="1"/>
        <pt x="456" y="322" on="1"/>
        <pt x="459" y="332" on="0"/>
        <pt x="462" y="349" on="0"/>
        <pt x="462" y="356" on="1"/>
        <pt x="462" y="387" on="0"/>
        <pt x="407" y="415" on="0"/>
        <pt x="347" y="415" on="1"/>
        <pt x="318" y="415" on="0"/>
        <pt x="218" y="404" on="0"/>
        <pt x="161" y="395" on="1"/>
        <pt x="176" y="448" on="1"/>
        <pt x="230" y="457" on="0"/>
        <pt x="316" y="465" on="0"/>
        <pt x="363" y="465" on="1"/>
        <pt x="444" y="465" on="0"/>
        <pt x="523" y="418" on="0"/>
        <pt x="523" y="369" on="1"/>
        <pt x="523" y="356" on="0"/>
        <pt x="519" y="331" on="0"/>
        <pt x="514" y="319" on="1"/>
        <pt x="437" y="102" on="1"/>
        <pt x="434" y="93" on="0"/>
        <pt x="431" y="79" on="0"/>
        <pt x="431" y="74" on="1"/>
        <pt x="431" y="64" on="0"/>
        <pt x="446" y="54" on="0"/>
        <pt x="469" y="50" on="1"/>
        <pt x="513" y="44" on="1"/>
        <pt x="499" y="-3" on="1"/>
        <pt x="477" y="-1" on="0"/>
        <pt x="441" y="3" on="0"/>
        <pt x="431" y="5" on="1"/>
        <pt x="373" y="-54" on="0"/>
        <pt x="318" y="-130" on="0"/>
        <pt x="318" y="-158" on="1"/>
        <pt x="318" y="-173" on="0"/>
        <pt x="343" y="-186" on="0"/>
        <pt x="374" y="-188" on="1"/>
        <pt x="439" y="-192" on="1"/>
        <pt x="423" y="-235" on="1"/>
        <pt x="348" y="-231" on="1"/>
        <pt x="298" y="-228" on="0"/>
        <pt x="256" y="-201" on="0"/>
      </contour>
      <contour>
        <pt x="102" y="94" on="1"/>
        <pt x="102" y="67" on="0"/>
        <pt x="131" y="45" on="0"/>
        <pt x="164" y="45" on="1"/>
        <pt x="212" y="45" on="0"/>
        <pt x="322" y="87" on="0"/>
        <pt x="390" y="132" on="1"/>
        <pt x="425" y="234" on="1"/>
        <pt x="300" y="222" on="1"/>
        <pt x="230" y="215" on="0"/>
        <pt x="156" y="194" on="0"/>
        <pt x="136" y="174" on="1"/>
        <pt x="119" y="157" on="0"/>
        <pt x="102" y="117" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 31 values pushed */
          3 52 52 48 49 10 114 19 20 20 72 71 71 10 27 34 7 114 70 7 67 67 10 58 59
          59 61 60 10 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="approxequal" xMin="28" yMin="87" xMax="613" yMax="571">
      <contour>
        <pt x="227" y="558" on="1"/>
        <pt x="248" y="558" on="0"/>
        <pt x="298" y="529" on="0"/>
        <pt x="345" y="491" on="1"/>
        <pt x="396" y="450" on="0"/>
        <pt x="433" y="424" on="0"/>
        <pt x="446" y="424" on="1"/>
        <pt x="463" y="424" on="0"/>
        <pt x="501" y="469" on="0"/>
        <pt x="565" y="571" on="1"/>
        <pt x="613" y="542" on="1"/>
        <pt x="535" y="414" on="0"/>
        <pt x="476" y="363" on="0"/>
        <pt x="446" y="363" on="1"/>
        <pt x="425" y="363" on="0"/>
        <pt x="375" y="392" on="0"/>
        <pt x="328" y="430" on="1"/>
        <pt x="277" y="471" on="0"/>
        <pt x="240" y="497" on="0"/>
        <pt x="227" y="497" on="1"/>
        <pt x="210" y="497" on="0"/>
        <pt x="172" y="452" on="0"/>
        <pt x="108" y="350" on="1"/>
        <pt x="60" y="379" on="1"/>
        <pt x="139" y="504" on="0"/>
        <pt x="190" y="558" on="0"/>
      </contour>
      <contour>
        <pt x="195" y="295" on="1"/>
        <pt x="216" y="295" on="0"/>
        <pt x="266" y="266" on="0"/>
        <pt x="313" y="228" on="1"/>
        <pt x="364" y="187" on="0"/>
        <pt x="401" y="161" on="0"/>
        <pt x="414" y="161" on="1"/>
        <pt x="431" y="161" on="0"/>
        <pt x="469" y="206" on="0"/>
        <pt x="533" y="308" on="1"/>
        <pt x="581" y="279" on="1"/>
        <pt x="503" y="151" on="0"/>
        <pt x="444" y="100" on="0"/>
        <pt x="414" y="100" on="1"/>
        <pt x="393" y="100" on="0"/>
        <pt x="343" y="129" on="0"/>
        <pt x="296" y="167" on="1"/>
        <pt x="245" y="208" on="0"/>
        <pt x="208" y="234" on="0"/>
        <pt x="195" y="234" on="1"/>
        <pt x="178" y="234" on="0"/>
        <pt x="140" y="189" on="0"/>
        <pt x="76" y="87" on="1"/>
        <pt x="28" y="116" on="1"/>
        <pt x="107" y="241" on="0"/>
        <pt x="158" y="295" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 39 values pushed */
          49 48 48 39 36 35 35 26 23 22 22 13 10 9 9 19 0 0 6 96 13 112 13 144 13
          3 13 13 45 26 26 32 96 39 1 63 39 1 39
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RUTG[ ]	/* RoundUpToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="aring" xMin="39" yMin="-5" xMax="564" yMax="777">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030A" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 69 40 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="asciicircum" xMin="70" yMin="271" xMax="566" yMax="655">
      <contour>
        <pt x="142" y="271" on="1"/>
        <pt x="70" y="271" on="1"/>
        <pt x="399" y="655" on="1"/>
        <pt x="459" y="655" on="1"/>
        <pt x="566" y="271" on="1"/>
        <pt x="501" y="271" on="1"/>
        <pt x="416" y="599" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          6 5 0 0 2 4 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="asciitilde" xMin="55" yMin="224" xMax="608" yMax="445">
      <contour>
        <pt x="222" y="432" on="1"/>
        <pt x="243" y="432" on="0"/>
        <pt x="293" y="403" on="0"/>
        <pt x="340" y="365" on="1"/>
        <pt x="391" y="324" on="0"/>
        <pt x="428" y="298" on="0"/>
        <pt x="441" y="298" on="1"/>
        <pt x="458" y="298" on="0"/>
        <pt x="496" y="343" on="0"/>
        <pt x="560" y="445" on="1"/>
        <pt x="608" y="416" on="1"/>
        <pt x="538" y="297" on="0"/>
        <pt x="477" y="237" on="0"/>
        <pt x="441" y="237" on="1"/>
        <pt x="420" y="237" on="0"/>
        <pt x="370" y="266" on="0"/>
        <pt x="323" y="304" on="1"/>
        <pt x="272" y="345" on="0"/>
        <pt x="235" y="371" on="0"/>
        <pt x="222" y="371" on="1"/>
        <pt x="205" y="371" on="0"/>
        <pt x="167" y="326" on="0"/>
        <pt x="103" y="224" on="1"/>
        <pt x="55" y="253" on="1"/>
        <pt x="121" y="364" on="0"/>
        <pt x="184" y="432" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          23 22 22 13 10 9 9 19 0 192 6 32 13 96 13 2 13
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="asterisk" xMin="105" yMin="163" xMax="607" yMax="630">
      <contour>
        <pt x="163" y="163" on="1"/>
        <pt x="105" y="229" on="1"/>
        <pt x="121" y="243" on="0"/>
        <pt x="166" y="275" on="0"/>
        <pt x="217" y="305" on="1"/>
        <pt x="264" y="334" on="0"/>
        <pt x="307" y="363" on="0"/>
        <pt x="322" y="376" on="1"/>
        <pt x="307" y="381" on="0"/>
        <pt x="265" y="391" on="0"/>
        <pt x="220" y="398" on="1"/>
        <pt x="172" y="406" on="0"/>
        <pt x="129" y="416" on="0"/>
        <pt x="114" y="422" on="1"/>
        <pt x="169" y="509" on="1"/>
        <pt x="184" y="503" on="0"/>
        <pt x="220" y="481" on="0"/>
        <pt x="257" y="455" on="1"/>
        <pt x="291" y="430" on="0"/>
        <pt x="325" y="409" on="0"/>
        <pt x="339" y="403" on="1"/>
        <pt x="344" y="421" on="0"/>
        <pt x="351" y="468" on="0"/>
        <pt x="355" y="517" on="1"/>
        <pt x="360" y="566" on="0"/>
        <pt x="367" y="612" on="0"/>
        <pt x="372" y="630" on="1"/>
        <pt x="467" y="630" on="1"/>
        <pt x="462" y="612" on="0"/>
        <pt x="443" y="566" on="0"/>
        <pt x="420" y="516" on="1"/>
        <pt x="397" y="467" on="0"/>
        <pt x="377" y="421" on="0"/>
        <pt x="372" y="403" on="1"/>
        <pt x="390" y="410" on="0"/>
        <pt x="434" y="430" on="0"/>
        <pt x="480" y="455" on="1"/>
        <pt x="529" y="481" on="0"/>
        <pt x="576" y="502" on="0"/>
        <pt x="594" y="508" on="1"/>
        <pt x="607" y="417" on="1"/>
        <pt x="588" y="411" on="0"/>
        <pt x="538" y="400" on="0"/>
        <pt x="484" y="392" on="1"/>
        <pt x="436" y="385" on="0"/>
        <pt x="391" y="376" on="0"/>
        <pt x="373" y="371" on="1"/>
        <pt x="381" y="358" on="0"/>
        <pt x="406" y="328" on="0"/>
        <pt x="434" y="298" on="1"/>
        <pt x="464" y="265" on="0"/>
        <pt x="489" y="233" on="0"/>
        <pt x="497" y="220" on="1"/>
        <pt x="411" y="163" on="1"/>
        <pt x="403" y="177" on="0"/>
        <pt x="387" y="218" on="0"/>
        <pt x="374" y="264" on="1"/>
        <pt x="363" y="304" on="0"/>
        <pt x="350" y="341" on="0"/>
        <pt x="343" y="354" on="1"/>
        <pt x="327" y="340" on="0"/>
        <pt x="289" y="300" on="0"/>
        <pt x="251" y="256" on="1"/>
        <pt x="214" y="214" on="0"/>
        <pt x="178" y="176" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          53 0 31 26 1 26
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="at" xMin="49" yMin="-79" xMax="637" yMax="725">
      <contour>
        <pt x="399" y="-17" on="1"/>
        <pt x="409" y="-60" on="1"/>
        <pt x="357" y="-70" on="0"/>
        <pt x="286" y="-79" on="0"/>
        <pt x="252" y="-79" on="1"/>
        <pt x="148" y="-79" on="0"/>
        <pt x="49" y="15" on="0"/>
        <pt x="49" y="113" on="1"/>
        <pt x="49" y="240" on="0"/>
        <pt x="165" y="563" on="0"/>
        <pt x="242" y="640" on="1"/>
        <pt x="285" y="683" on="0"/>
        <pt x="390" y="725" on="0"/>
        <pt x="456" y="725" on="1"/>
        <pt x="556" y="725" on="0"/>
        <pt x="637" y="655" on="0"/>
        <pt x="637" y="574" on="1"/>
        <pt x="637" y="484" on="0"/>
        <pt x="562" y="225" on="0"/>
        <pt x="515" y="178" on="1"/>
        <pt x="490" y="153" on="0"/>
        <pt x="427" y="129" on="0"/>
        <pt x="385" y="129" on="1"/>
        <pt x="309" y="129" on="0"/>
        <pt x="237" y="185" on="0"/>
        <pt x="237" y="244" on="1"/>
        <pt x="237" y="300" on="0"/>
        <pt x="281" y="420" on="0"/>
        <pt x="315" y="454" on="1"/>
        <pt x="346" y="485" on="0"/>
        <pt x="430" y="515" on="0"/>
        <pt x="485" y="515" on="1"/>
        <pt x="583" y="515" on="1"/>
        <pt x="586" y="535" on="0"/>
        <pt x="588" y="560" on="0"/>
        <pt x="588" y="570" on="1"/>
        <pt x="588" y="629" on="0"/>
        <pt x="529" y="680" on="0"/>
        <pt x="457" y="680" on="1"/>
        <pt x="397" y="680" on="0"/>
        <pt x="309" y="643" on="0"/>
        <pt x="269" y="603" on="1"/>
        <pt x="205" y="539" on="0"/>
        <pt x="98" y="232" on="0"/>
        <pt x="98" y="127" on="1"/>
        <pt x="98" y="44" on="0"/>
        <pt x="181" y="-34" on="0"/>
        <pt x="270" y="-34" on="1"/>
        <pt x="298" y="-34" on="0"/>
        <pt x="362" y="-26" on="0"/>
      </contour>
      <contour>
        <pt x="361" y="429" on="1"/>
        <pt x="335" y="403" on="0"/>
        <pt x="293" y="293" on="0"/>
        <pt x="293" y="249" on="1"/>
        <pt x="293" y="210" on="0"/>
        <pt x="335" y="175" on="0"/>
        <pt x="382" y="175" on="1"/>
        <pt x="413" y="175" on="0"/>
        <pt x="460" y="194" on="0"/>
        <pt x="480" y="214" on="1"/>
        <pt x="506" y="240" on="0"/>
        <pt x="559" y="384" on="0"/>
        <pt x="576" y="469" on="1"/>
        <pt x="469" y="469" on="1"/>
        <pt x="434" y="469" on="0"/>
        <pt x="381" y="449" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          56 22 63 31 22 31 22 31 4 38 13 47 1 4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="atilde" xMin="39" yMin="-5" xMax="632" yMax="731">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 60 40 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="b" xMin="44" yMin="-8" xMax="558" yMax="710">
      <contour>
        <pt x="239" y="710" on="1"/>
        <pt x="298" y="710" on="1"/>
        <pt x="199" y="365" on="1"/>
        <pt x="254" y="420" on="0"/>
        <pt x="346" y="468" on="0"/>
        <pt x="397" y="468" on="1"/>
        <pt x="470" y="468" on="0"/>
        <pt x="558" y="376" on="0"/>
        <pt x="558" y="300" on="1"/>
        <pt x="558" y="167" on="0"/>
        <pt x="373" y="-8" on="0"/>
        <pt x="226" y="-8" on="1"/>
        <pt x="182" y="-8" on="0"/>
        <pt x="79" y="16" on="0"/>
        <pt x="44" y="34" on="1"/>
      </contour>
      <contour>
        <pt x="496" y="297" on="1"/>
        <pt x="496" y="351" on="0"/>
        <pt x="438" y="418" on="0"/>
        <pt x="391" y="418" on="1"/>
        <pt x="342" y="418" on="0"/>
        <pt x="254" y="365" on="0"/>
        <pt x="179" y="296" on="1"/>
        <pt x="112" y="63" on="1"/>
        <pt x="136" y="52" on="0"/>
        <pt x="192" y="42" on="0"/>
        <pt x="227" y="42" on="1"/>
        <pt x="348" y="42" on="0"/>
        <pt x="496" y="191" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          14 22 25 25 11 11 114 21 2 2 18 18 5 7 114 0 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="backslash" xMin="196" yMin="-100" xMax="473" yMax="755">
      <contour>
        <pt x="414" y="-100" on="1"/>
        <pt x="196" y="755" on="1"/>
        <pt x="253" y="755" on="1"/>
        <pt x="473" y="-100" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          1 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="bar" xMin="183" yMin="-100" xMax="486" yMax="755">
      <contour>
        <pt x="428" y="755" on="1"/>
        <pt x="486" y="755" on="1"/>
        <pt x="241" y="-100" on="1"/>
        <pt x="183" y="-100" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="braceleft" xMin="99" yMin="-135" xMax="692" yMax="797">
      <contour>
        <pt x="129" y="-42" on="1"/>
        <pt x="129" y="-17" on="0"/>
        <pt x="163" y="29" on="0"/>
        <pt x="210" y="70" on="1"/>
        <pt x="275" y="127" on="1"/>
        <pt x="311" y="159" on="0"/>
        <pt x="332" y="183" on="0"/>
        <pt x="332" y="198" on="1"/>
        <pt x="332" y="219" on="0"/>
        <pt x="223" y="266" on="0"/>
        <pt x="99" y="301" on="1"/>
        <pt x="117" y="361" on="1"/>
        <pt x="168" y="374" on="0"/>
        <pt x="248" y="395" on="0"/>
        <pt x="279" y="404" on="1"/>
        <pt x="353" y="426" on="0"/>
        <pt x="413" y="460" on="0"/>
        <pt x="413" y="485" on="1"/>
        <pt x="413" y="494" on="0"/>
        <pt x="403" y="519" on="0"/>
        <pt x="393" y="537" on="1"/>
        <pt x="361" y="594" on="1"/>
        <pt x="345" y="623" on="0"/>
        <pt x="332" y="658" on="0"/>
        <pt x="332" y="671" on="1"/>
        <pt x="332" y="711" on="0"/>
        <pt x="393" y="758" on="0"/>
        <pt x="454" y="766" on="1"/>
        <pt x="692" y="797" on="1"/>
        <pt x="678" y="747" on="1"/>
        <pt x="447" y="716" on="1"/>
        <pt x="419" y="712" on="0"/>
        <pt x="391" y="692" on="0"/>
        <pt x="391" y="675" on="1"/>
        <pt x="391" y="666" on="0"/>
        <pt x="400" y="642" on="0"/>
        <pt x="410" y="625" on="1"/>
        <pt x="443" y="568" on="1"/>
        <pt x="463" y="534" on="0"/>
        <pt x="476" y="500" on="0"/>
        <pt x="476" y="484" on="1"/>
        <pt x="476" y="449" on="0"/>
        <pt x="416" y="402" on="0"/>
        <pt x="348" y="378" on="1"/>
        <pt x="316" y="366" on="0"/>
        <pt x="230" y="341" on="0"/>
        <pt x="177" y="327" on="1"/>
        <pt x="177" y="324" on="1"/>
        <pt x="220" y="310" on="0"/>
        <pt x="280" y="290" on="0"/>
        <pt x="302" y="281" on="1"/>
        <pt x="355" y="261" on="0"/>
        <pt x="395" y="229" on="0"/>
        <pt x="395" y="202" on="1"/>
        <pt x="395" y="181" on="0"/>
        <pt x="357" y="133" on="0"/>
        <pt x="308" y="90" on="1"/>
        <pt x="243" y="33" on="1"/>
        <pt x="210" y="4" on="0"/>
        <pt x="190" y="-19" on="0"/>
        <pt x="190" y="-31" on="1"/>
        <pt x="190" y="-41" on="0"/>
        <pt x="207" y="-53" on="0"/>
        <pt x="225" y="-56" on="1"/>
        <pt x="439" y="-87" on="1"/>
        <pt x="425" y="-135" on="1"/>
        <pt x="204" y="-104" on="1"/>
        <pt x="167" y="-99" on="0"/>
        <pt x="129" y="-67" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          65 66 30 29
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="braceright" xMin="-20" yMin="-135" xMax="573" yMax="797">
      <contour>
        <pt x="340" y="-9" on="1"/>
        <pt x="340" y="-49" on="0"/>
        <pt x="279" y="-96" on="0"/>
        <pt x="218" y="-104" on="1"/>
        <pt x="-20" y="-135" on="1"/>
        <pt x="-6" y="-85" on="1"/>
        <pt x="225" y="-54" on="1"/>
        <pt x="253" y="-50" on="0"/>
        <pt x="281" y="-30" on="0"/>
        <pt x="281" y="-13" on="1"/>
        <pt x="281" y="-4" on="0"/>
        <pt x="272" y="20" on="0"/>
        <pt x="262" y="37" on="1"/>
        <pt x="229" y="94" on="1"/>
        <pt x="209" y="128" on="0"/>
        <pt x="196" y="162" on="0"/>
        <pt x="196" y="178" on="1"/>
        <pt x="196" y="214" on="0"/>
        <pt x="256" y="260" on="0"/>
        <pt x="323" y="284" on="1"/>
        <pt x="356" y="296" on="0"/>
        <pt x="441" y="321" on="0"/>
        <pt x="494" y="335" on="1"/>
        <pt x="494" y="338" on="1"/>
        <pt x="451" y="352" on="0"/>
        <pt x="391" y="372" on="0"/>
        <pt x="369" y="381" on="1"/>
        <pt x="317" y="401" on="0"/>
        <pt x="277" y="433" on="0"/>
        <pt x="277" y="460" on="1"/>
        <pt x="277" y="481" on="0"/>
        <pt x="315" y="529" on="0"/>
        <pt x="364" y="572" on="1"/>
        <pt x="429" y="629" on="1"/>
        <pt x="462" y="658" on="0"/>
        <pt x="482" y="681" on="0"/>
        <pt x="482" y="693" on="1"/>
        <pt x="482" y="703" on="0"/>
        <pt x="465" y="715" on="0"/>
        <pt x="447" y="718" on="1"/>
        <pt x="233" y="749" on="1"/>
        <pt x="247" y="797" on="1"/>
        <pt x="468" y="766" on="1"/>
        <pt x="505" y="761" on="0"/>
        <pt x="543" y="729" on="0"/>
        <pt x="543" y="704" on="1"/>
        <pt x="543" y="679" on="0"/>
        <pt x="509" y="633" on="0"/>
        <pt x="462" y="592" on="1"/>
        <pt x="397" y="535" on="1"/>
        <pt x="361" y="503" on="0"/>
        <pt x="340" y="479" on="0"/>
        <pt x="340" y="464" on="1"/>
        <pt x="340" y="443" on="0"/>
        <pt x="449" y="396" on="0"/>
        <pt x="573" y="361" on="1"/>
        <pt x="555" y="301" on="1"/>
        <pt x="504" y="288" on="0"/>
        <pt x="424" y="267" on="0"/>
        <pt x="393" y="258" on="1"/>
        <pt x="319" y="236" on="0"/>
        <pt x="259" y="202" on="0"/>
        <pt x="259" y="177" on="1"/>
        <pt x="259" y="168" on="0"/>
        <pt x="269" y="143" on="0"/>
        <pt x="279" y="125" on="1"/>
        <pt x="311" y="68" on="1"/>
        <pt x="327" y="39" on="0"/>
        <pt x="340" y="4" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          40 41 5 4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="bracketleft" xMin="102" yMin="-129" xMax="673" yMax="783">
      <contour>
        <pt x="411" y="-129" on="1"/>
        <pt x="102" y="-129" on="1"/>
        <pt x="364" y="783" on="1"/>
        <pt x="673" y="783" on="1"/>
        <pt x="658" y="732" on="1"/>
        <pt x="410" y="732" on="1"/>
        <pt x="178" y="-78" on="1"/>
        <pt x="426" y="-78" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          5 2 6 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="bracketright" xMin="-3" yMin="-129" xMax="568" yMax="783">
      <contour>
        <pt x="492" y="732" on="1"/>
        <pt x="244" y="732" on="1"/>
        <pt x="259" y="783" on="1"/>
        <pt x="568" y="783" on="1"/>
        <pt x="306" y="-129" on="1"/>
        <pt x="-3" y="-129" on="1"/>
        <pt x="12" y="-78" on="1"/>
        <pt x="260" y="-78" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          6 5 1 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="breve" xMin="272" yMin="536" xMax="631" yMax="730">
      <component glyphName="uni0306" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="bullet" xMin="208" yMin="217" xMax="468" yMax="454">
      <contour>
        <pt x="208" y="305" on="1"/>
        <pt x="208" y="369" on="0"/>
        <pt x="287" y="454" on="0"/>
        <pt x="352" y="454" on="1"/>
        <pt x="409" y="454" on="0"/>
        <pt x="468" y="409" on="0"/>
        <pt x="468" y="366" on="1"/>
        <pt x="468" y="301" on="0"/>
        <pt x="388" y="217" on="0"/>
        <pt x="324" y="217" on="1"/>
        <pt x="267" y="217" on="0"/>
        <pt x="208" y="262" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          3 9
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="c" xMin="64" yMin="-15" xMax="574" yMax="475">
      <contour>
        <pt x="375" y="425" on="1"/>
        <pt x="329" y="425" on="0"/>
        <pt x="241" y="387" on="0"/>
        <pt x="207" y="353" on="1"/>
        <pt x="171" y="317" on="0"/>
        <pt x="128" y="215" on="0"/>
        <pt x="128" y="167" on="1"/>
        <pt x="128" y="107" on="0"/>
        <pt x="199" y="35" on="0"/>
        <pt x="259" y="35" on="1"/>
        <pt x="301" y="35" on="0"/>
        <pt x="401" y="65" on="0"/>
        <pt x="471" y="98" on="1"/>
        <pt x="494" y="51" on="1"/>
        <pt x="424" y="16" on="0"/>
        <pt x="310" y="-15" on="0"/>
        <pt x="245" y="-15" on="1"/>
        <pt x="161" y="-15" on="0"/>
        <pt x="64" y="79" on="0"/>
        <pt x="64" y="161" on="1"/>
        <pt x="64" y="225" on="0"/>
        <pt x="111" y="339" on="0"/>
        <pt x="156" y="384" on="1"/>
        <pt x="199" y="427" on="0"/>
        <pt x="310" y="475" on="0"/>
        <pt x="367" y="475" on="1"/>
        <pt x="422" y="475" on="0"/>
        <pt x="514" y="445" on="0"/>
        <pt x="574" y="406" on="1"/>
        <pt x="541" y="357" on="1"/>
        <pt x="482" y="396" on="0"/>
        <pt x="410" y="425" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          0 25 7 114 9 16 11 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cacute" xMin="64" yMin="-15" xMax="621" yMax="746">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="331" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 32 25 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="caron" xMin="265" yMin="536" xMax="630" yMax="741">
      <component glyphName="uni030C" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ccaron" xMin="64" yMin="-15" xMax="654" yMax="746">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C" x="331" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 32 25 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ccedilla" xMin="64" yMin="-270" xMax="574" yMax="475">
      <contour>
        <pt x="375" y="425" on="1"/>
        <pt x="329" y="425" on="0"/>
        <pt x="241" y="387" on="0"/>
        <pt x="207" y="353" on="1"/>
        <pt x="171" y="317" on="0"/>
        <pt x="128" y="215" on="0"/>
        <pt x="128" y="167" on="1"/>
        <pt x="128" y="107" on="0"/>
        <pt x="199" y="35" on="0"/>
        <pt x="259" y="35" on="1"/>
        <pt x="301" y="35" on="0"/>
        <pt x="401" y="65" on="0"/>
        <pt x="471" y="98" on="1"/>
        <pt x="494" y="51" on="1"/>
        <pt x="427" y="17" on="0"/>
        <pt x="316" y="-14" on="0"/>
        <pt x="257" y="-15" on="1"/>
        <pt x="225" y="-66" on="1"/>
        <pt x="301" y="-78" on="0"/>
        <pt x="359" y="-112" on="0"/>
        <pt x="359" y="-151" on="1"/>
        <pt x="359" y="-192" on="0"/>
        <pt x="303" y="-233" on="0"/>
        <pt x="238" y="-247" on="1"/>
        <pt x="206" y="-253" on="0"/>
        <pt x="122" y="-265" on="0"/>
        <pt x="68" y="-270" on="1"/>
        <pt x="68" y="-221" on="1"/>
        <pt x="107" y="-217" on="0"/>
        <pt x="169" y="-210" on="0"/>
        <pt x="193" y="-207" on="1"/>
        <pt x="249" y="-198" on="0"/>
        <pt x="295" y="-177" on="0"/>
        <pt x="295" y="-155" on="1"/>
        <pt x="295" y="-135" on="0"/>
        <pt x="239" y="-116" on="0"/>
        <pt x="162" y="-108" on="1"/>
        <pt x="159" y="-98" on="1"/>
        <pt x="214" y="-13" on="1"/>
        <pt x="143" y="-4" on="0"/>
        <pt x="64" y="87" on="0"/>
        <pt x="64" y="161" on="1"/>
        <pt x="64" y="225" on="0"/>
        <pt x="111" y="339" on="0"/>
        <pt x="156" y="384" on="1"/>
        <pt x="199" y="427" on="0"/>
        <pt x="310" y="475" on="0"/>
        <pt x="367" y="475" on="1"/>
        <pt x="422" y="475" on="0"/>
        <pt x="514" y="445" on="0"/>
        <pt x="574" y="406" on="1"/>
        <pt x="541" y="357" on="1"/>
        <pt x="482" y="396" on="0"/>
        <pt x="410" y="425" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          0 47 7 114 36 37 17 3 27 26 38 9 16 11 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ccircumflex" xMin="64" yMin="-15" xMax="606" yMax="741">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="330" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 32 25 1 1 61 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cdotaccent" xMin="64" yMin="-15" xMax="574" yMax="664">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307" x="331" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 35 25 1 1 86 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cedilla" xMin="68" yMin="-265" xMax="359" yMax="21">
      <component glyphName="uni0327" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="cent" xMin="72" yMin="-142" xMax="582" yMax="632">
      <contour>
        <pt x="234" y="-142" on="1"/>
        <pt x="177" y="-142" on="1"/>
        <pt x="226" y="1" on="1"/>
        <pt x="154" y="9" on="0"/>
        <pt x="72" y="101" on="0"/>
        <pt x="72" y="176" on="1"/>
        <pt x="72" y="240" on="0"/>
        <pt x="119" y="354" on="0"/>
        <pt x="164" y="399" on="1"/>
        <pt x="207" y="442" on="0"/>
        <pt x="318" y="490" on="0"/>
        <pt x="375" y="490" on="1"/>
        <pt x="379" y="490" on="0"/>
        <pt x="387" y="490" on="0"/>
        <pt x="391" y="490" on="1"/>
        <pt x="440" y="632" on="1"/>
        <pt x="497" y="632" on="1"/>
        <pt x="446" y="483" on="1"/>
        <pt x="476" y="477" on="0"/>
        <pt x="540" y="448" on="0"/>
        <pt x="582" y="421" on="1"/>
        <pt x="549" y="372" on="1"/>
        <pt x="508" y="400" on="0"/>
        <pt x="449" y="429" on="0"/>
        <pt x="424" y="435" on="1"/>
        <pt x="295" y="51" on="1"/>
        <pt x="331" y="55" on="0"/>
        <pt x="420" y="85" on="0"/>
        <pt x="479" y="113" on="1"/>
        <pt x="502" y="66" on="1"/>
        <pt x="440" y="35" on="0"/>
        <pt x="336" y="4" on="0"/>
        <pt x="283" y="1" on="1"/>
      </contour>
      <contour>
        <pt x="215" y="368" on="1"/>
        <pt x="179" y="332" on="0"/>
        <pt x="136" y="230" on="0"/>
        <pt x="136" y="182" on="1"/>
        <pt x="136" y="126" on="0"/>
        <pt x="197" y="56" on="0"/>
        <pt x="250" y="51" on="1"/>
        <pt x="381" y="440" on="1"/>
        <pt x="335" y="439" on="0"/>
        <pt x="249" y="402" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          39 25 25 2 0 32 24 40 40 17 15 14
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="circumflex" xMin="218" yMin="536" xMax="583" yMax="741">
      <component glyphName="uni0302" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="colon" xMin="182" yMin="-15" xMax="432" yMax="472">
      <contour>
        <pt x="432" y="421" on="1"/>
        <pt x="432" y="384" on="0"/>
        <pt x="385" y="335" on="0"/>
        <pt x="346" y="335" on="1"/>
        <pt x="316" y="335" on="0"/>
        <pt x="282" y="363" on="0"/>
        <pt x="282" y="388" on="1"/>
        <pt x="282" y="422" on="0"/>
        <pt x="330" y="472" on="0"/>
        <pt x="367" y="472" on="1"/>
        <pt x="399" y="472" on="0"/>
        <pt x="432" y="446" on="0"/>
      </contour>
      <contour>
        <pt x="332" y="71" on="1"/>
        <pt x="332" y="34" on="0"/>
        <pt x="285" y="-15" on="0"/>
        <pt x="246" y="-15" on="1"/>
        <pt x="216" y="-15" on="0"/>
        <pt x="182" y="13" on="0"/>
        <pt x="182" y="38" on="1"/>
        <pt x="182" y="72" on="0"/>
        <pt x="231" y="122" on="0"/>
        <pt x="267" y="122" on="1"/>
        <pt x="299" y="122" on="0"/>
        <pt x="332" y="96" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          21 15 11 114 3 9 7 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="colon.fig" xMin="211" yMin="84" xMax="461" yMax="571">
      <component glyphName="colon" x="29" y="99" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="comma" xMin="71" yMin="-144" xMax="346" yMax="120">
      <contour>
        <pt x="138" y="-144" on="1"/>
        <pt x="71" y="-144" on="1"/>
        <pt x="71" y="-142" on="1"/>
        <pt x="171" y="-57" on="0"/>
        <pt x="227" y="26" on="0"/>
        <pt x="246" y="120" on="1"/>
        <pt x="346" y="120" on="1"/>
        <pt x="321" y="9" on="0"/>
        <pt x="252" y="-79" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          2 0 5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="copyright" xMin="48" yMin="-70" xMax="623" yMax="725">
      <contour>
        <pt x="623" y="546" on="1"/>
        <pt x="623" y="501" on="0"/>
        <pt x="602" y="382" on="0"/>
        <pt x="581" y="308" on="1"/>
        <pt x="525" y="114" on="0"/>
        <pt x="356" y="-70" on="0"/>
        <pt x="230" y="-70" on="1"/>
        <pt x="136" y="-70" on="0"/>
        <pt x="48" y="19" on="0"/>
        <pt x="48" y="112" on="1"/>
        <pt x="48" y="158" on="0"/>
        <pt x="69" y="276" on="0"/>
        <pt x="89" y="348" on="1"/>
        <pt x="145" y="541" on="0"/>
        <pt x="314" y="725" on="0"/>
        <pt x="440" y="725" on="1"/>
        <pt x="534" y="725" on="0"/>
        <pt x="623" y="638" on="0"/>
      </contour>
      <contour>
        <pt x="437" y="680" on="1"/>
        <pt x="329" y="680" on="0"/>
        <pt x="187" y="511" on="0"/>
        <pt x="134" y="328" on="1"/>
        <pt x="114" y="258" on="0"/>
        <pt x="95" y="152" on="0"/>
        <pt x="95" y="113" on="1"/>
        <pt x="95" y="42" on="0"/>
        <pt x="161" y="-25" on="0"/>
        <pt x="233" y="-25" on="1"/>
        <pt x="341" y="-25" on="0"/>
        <pt x="483" y="144" on="0"/>
        <pt x="536" y="328" on="1"/>
        <pt x="556" y="396" on="0"/>
        <pt x="575" y="505" on="0"/>
        <pt x="575" y="546" on="1"/>
        <pt x="575" y="615" on="0"/>
        <pt x="509" y="680" on="0"/>
      </contour>
      <contour>
        <pt x="280" y="97" on="1"/>
        <pt x="236" y="97" on="0"/>
        <pt x="192" y="153" on="0"/>
        <pt x="192" y="210" on="1"/>
        <pt x="192" y="258" on="0"/>
        <pt x="220" y="371" on="0"/>
        <pt x="245" y="421" on="1"/>
        <pt x="278" y="486" on="0"/>
        <pt x="360" y="558" on="0"/>
        <pt x="403" y="558" on="1"/>
        <pt x="437" y="558" on="0"/>
        <pt x="481" y="525" on="0"/>
        <pt x="508" y="484" on="1"/>
        <pt x="472" y="456" on="1"/>
        <pt x="449" y="490" on="0"/>
        <pt x="419" y="515" on="0"/>
        <pt x="399" y="515" on="1"/>
        <pt x="370" y="515" on="0"/>
        <pt x="309" y="446" on="0"/>
        <pt x="284" y="386" on="1"/>
        <pt x="265" y="342" on="0"/>
        <pt x="243" y="248" on="0"/>
        <pt x="243" y="212" on="1"/>
        <pt x="243" y="176" on="0"/>
        <pt x="266" y="140" on="0"/>
        <pt x="288" y="140" on="1"/>
        <pt x="310" y="140" on="0"/>
        <pt x="356" y="169" on="0"/>
        <pt x="389" y="202" on="1"/>
        <pt x="419" y="172" on="1"/>
        <pt x="378" y="131" on="0"/>
        <pt x="317" y="97" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 13 values pushed */
          61 36 52 45 36 45 36 45 6 18 15 27 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="d" xMin="56" yMin="-8" xMax="652" yMax="710">
      <contour>
        <pt x="448" y="0" on="1"/>
        <pt x="399" y="0" on="1"/>
        <pt x="417" y="95" on="1"/>
        <pt x="361" y="41" on="0"/>
        <pt x="265" y="-8" on="0"/>
        <pt x="212" y="-8" on="1"/>
        <pt x="142" y="-8" on="0"/>
        <pt x="56" y="84" on="0"/>
        <pt x="56" y="160" on="1"/>
        <pt x="56" y="293" on="0"/>
        <pt x="246" y="468" on="0"/>
        <pt x="396" y="468" on="1"/>
        <pt x="428" y="468" on="0"/>
        <pt x="489" y="457" on="0"/>
        <pt x="517" y="446" on="1"/>
        <pt x="593" y="710" on="1"/>
        <pt x="652" y="710" on="1"/>
      </contour>
      <contour>
        <pt x="399" y="418" on="1"/>
        <pt x="273" y="418" on="0"/>
        <pt x="118" y="269" on="0"/>
        <pt x="118" y="163" on="1"/>
        <pt x="118" y="109" on="0"/>
        <pt x="174" y="42" on="0"/>
        <pt x="218" y="42" on="1"/>
        <pt x="270" y="42" on="0"/>
        <pt x="363" y="96" on="0"/>
        <pt x="436" y="163" on="1"/>
        <pt x="503" y="398" on="1"/>
        <pt x="478" y="408" on="0"/>
        <pt x="427" y="418" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          15 0 114 14 27 17 17 11 7 114 26 2 23 23 5 11 114 0 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dagger" xMin="129" yMin="0" xMax="616" yMax="710">
      <contour>
        <pt x="616" y="517" on="1"/>
        <pt x="593" y="435" on="1"/>
        <pt x="573" y="435" on="0"/>
        <pt x="527" y="440" on="0"/>
        <pt x="481" y="447" on="1"/>
        <pt x="445" y="453" on="0"/>
        <pt x="409" y="458" on="0"/>
        <pt x="393" y="459" on="1"/>
        <pt x="382" y="420" on="0"/>
        <pt x="360" y="328" on="0"/>
        <pt x="339" y="236" on="1"/>
        <pt x="318" y="139" on="0"/>
        <pt x="294" y="41" on="0"/>
        <pt x="282" y="0" on="1"/>
        <pt x="190" y="0" on="1"/>
        <pt x="202" y="41" on="0"/>
        <pt x="234" y="137" on="0"/>
        <pt x="268" y="233" on="1"/>
        <pt x="301" y="326" on="0"/>
        <pt x="332" y="419" on="0"/>
        <pt x="344" y="459" on="1"/>
        <pt x="327" y="458" on="0"/>
        <pt x="286" y="453" on="0"/>
        <pt x="244" y="447" on="1"/>
        <pt x="194" y="440" on="0"/>
        <pt x="147" y="435" on="0"/>
        <pt x="129" y="435" on="1"/>
        <pt x="152" y="517" on="1"/>
        <pt x="170" y="517" on="0"/>
        <pt x="214" y="513" on="0"/>
        <pt x="259" y="507" on="1"/>
        <pt x="298" y="501" on="0"/>
        <pt x="338" y="497" on="0"/>
        <pt x="355" y="496" on="1"/>
        <pt x="359" y="513" on="0"/>
        <pt x="366" y="553" on="0"/>
        <pt x="372" y="593" on="1"/>
        <pt x="379" y="642" on="0"/>
        <pt x="388" y="690" on="0"/>
        <pt x="394" y="710" on="1"/>
        <pt x="486" y="710" on="1"/>
        <pt x="480" y="689" on="0"/>
        <pt x="462" y="640" on="0"/>
        <pt x="441" y="590" on="1"/>
        <pt x="425" y="551" on="0"/>
        <pt x="410" y="512" on="0"/>
        <pt x="404" y="496" on="1"/>
        <pt x="420" y="497" on="0"/>
        <pt x="457" y="501" on="0"/>
        <pt x="495" y="506" on="1"/>
        <pt x="545" y="513" on="0"/>
        <pt x="595" y="517" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          7 20 33 46 4 14 39 0 114 14 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="daggerdbl" xMin="76" yMin="0" xMax="616" yMax="710">
      <contour>
        <pt x="532" y="277" on="1"/>
        <pt x="509" y="195" on="1"/>
        <pt x="490" y="195" on="0"/>
        <pt x="447" y="200" on="0"/>
        <pt x="404" y="207" on="1"/>
        <pt x="372" y="214" on="0"/>
        <pt x="338" y="218" on="0"/>
        <pt x="324" y="219" on="1"/>
        <pt x="319" y="201" on="0"/>
        <pt x="311" y="159" on="0"/>
        <pt x="303" y="117" on="1"/>
        <pt x="295" y="69" on="0"/>
        <pt x="285" y="21" on="0"/>
        <pt x="279" y="0" on="1"/>
        <pt x="193" y="0" on="1"/>
        <pt x="199" y="20" on="0"/>
        <pt x="216" y="68" on="0"/>
        <pt x="236" y="116" on="1"/>
        <pt x="253" y="159" on="0"/>
        <pt x="269" y="201" on="0"/>
        <pt x="275" y="219" on="1"/>
        <pt x="260" y="218" on="0"/>
        <pt x="224" y="214" on="0"/>
        <pt x="188" y="207" on="1"/>
        <pt x="142" y="200" on="0"/>
        <pt x="95" y="195" on="0"/>
        <pt x="76" y="195" on="1"/>
        <pt x="99" y="277" on="1"/>
        <pt x="118" y="277" on="0"/>
        <pt x="161" y="273" on="0"/>
        <pt x="203" y="266" on="1"/>
        <pt x="237" y="261" on="0"/>
        <pt x="271" y="257" on="0"/>
        <pt x="286" y="256" on="1"/>
        <pt x="344" y="459" on="1"/>
        <pt x="328" y="458" on="0"/>
        <pt x="288" y="453" on="0"/>
        <pt x="248" y="447" on="1"/>
        <pt x="198" y="440" on="0"/>
        <pt x="149" y="435" on="0"/>
        <pt x="129" y="435" on="1"/>
        <pt x="152" y="517" on="1"/>
        <pt x="173" y="517" on="0"/>
        <pt x="219" y="513" on="0"/>
        <pt x="264" y="506" on="1"/>
        <pt x="301" y="501" on="0"/>
        <pt x="338" y="497" on="0"/>
        <pt x="354" y="496" on="1"/>
        <pt x="358" y="513" on="0"/>
        <pt x="366" y="554" on="0"/>
        <pt x="372" y="594" on="1"/>
        <pt x="378" y="642" on="0"/>
        <pt x="388" y="690" on="0"/>
        <pt x="394" y="710" on="1"/>
        <pt x="486" y="710" on="1"/>
        <pt x="480" y="689" on="0"/>
        <pt x="462" y="641" on="0"/>
        <pt x="441" y="592" on="1"/>
        <pt x="424" y="553" on="0"/>
        <pt x="409" y="513" on="0"/>
        <pt x="403" y="496" on="1"/>
        <pt x="420" y="497" on="0"/>
        <pt x="460" y="501" on="0"/>
        <pt x="502" y="506" on="1"/>
        <pt x="550" y="513" on="0"/>
        <pt x="597" y="517" on="0"/>
        <pt x="616" y="517" on="1"/>
        <pt x="593" y="435" on="1"/>
        <pt x="574" y="435" on="0"/>
        <pt x="530" y="440" on="0"/>
        <pt x="485" y="447" on="1"/>
        <pt x="447" y="453" on="0"/>
        <pt x="409" y="458" on="0"/>
        <pt x="392" y="459" on="1"/>
        <pt x="334" y="256" on="1"/>
        <pt x="349" y="257" on="0"/>
        <pt x="384" y="261" on="0"/>
        <pt x="420" y="266" on="1"/>
        <pt x="467" y="273" on="0"/>
        <pt x="513" y="277" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          7 20 74 33 73 34 47 60 8 14 53 0 114 14 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dcaron" xMin="56" yMin="-8" xMax="849" yMax="787">
      <component glyphName="d" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0315" x="641" y="77" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="dcroat" xMin="56" yMin="-8" xMax="681" yMax="710">
      <contour>
        <pt x="428" y="0" on="1"/>
        <pt x="379" y="0" on="1"/>
        <pt x="397" y="94" on="1"/>
        <pt x="342" y="38" on="0"/>
        <pt x="258" y="-8" on="0"/>
        <pt x="212" y="-8" on="1"/>
        <pt x="142" y="-8" on="0"/>
        <pt x="56" y="79" on="0"/>
        <pt x="56" y="150" on="1"/>
        <pt x="56" y="271" on="0"/>
        <pt x="239" y="428" on="0"/>
        <pt x="384" y="428" on="1"/>
        <pt x="409" y="428" on="0"/>
        <pt x="460" y="417" on="0"/>
        <pt x="486" y="406" on="1"/>
        <pt x="523" y="535" on="1"/>
        <pt x="322" y="535" on="1"/>
        <pt x="336" y="583" on="1"/>
        <pt x="537" y="583" on="1"/>
        <pt x="573" y="710" on="1"/>
        <pt x="632" y="710" on="1"/>
        <pt x="596" y="583" on="1"/>
        <pt x="681" y="583" on="1"/>
        <pt x="667" y="535" on="1"/>
        <pt x="582" y="535" on="1"/>
      </contour>
      <contour>
        <pt x="387" y="378" on="1"/>
        <pt x="266" y="378" on="0"/>
        <pt x="118" y="247" on="0"/>
        <pt x="118" y="153" on="1"/>
        <pt x="118" y="103" on="0"/>
        <pt x="174" y="42" on="0"/>
        <pt x="218" y="42" on="1"/>
        <pt x="260" y="42" on="0"/>
        <pt x="341" y="92" on="0"/>
        <pt x="416" y="163" on="1"/>
        <pt x="472" y="358" on="1"/>
        <pt x="450" y="368" on="0"/>
        <pt x="408" y="378" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 26 values pushed */
          35 25 25 11 21 18 18 24 15 14 11 11 5 19 0 114 34 2 31 31 5 11 114 1 10
          114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="degree" xMin="173" yMin="293" xMax="592" yMax="692">
      <contour>
        <pt x="592" y="532" on="1"/>
        <pt x="592" y="434" on="0"/>
        <pt x="454" y="293" on="0"/>
        <pt x="354" y="293" on="1"/>
        <pt x="272" y="293" on="0"/>
        <pt x="173" y="381" on="0"/>
        <pt x="173" y="453" on="1"/>
        <pt x="173" y="551" on="0"/>
        <pt x="311" y="692" on="0"/>
        <pt x="411" y="692" on="1"/>
        <pt x="493" y="692" on="0"/>
        <pt x="592" y="604" on="0"/>
      </contour>
      <contour>
        <pt x="540" y="534" on="1"/>
        <pt x="540" y="586" on="0"/>
        <pt x="472" y="649" on="0"/>
        <pt x="414" y="649" on="1"/>
        <pt x="337" y="649" on="0"/>
        <pt x="225" y="530" on="0"/>
        <pt x="225" y="451" on="1"/>
        <pt x="225" y="399" on="0"/>
        <pt x="293" y="336" on="0"/>
        <pt x="351" y="336" on="1"/>
        <pt x="428" y="336" on="0"/>
        <pt x="540" y="455" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          21 3 15 9 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dieresis" xMin="241" yMin="556" xMax="587" yMax="655">
      <component glyphName="uni0308" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="divide" xMin="93" yMin="82" xMax="576" yMax="570">
      <contour>
        <pt x="449" y="533" on="1"/>
        <pt x="449" y="505" on="0"/>
        <pt x="411" y="466" on="0"/>
        <pt x="382" y="466" on="1"/>
        <pt x="359" y="466" on="0"/>
        <pt x="335" y="485" on="0"/>
        <pt x="335" y="503" on="1"/>
        <pt x="335" y="532" on="0"/>
        <pt x="372" y="570" on="0"/>
        <pt x="402" y="570" on="1"/>
        <pt x="425" y="570" on="0"/>
        <pt x="449" y="551" on="0"/>
      </contour>
      <contour>
        <pt x="561" y="301" on="1"/>
        <pt x="93" y="301" on="1"/>
        <pt x="108" y="352" on="1"/>
        <pt x="576" y="352" on="1"/>
      </contour>
      <contour>
        <pt x="336" y="149" on="1"/>
        <pt x="336" y="121" on="0"/>
        <pt x="298" y="82" on="0"/>
        <pt x="269" y="82" on="1"/>
        <pt x="246" y="82" on="0"/>
        <pt x="222" y="101" on="0"/>
        <pt x="222" y="119" on="1"/>
        <pt x="222" y="148" on="0"/>
        <pt x="259" y="186" on="0"/>
        <pt x="289" y="186" on="1"/>
        <pt x="312" y="186" on="0"/>
        <pt x="336" y="167" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          19 95 25 111 25 2 25 25 13 9 15 3 1 3 3 14 14 13 188
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dollar" xMin="44" yMin="-142" xMax="612" yMax="797">
      <contour>
        <pt x="257" y="1" on="1"/>
        <pt x="213" y="-142" on="1"/>
        <pt x="160" y="-142" on="1"/>
        <pt x="206" y="7" on="1"/>
        <pt x="167" y="14" on="0"/>
        <pt x="89" y="44" on="0"/>
        <pt x="44" y="69" on="1"/>
        <pt x="70" y="118" on="1"/>
        <pt x="115" y="93" on="0"/>
        <pt x="192" y="62" on="0"/>
        <pt x="227" y="55" on="1"/>
        <pt x="315" y="327" on="1"/>
        <pt x="246" y="362" on="0"/>
        <pt x="183" y="439" on="0"/>
        <pt x="183" y="492" on="1"/>
        <pt x="183" y="562" on="0"/>
        <pt x="303" y="655" on="0"/>
        <pt x="400" y="655" on="1"/>
        <pt x="414" y="655" on="0"/>
        <pt x="427" y="655" on="0"/>
        <pt x="432" y="654" on="1"/>
        <pt x="477" y="797" on="1"/>
        <pt x="530" y="797" on="1"/>
        <pt x="483" y="649" on="1"/>
        <pt x="510" y="645" on="0"/>
        <pt x="568" y="629" on="0"/>
        <pt x="612" y="614" on="1"/>
        <pt x="594" y="562" on="1"/>
        <pt x="557" y="578" on="0"/>
        <pt x="493" y="597" on="0"/>
        <pt x="463" y="601" on="1"/>
        <pt x="382" y="354" on="1"/>
        <pt x="454" y="316" on="0"/>
        <pt x="517" y="240" on="0"/>
        <pt x="517" y="182" on="1"/>
        <pt x="517" y="97" on="0"/>
        <pt x="392" y="0" on="0"/>
        <pt x="285" y="0" on="1"/>
        <pt x="273" y="0" on="0"/>
        <pt x="262" y="0" on="0"/>
      </contour>
      <contour>
        <pt x="400" y="606" on="1"/>
        <pt x="327" y="606" on="0"/>
        <pt x="244" y="547" on="0"/>
        <pt x="244" y="496" on="1"/>
        <pt x="244" y="457" on="0"/>
        <pt x="292" y="402" on="0"/>
        <pt x="344" y="374" on="1"/>
        <pt x="419" y="606" on="1"/>
        <pt x="414" y="606" on="0"/>
        <pt x="405" y="606" on="0"/>
      </contour>
      <contour>
        <pt x="285" y="49" on="1"/>
        <pt x="365" y="49" on="0"/>
        <pt x="456" y="119" on="0"/>
        <pt x="456" y="180" on="1"/>
        <pt x="456" y="219" on="0"/>
        <pt x="406" y="280" on="0"/>
        <pt x="353" y="308" on="1"/>
        <pt x="270" y="49" on="1"/>
        <pt x="274" y="49" on="0"/>
        <pt x="281" y="49" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 31 values pushed */
          10 57 57 50 50 53 34 56 11 31 46 14 43 8 20 37 3 0 0 1 37 12 114 30 47
          47 23 21 20 4 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dong" xMin="-9" yMin="-136" xMax="695" yMax="655">
      <contour>
        <pt x="448" y="0" on="1"/>
        <pt x="399" y="0" on="1"/>
        <pt x="417" y="95" on="1"/>
        <pt x="362" y="40" on="0"/>
        <pt x="268" y="-8" on="0"/>
        <pt x="217" y="-8" on="1"/>
        <pt x="141" y="-8" on="0"/>
        <pt x="54" y="75" on="0"/>
        <pt x="54" y="148" on="1"/>
        <pt x="54" y="269" on="0"/>
        <pt x="234" y="428" on="0"/>
        <pt x="378" y="428" on="1"/>
        <pt x="411" y="428" on="0"/>
        <pt x="474" y="416" on="0"/>
        <pt x="505" y="404" on="1"/>
        <pt x="536" y="513" on="1"/>
        <pt x="336" y="513" on="1"/>
        <pt x="350" y="561" on="1"/>
        <pt x="550" y="561" on="1"/>
        <pt x="577" y="655" on="1"/>
        <pt x="636" y="655" on="1"/>
        <pt x="609" y="561" on="1"/>
        <pt x="695" y="561" on="1"/>
        <pt x="681" y="513" on="1"/>
        <pt x="595" y="513" on="1"/>
      </contour>
      <contour>
        <pt x="377" y="378" on="1"/>
        <pt x="260" y="378" on="0"/>
        <pt x="116" y="245" on="0"/>
        <pt x="116" y="151" on="1"/>
        <pt x="116" y="102" on="0"/>
        <pt x="175" y="42" on="0"/>
        <pt x="223" y="42" on="1"/>
        <pt x="273" y="42" on="0"/>
        <pt x="363" y="95" on="0"/>
        <pt x="436" y="163" on="1"/>
        <pt x="491" y="354" on="1"/>
        <pt x="467" y="366" on="0"/>
        <pt x="410" y="378" on="0"/>
      </contour>
      <contour>
        <pt x="399" y="-136" on="1"/>
        <pt x="-9" y="-136" on="1"/>
        <pt x="5" y="-88" on="1"/>
        <pt x="413" y="-88" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 28 values pushed */
          35 25 25 11 21 18 18 24 15 14 11 11 5 19 4 114 39 40 34 2 31 31 5 13 114
          1 12 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dotaccent" xMin="358" yMin="556" xMax="472" yMax="659">
      <component glyphName="uni0307" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="dotlessi" xMin="57" yMin="0" xMax="470" yMax="460">
      <contour>
        <pt x="57" y="0" on="1"/>
        <pt x="71" y="50" on="1"/>
        <pt x="232" y="50" on="1"/>
        <pt x="354" y="410" on="1"/>
        <pt x="195" y="410" on="1"/>
        <pt x="209" y="460" on="1"/>
        <pt x="430" y="460" on="1"/>
        <pt x="291" y="50" on="1"/>
        <pt x="470" y="50" on="1"/>
        <pt x="456" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          4 5 6 114 7 1 1 0 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="e" xMin="74" yMin="-5" xMax="567" yMax="475">
      <contour>
        <pt x="409" y="44" on="1"/>
        <pt x="393" y="-5" on="1"/>
        <pt x="305" y="-5" on="0"/>
        <pt x="183" y="10" on="0"/>
        <pt x="146" y="28" on="1"/>
        <pt x="107" y="47" on="0"/>
        <pt x="74" y="110" on="0"/>
        <pt x="74" y="158" on="1"/>
        <pt x="74" y="219" on="0"/>
        <pt x="128" y="337" on="0"/>
        <pt x="177" y="383" on="1"/>
        <pt x="224" y="427" on="0"/>
        <pt x="344" y="475" on="0"/>
        <pt x="408" y="475" on="1"/>
        <pt x="481" y="475" on="0"/>
        <pt x="567" y="411" on="0"/>
        <pt x="567" y="358" on="1"/>
        <pt x="567" y="287" on="0"/>
        <pt x="443" y="217" on="0"/>
        <pt x="307" y="204" on="1"/>
        <pt x="138" y="189" on="1"/>
        <pt x="137" y="181" on="0"/>
        <pt x="136" y="167" on="0"/>
        <pt x="136" y="160" on="1"/>
        <pt x="136" y="87" on="0"/>
        <pt x="266" y="44" on="0"/>
      </contour>
      <contour>
        <pt x="505" y="358" on="1"/>
        <pt x="505" y="387" on="0"/>
        <pt x="452" y="425" on="0"/>
        <pt x="408" y="425" on="1"/>
        <pt x="321" y="425" on="0"/>
        <pt x="174" y="316" on="0"/>
        <pt x="148" y="233" on="1"/>
        <pt x="304" y="248" on="1"/>
        <pt x="405" y="258" on="0"/>
        <pt x="505" y="312" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          33 32 32 19 7 20 20 1 29 13 7 114 0 1 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="eacute" xMin="74" yMin="-5" xMax="609" yMax="746">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="319" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 36 13 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ebreve" xMin="74" yMin="-5" xMax="643" yMax="735">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306" x="319" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 43 13 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ecaron" xMin="74" yMin="-5" xMax="642" yMax="746">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C" x="319" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 36 13 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ecircumflex" xMin="74" yMin="-5" xMax="594" yMax="741">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="318" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 36 13 1 1 60 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="edieresis" xMin="74" yMin="-5" xMax="599" yMax="660">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308" x="319" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 39 13 1 1 86 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="edotaccent" xMin="74" yMin="-5" xMax="567" yMax="664">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307" x="319" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 39 13 1 1 86 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="egrave" xMin="74" yMin="-5" xMax="567" yMax="739">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300" x="319" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 38 13 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="eight" xMin="60" yMin="-15" xMax="590" yMax="670">
      <contour>
        <pt x="521" y="195" on="1"/>
        <pt x="521" y="104" on="0"/>
        <pt x="370" y="-15" on="0"/>
        <pt x="259" y="-15" on="1"/>
        <pt x="166" y="-15" on="0"/>
        <pt x="60" y="71" on="0"/>
        <pt x="60" y="146" on="1"/>
        <pt x="60" y="221" on="0"/>
        <pt x="174" y="330" on="0"/>
        <pt x="268" y="343" on="1"/>
        <pt x="268" y="348" on="1"/>
        <pt x="224" y="366" on="0"/>
        <pt x="177" y="434" on="0"/>
        <pt x="177" y="477" on="1"/>
        <pt x="177" y="558" on="0"/>
        <pt x="310" y="670" on="0"/>
        <pt x="407" y="670" on="1"/>
        <pt x="492" y="670" on="0"/>
        <pt x="590" y="589" on="0"/>
        <pt x="590" y="519" on="1"/>
        <pt x="590" y="452" on="0"/>
        <pt x="496" y="351" on="0"/>
        <pt x="418" y="336" on="1"/>
        <pt x="418" y="331" on="1"/>
        <pt x="467" y="313" on="0"/>
        <pt x="521" y="241" on="0"/>
      </contour>
      <contour>
        <pt x="405" y="619" on="1"/>
        <pt x="334" y="619" on="0"/>
        <pt x="238" y="531" on="0"/>
        <pt x="238" y="467" on="1"/>
        <pt x="238" y="421" on="0"/>
        <pt x="302" y="364" on="0"/>
        <pt x="352" y="364" on="1"/>
        <pt x="421" y="364" on="0"/>
        <pt x="529" y="460" on="0"/>
        <pt x="529" y="520" on="1"/>
        <pt x="529" y="566" on="0"/>
        <pt x="462" y="619" on="0"/>
      </contour>
      <contour>
        <pt x="322" y="312" on="1"/>
        <pt x="241" y="312" on="0"/>
        <pt x="124" y="215" on="0"/>
        <pt x="124" y="146" on="1"/>
        <pt x="124" y="94" on="0"/>
        <pt x="196" y="36" on="0"/>
        <pt x="261" y="36" on="1"/>
        <pt x="344" y="36" on="0"/>
        <pt x="457" y="131" on="0"/>
        <pt x="457" y="202" on="1"/>
        <pt x="457" y="252" on="0"/>
        <pt x="383" y="312" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          10 9 22 23 4 32 32 38 38 3 26 16 5 114 44 3 13 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="eight.den" xMin="132" yMin="-14" xMax="468" yMax="395">
      <contour>
        <pt x="427" y="109" on="1"/>
        <pt x="427" y="56" on="0"/>
        <pt x="334" y="-14" on="0"/>
        <pt x="266" y="-14" on="1"/>
        <pt x="204" y="-14" on="0"/>
        <pt x="132" y="39" on="0"/>
        <pt x="132" y="85" on="1"/>
        <pt x="132" y="128" on="0"/>
        <pt x="200" y="191" on="0"/>
        <pt x="256" y="200" on="1"/>
        <pt x="256" y="202" on="1"/>
        <pt x="229" y="213" on="0"/>
        <pt x="199" y="254" on="0"/>
        <pt x="199" y="280" on="1"/>
        <pt x="199" y="327" on="0"/>
        <pt x="282" y="395" on="0"/>
        <pt x="344" y="395" on="1"/>
        <pt x="401" y="395" on="0"/>
        <pt x="468" y="344" on="0"/>
        <pt x="468" y="301" on="1"/>
        <pt x="468" y="261" on="0"/>
        <pt x="410" y="203" on="0"/>
        <pt x="360" y="194" on="1"/>
        <pt x="360" y="192" on="1"/>
        <pt x="392" y="181" on="0"/>
        <pt x="427" y="137" on="0"/>
      </contour>
      <contour>
        <pt x="344" y="354" on="1"/>
        <pt x="303" y="354" on="0"/>
        <pt x="247" y="305" on="0"/>
        <pt x="247" y="270" on="1"/>
        <pt x="247" y="245" on="0"/>
        <pt x="286" y="214" on="0"/>
        <pt x="317" y="214" on="1"/>
        <pt x="357" y="214" on="0"/>
        <pt x="418" y="266" on="0"/>
        <pt x="418" y="299" on="1"/>
        <pt x="418" y="325" on="0"/>
        <pt x="378" y="354" on="0"/>
      </contour>
      <contour>
        <pt x="295" y="177" on="1"/>
        <pt x="248" y="177" on="0"/>
        <pt x="183" y="125" on="0"/>
        <pt x="183" y="88" on="1"/>
        <pt x="183" y="59" on="0"/>
        <pt x="227" y="26" on="0"/>
        <pt x="266" y="26" on="1"/>
        <pt x="313" y="26" on="0"/>
        <pt x="378" y="78" on="0"/>
        <pt x="378" y="117" on="1"/>
        <pt x="378" y="144" on="0"/>
        <pt x="332" y="177" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          38 22 23 9 10 32 6 3 26 16 186 114 44 3 187 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="eight.inf" xMin="67" yMin="-244" xMax="403" yMax="165">
      <component glyphName="eight.den" x="-65" y="-230" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="eight.num" xMin="210" yMin="261" xMax="546" yMax="670">
      <component glyphName="eight.den" x="78" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="eight.sup" xMin="226" yMin="316" xMax="562" yMax="725">
      <component glyphName="eight.den" x="94" y="330" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ellipsis" xMin="-12" yMin="-15" xMax="526" yMax="122">
      <contour>
        <pt x="63" y="122" on="1"/>
        <pt x="90" y="122" on="0"/>
        <pt x="116" y="102" on="0"/>
        <pt x="116" y="81" on="1"/>
        <pt x="116" y="40" on="0"/>
        <pt x="76" y="-15" on="0"/>
        <pt x="42" y="-15" on="1"/>
        <pt x="14" y="-15" on="0"/>
        <pt x="-12" y="7" on="0"/>
        <pt x="-12" y="29" on="1"/>
        <pt x="-12" y="68" on="0"/>
        <pt x="30" y="122" on="0"/>
      </contour>
      <contour>
        <pt x="268" y="122" on="1"/>
        <pt x="295" y="122" on="0"/>
        <pt x="321" y="102" on="0"/>
        <pt x="321" y="81" on="1"/>
        <pt x="321" y="40" on="0"/>
        <pt x="281" y="-15" on="0"/>
        <pt x="247" y="-15" on="1"/>
        <pt x="219" y="-15" on="0"/>
        <pt x="193" y="7" on="0"/>
        <pt x="193" y="29" on="1"/>
        <pt x="193" y="68" on="0"/>
        <pt x="235" y="122" on="0"/>
      </contour>
      <contour>
        <pt x="473" y="122" on="1"/>
        <pt x="500" y="122" on="0"/>
        <pt x="526" y="102" on="0"/>
        <pt x="526" y="81" on="1"/>
        <pt x="526" y="40" on="0"/>
        <pt x="486" y="-15" on="0"/>
        <pt x="452" y="-15" on="1"/>
        <pt x="424" y="-15" on="0"/>
        <pt x="398" y="7" on="0"/>
        <pt x="398" y="29" on="1"/>
        <pt x="398" y="68" on="0"/>
        <pt x="440" y="122" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          24 30 30 12 18 18 0 6 11 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="emacron" xMin="74" yMin="-5" xMax="597" yMax="631">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304" x="319" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 37 13 1 1 106 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="emdash" xMin="70" yMin="299" xMax="600" yMax="354">
      <contour>
        <pt x="70" y="299" on="1"/>
        <pt x="86" y="354" on="1"/>
        <pt x="600" y="354" on="1"/>
        <pt x="584" y="299" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          1 0 188
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="endash" xMin="99" yMin="299" xMax="569" yMax="354">
      <contour>
        <pt x="99" y="299" on="1"/>
        <pt x="115" y="354" on="1"/>
        <pt x="569" y="354" on="1"/>
        <pt x="553" y="299" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          1 0 188
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="eng" xMin="37" yMin="-239" xMax="546" yMax="465">
      <contour>
        <pt x="529" y="284" on="1"/>
        <pt x="449" y="8" on="1"/>
        <pt x="425" y="-76" on="0"/>
        <pt x="383" y="-157" on="0"/>
        <pt x="355" y="-180" on="1"/>
        <pt x="325" y="-203" on="0"/>
        <pt x="232" y="-228" on="0"/>
        <pt x="151" y="-234" on="1"/>
        <pt x="83" y="-239" on="1"/>
        <pt x="83" y="-188" on="1"/>
        <pt x="148" y="-184" on="1"/>
        <pt x="210" y="-180" on="0"/>
        <pt x="288" y="-159" on="0"/>
        <pt x="313" y="-138" on="1"/>
        <pt x="338" y="-119" on="0"/>
        <pt x="374" y="-51" on="0"/>
        <pt x="392" y="13" on="1"/>
        <pt x="472" y="292" on="1"/>
        <pt x="479" y="316" on="0"/>
        <pt x="485" y="348" on="0"/>
        <pt x="485" y="360" on="1"/>
        <pt x="485" y="385" on="0"/>
        <pt x="452" y="413" on="0"/>
        <pt x="422" y="413" on="1"/>
        <pt x="376" y="413" on="0"/>
        <pt x="272" y="334" on="0"/>
        <pt x="159" y="220" on="1"/>
        <pt x="96" y="0" on="1"/>
        <pt x="37" y="0" on="1"/>
        <pt x="169" y="460" on="1"/>
        <pt x="228" y="460" on="1"/>
        <pt x="183" y="304" on="1"/>
        <pt x="275" y="398" on="0"/>
        <pt x="377" y="465" on="0"/>
        <pt x="437" y="465" on="1"/>
        <pt x="486" y="465" on="0"/>
        <pt x="546" y="412" on="0"/>
        <pt x="546" y="369" on="1"/>
        <pt x="546" y="354" on="0"/>
        <pt x="538" y="313" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          26 31 31 23 23 34 7 114 29 6 114 28 10 114 9 8 15 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="eogonek" xMin="74" yMin="-235" xMax="567" yMax="475">
      <contour>
        <pt x="409" y="44" on="1"/>
        <pt x="266" y="44" on="0"/>
        <pt x="136" y="87" on="0"/>
        <pt x="136" y="160" on="1"/>
        <pt x="136" y="167" on="0"/>
        <pt x="137" y="181" on="0"/>
        <pt x="138" y="189" on="1"/>
        <pt x="307" y="204" on="1"/>
        <pt x="443" y="217" on="0"/>
        <pt x="567" y="287" on="0"/>
        <pt x="567" y="358" on="1"/>
        <pt x="567" y="411" on="0"/>
        <pt x="481" y="475" on="0"/>
        <pt x="408" y="475" on="1"/>
        <pt x="344" y="475" on="0"/>
        <pt x="224" y="427" on="0"/>
        <pt x="177" y="383" on="1"/>
        <pt x="128" y="337" on="0"/>
        <pt x="74" y="219" on="0"/>
        <pt x="74" y="158" on="1"/>
        <pt x="74" y="110" on="0"/>
        <pt x="107" y="47" on="0"/>
        <pt x="146" y="28" on="1"/>
        <pt x="183" y="10" on="0"/>
        <pt x="290" y="-3" on="0"/>
        <pt x="350" y="-5" on="1"/>
        <pt x="256" y="-86" on="0"/>
        <pt x="216" y="-146" on="0"/>
        <pt x="216" y="-170" on="1"/>
        <pt x="216" y="-201" on="0"/>
        <pt x="258" y="-228" on="0"/>
        <pt x="308" y="-231" on="1"/>
        <pt x="383" y="-235" on="1"/>
        <pt x="399" y="-192" on="1"/>
        <pt x="334" y="-188" on="1"/>
        <pt x="303" y="-186" on="0"/>
        <pt x="278" y="-173" on="0"/>
        <pt x="278" y="-158" on="1"/>
        <pt x="278" y="-136" on="0"/>
        <pt x="332" y="-66" on="0"/>
        <pt x="393" y="-5" on="1"/>
      </contour>
      <contour>
        <pt x="148" y="233" on="1"/>
        <pt x="174" y="316" on="0"/>
        <pt x="321" y="425" on="0"/>
        <pt x="408" y="425" on="1"/>
        <pt x="452" y="425" on="0"/>
        <pt x="505" y="387" on="0"/>
        <pt x="505" y="358" on="1"/>
        <pt x="505" y="312" on="0"/>
        <pt x="405" y="258" on="0"/>
        <pt x="304" y="248" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          33 32 40 50 41 41 7 6 6 13 25 0 40 10 114 44 13 7 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="equal" xMin="82" yMin="209" xMax="587" yMax="443">
      <contour>
        <pt x="572" y="392" on="1"/>
        <pt x="134" y="392" on="1"/>
        <pt x="149" y="443" on="1"/>
        <pt x="587" y="443" on="1"/>
      </contour>
      <contour>
        <pt x="520" y="209" on="1"/>
        <pt x="82" y="209" on="1"/>
        <pt x="97" y="261" on="1"/>
        <pt x="535" y="261" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          5 128 6 144 6 2 6 64 12 15 72 6 2 0 1 1 96 1 1 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="eth" xMin="55" yMin="-15" xMax="627" yMax="739">
      <contour>
        <pt x="485" y="658" on="1"/>
        <pt x="602" y="739" on="1"/>
        <pt x="627" y="701" on="1"/>
        <pt x="519" y="626" on="1"/>
        <pt x="551" y="589" on="0"/>
        <pt x="584" y="497" on="0"/>
        <pt x="584" y="442" on="1"/>
        <pt x="584" y="340" on="0"/>
        <pt x="511" y="138" on="0"/>
        <pt x="449" y="76" on="1"/>
        <pt x="405" y="32" on="0"/>
        <pt x="300" y="-15" on="0"/>
        <pt x="246" y="-15" on="1"/>
        <pt x="155" y="-15" on="0"/>
        <pt x="55" y="73" on="0"/>
        <pt x="55" y="153" on="1"/>
        <pt x="55" y="269" on="0"/>
        <pt x="210" y="426" on="0"/>
        <pt x="336" y="426" on="1"/>
        <pt x="387" y="426" on="0"/>
        <pt x="473" y="399" on="0"/>
        <pt x="518" y="369" on="1"/>
        <pt x="522" y="389" on="0"/>
        <pt x="525" y="428" on="0"/>
        <pt x="525" y="447" on="1"/>
        <pt x="525" y="488" on="0"/>
        <pt x="498" y="563" on="0"/>
        <pt x="473" y="594" on="1"/>
        <pt x="324" y="491" on="1"/>
        <pt x="298" y="530" on="1"/>
        <pt x="439" y="627" on="1"/>
        <pt x="414" y="647" on="0"/>
        <pt x="352" y="675" on="0"/>
        <pt x="315" y="684" on="1"/>
        <pt x="338" y="725" on="1"/>
        <pt x="381" y="715" on="0"/>
        <pt x="455" y="682" on="0"/>
      </contour>
      <contour>
        <pt x="345" y="376" on="1"/>
        <pt x="246" y="376" on="0"/>
        <pt x="116" y="248" on="0"/>
        <pt x="116" y="157" on="1"/>
        <pt x="116" y="100" on="0"/>
        <pt x="183" y="35" on="0"/>
        <pt x="242" y="35" on="1"/>
        <pt x="283" y="35" on="0"/>
        <pt x="365" y="73" on="0"/>
        <pt x="400" y="108" on="1"/>
        <pt x="436" y="144" on="0"/>
        <pt x="492" y="255" on="0"/>
        <pt x="508" y="320" on="1"/>
        <pt x="464" y="350" on="0"/>
        <pt x="390" y="376" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 25 values pushed */
          2 1 1 49 21 21 37 37 0 3 30 27 29 28 6 18 18 12 34 1 114 43 12 11 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="exclam" xMin="189" yMin="-15" xMax="505" yMax="710">
      <contour>
        <pt x="323" y="227" on="1"/>
        <pt x="289" y="227" on="1"/>
        <pt x="386" y="710" on="1"/>
        <pt x="505" y="710" on="1"/>
      </contour>
      <contour>
        <pt x="189" y="30" on="1"/>
        <pt x="189" y="58" on="0"/>
        <pt x="229" y="93" on="0"/>
        <pt x="261" y="93" on="1"/>
        <pt x="286" y="93" on="0"/>
        <pt x="317" y="68" on="0"/>
        <pt x="317" y="48" on="1"/>
        <pt x="317" y="21" on="0"/>
        <pt x="277" y="-15" on="0"/>
        <pt x="245" y="-15" on="1"/>
        <pt x="219" y="-15" on="0"/>
        <pt x="189" y="10" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          1 7 7 13 11 114 2 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="exclamdown" xMin="181" yMin="0" xMax="497" yMax="725">
      <contour>
        <pt x="497" y="680" on="1"/>
        <pt x="497" y="652" on="0"/>
        <pt x="457" y="617" on="0"/>
        <pt x="425" y="617" on="1"/>
        <pt x="400" y="617" on="0"/>
        <pt x="369" y="642" on="0"/>
        <pt x="369" y="662" on="1"/>
        <pt x="369" y="689" on="0"/>
        <pt x="409" y="725" on="0"/>
        <pt x="441" y="725" on="1"/>
        <pt x="467" y="725" on="0"/>
        <pt x="497" y="700" on="0"/>
      </contour>
      <contour>
        <pt x="363" y="483" on="1"/>
        <pt x="397" y="483" on="1"/>
        <pt x="300" y="0" on="1"/>
        <pt x="181" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          15 10 114 12 3 3 9 1 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="f" xMin="128" yMin="0" xMax="667" yMax="719">
      <contour>
        <pt x="289" y="410" on="1"/>
        <pt x="128" y="410" on="1"/>
        <pt x="142" y="460" on="1"/>
        <pt x="303" y="460" on="1"/>
        <pt x="325" y="537" on="1"/>
        <pt x="351" y="630" on="0"/>
        <pt x="448" y="704" on="0"/>
        <pt x="551" y="711" on="1"/>
        <pt x="667" y="719" on="1"/>
        <pt x="667" y="667" on="1"/>
        <pt x="543" y="659" on="1"/>
        <pt x="473" y="655" on="0"/>
        <pt x="402" y="600" on="0"/>
        <pt x="383" y="534" on="1"/>
        <pt x="362" y="460" on="1"/>
        <pt x="569" y="460" on="1"/>
        <pt x="555" y="410" on="1"/>
        <pt x="348" y="410" on="1"/>
        <pt x="230" y="0" on="1"/>
        <pt x="171" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          19 10 114 1 17 17 2 14 6 114 9 10 10 8 7 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="five" xMin="32" yMin="-10" xMax="614" yMax="655">
      <contour>
        <pt x="372" y="420" on="1"/>
        <pt x="448" y="420" on="0"/>
        <pt x="538" y="341" on="0"/>
        <pt x="538" y="272" on="1"/>
        <pt x="538" y="157" on="0"/>
        <pt x="352" y="17" on="0"/>
        <pt x="179" y="2" on="1"/>
        <pt x="32" y="-10" on="1"/>
        <pt x="42" y="42" on="1"/>
        <pt x="164" y="53" on="1"/>
        <pt x="313" y="66" on="0"/>
        <pt x="473" y="180" on="0"/>
        <pt x="473" y="270" on="1"/>
        <pt x="473" y="315" on="0"/>
        <pt x="412" y="368" on="0"/>
        <pt x="361" y="368" on="1"/>
        <pt x="320" y="368" on="0"/>
        <pt x="232" y="340" on="0"/>
        <pt x="172" y="307" on="1"/>
        <pt x="133" y="311" on="1"/>
        <pt x="132" y="316" on="1"/>
        <pt x="256" y="655" on="1"/>
        <pt x="614" y="655" on="1"/>
        <pt x="599" y="604" on="1"/>
        <pt x="295" y="604" on="1"/>
        <pt x="208" y="374" on="1"/>
        <pt x="250" y="397" on="0"/>
        <pt x="332" y="420" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          19 18 18 25 15 15 0 0 6 24 21 4 114 8 9 9 7 6 12 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="five.den" xMin="106" yMin="-9" xMax="472" yMax="380">
      <contour>
        <pt x="164" y="179" on="1"/>
        <pt x="236" y="380" on="1"/>
        <pt x="472" y="380" on="1"/>
        <pt x="459" y="338" on="1"/>
        <pt x="268" y="338" on="1"/>
        <pt x="224" y="220" on="1"/>
        <pt x="247" y="232" on="0"/>
        <pt x="296" y="244" on="0"/>
        <pt x="322" y="244" on="1"/>
        <pt x="370" y="244" on="0"/>
        <pt x="428" y="198" on="0"/>
        <pt x="428" y="158" on="1"/>
        <pt x="428" y="88" on="0"/>
        <pt x="311" y="6" on="0"/>
        <pt x="197" y="-2" on="1"/>
        <pt x="106" y="-9" on="1"/>
        <pt x="115" y="34" on="1"/>
        <pt x="196" y="41" on="1"/>
        <pt x="285" y="49" on="0"/>
        <pt x="375" y="105" on="0"/>
        <pt x="375" y="153" on="1"/>
        <pt x="375" y="176" on="0"/>
        <pt x="338" y="203" on="0"/>
        <pt x="307" y="203" on="1"/>
        <pt x="281" y="203" on="0"/>
        <pt x="228" y="187" on="0"/>
        <pt x="198" y="171" on="1"/>
        <pt x="165" y="176" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          0 27 26 26 23 23 5 8 8 1 16 15 187 114 4 1 184 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="five.inf" xMin="41" yMin="-239" xMax="407" yMax="150">
      <component glyphName="five.den" x="-65" y="-230" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="five.num" xMin="184" yMin="266" xMax="550" yMax="655">
      <component glyphName="five.den" x="78" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="five.sup" xMin="200" yMin="321" xMax="566" yMax="710">
      <component glyphName="five.den" x="94" y="330" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="fiveeighths" xMin="0" yMin="-244" xMax="614" yMax="655">
      <component glyphName="eight.den" x="124" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
      <component glyphName="five.den" x="-66" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="fivesixths" xMin="0" yMin="-245" xMax="614" yMax="655">
      <component glyphName="five.den" x="-66" y="275" flags="0x4"/>
      <component glyphName="six.den" x="94" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="four" xMin="46" yMin="0" xMax="582" yMax="655">
      <contour>
        <pt x="365" y="186" on="1"/>
        <pt x="46" y="186" on="1"/>
        <pt x="60" y="233" on="1"/>
        <pt x="494" y="655" on="1"/>
        <pt x="582" y="655" on="1"/>
        <pt x="444" y="237" on="1"/>
        <pt x="580" y="237" on="1"/>
        <pt x="565" y="186" on="1"/>
        <pt x="427" y="186" on="1"/>
        <pt x="366" y="0" on="1"/>
        <pt x="303" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="385" y="235" on="1"/>
        <pt x="506" y="604" on="1"/>
        <pt x="129" y="238" on="1"/>
        <pt x="129" y="235" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          11 13 2 3 5 5 1 12 8 8 3 9 12 114 3 4 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="four.den" xMin="114" yMin="0" xMax="454" yMax="380">
      <contour>
        <pt x="309" y="102" on="1"/>
        <pt x="114" y="102" on="1"/>
        <pt x="125" y="138" on="1"/>
        <pt x="384" y="380" on="1"/>
        <pt x="452" y="380" on="1"/>
        <pt x="373" y="143" on="1"/>
        <pt x="454" y="143" on="1"/>
        <pt x="442" y="102" on="1"/>
        <pt x="359" y="102" on="1"/>
        <pt x="325" y="0" on="1"/>
        <pt x="275" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="324" y="139" on="1"/>
        <pt x="394" y="344" on="1"/>
        <pt x="177" y="142" on="1"/>
        <pt x="177" y="139" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          5 13 2 11 11 8 0 0 3 10 185 114 12 3 184 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="four.inf" xMin="49" yMin="-230" xMax="389" yMax="150">
      <component glyphName="four.den" x="-65" y="-230" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="four.num" xMin="192" yMin="275" xMax="532" yMax="655">
      <component glyphName="four.den" x="78" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="four.sup" xMin="208" yMin="330" xMax="548" yMax="710">
      <component glyphName="four.den" x="94" y="330" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="fourfifths" xMin="0" yMin="-239" xMax="614" yMax="655">
      <component glyphName="four.den" x="-67" y="275" flags="0x4"/>
      <component glyphName="five.den" x="134" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="fracbar" xMin="0" yMin="-62" xMax="614" yMax="468">
      <contour>
        <pt x="614" y="417" on="1"/>
        <pt x="317" y="192" on="1"/>
        <pt x="39" y="-62" on="1"/>
        <pt x="0" y="-11" on="1"/>
        <pt x="299" y="214" on="1"/>
        <pt x="575" y="468" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          4 1 2 0 5 3 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="fraction" xMin="0" yMin="-2" xMax="614" yMax="657">
      <contour>
        <pt x="285" y="338" on="1"/>
        <pt x="545" y="657" on="1"/>
        <pt x="614" y="657" on="1"/>
        <pt x="325" y="315" on="1"/>
        <pt x="69" y="-2" on="1"/>
        <pt x="0" y="-2" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          5 12 114 2 4 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="g" xMin="17" yMin="-239" xMax="570" yMax="468">
      <contour>
        <pt x="397" y="29" on="1"/>
        <pt x="424" y="124" on="1"/>
        <pt x="367" y="67" on="0"/>
        <pt x="268" y="16" on="0"/>
        <pt x="214" y="16" on="1"/>
        <pt x="142" y="16" on="0"/>
        <pt x="54" y="108" on="0"/>
        <pt x="54" y="184" on="1"/>
        <pt x="54" y="306" on="0"/>
        <pt x="245" y="468" on="0"/>
        <pt x="395" y="468" on="1"/>
        <pt x="437" y="468" on="0"/>
        <pt x="525" y="447" on="0"/>
        <pt x="570" y="426" on="1"/>
        <pt x="458" y="32" on="1"/>
        <pt x="434" y="-51" on="0"/>
        <pt x="385" y="-145" on="0"/>
        <pt x="352" y="-172" on="1"/>
        <pt x="319" y="-199" on="0"/>
        <pt x="219" y="-227" on="0"/>
        <pt x="132" y="-232" on="1"/>
        <pt x="17" y="-239" on="1"/>
        <pt x="17" y="-188" on="1"/>
        <pt x="126" y="-182" on="1"/>
        <pt x="256" y="-175" on="0"/>
        <pt x="362" y="-91" on="0"/>
      </contour>
      <contour>
        <pt x="399" y="418" on="1"/>
        <pt x="272" y="418" on="0"/>
        <pt x="116" y="283" on="0"/>
        <pt x="116" y="187" on="1"/>
        <pt x="116" y="133" on="0"/>
        <pt x="174" y="66" on="0"/>
        <pt x="220" y="66" on="1"/>
        <pt x="273" y="66" on="0"/>
        <pt x="368" y="122" on="0"/>
        <pt x="444" y="193" on="1"/>
        <pt x="503" y="398" on="1"/>
        <pt x="478" y="408" on="0"/>
        <pt x="427" y="418" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          35 1 32 32 4 4 10 22 21 15 114 13 36 36 26 26 10 7 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="gbreve" xMin="17" yMin="-239" xMax="630" yMax="730">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 46 10 1 1 68 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="gcaron" xMin="17" yMin="-239" xMax="629" yMax="741">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 39 10 1 1 68 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="gcircumflex" xMin="17" yMin="-239" xMax="581" yMax="736">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="305" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 39 10 1 1 63 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="gdotaccent" xMin="17" yMin="-239" xMax="570" yMax="659">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 42 10 1 1 88 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="germandbls" xMin="31" yMin="-6" xMax="618" yMax="725">
      <contour>
        <pt x="264" y="45" on="1"/>
        <pt x="360" y="52" on="1"/>
        <pt x="419" y="56" on="0"/>
        <pt x="477" y="111" on="0"/>
        <pt x="477" y="162" on="1"/>
        <pt x="477" y="197" on="0"/>
        <pt x="414" y="286" on="0"/>
        <pt x="343" y="351" on="1"/>
        <pt x="349" y="374" on="1"/>
        <pt x="391" y="404" on="0"/>
        <pt x="453" y="452" on="0"/>
        <pt x="475" y="471" on="1"/>
        <pt x="520" y="509" on="0"/>
        <pt x="555" y="563" on="0"/>
        <pt x="555" y="600" on="1"/>
        <pt x="555" y="635" on="0"/>
        <pt x="502" y="674" on="0"/>
        <pt x="455" y="674" on="1"/>
        <pt x="374" y="674" on="0"/>
        <pt x="254" y="572" on="0"/>
        <pt x="228" y="482" on="1"/>
        <pt x="90" y="0" on="1"/>
        <pt x="31" y="0" on="1"/>
        <pt x="169" y="482" on="1"/>
        <pt x="203" y="601" on="0"/>
        <pt x="347" y="725" on="0"/>
        <pt x="452" y="725" on="1"/>
        <pt x="531" y="725" on="0"/>
        <pt x="618" y="659" on="0"/>
        <pt x="618" y="601" on="1"/>
        <pt x="618" y="560" on="0"/>
        <pt x="584" y="499" on="0"/>
        <pt x="544" y="462" on="1"/>
        <pt x="521" y="441" on="0"/>
        <pt x="456" y="392" on="0"/>
        <pt x="414" y="363" on="1"/>
        <pt x="481" y="298" on="0"/>
        <pt x="540" y="207" on="0"/>
        <pt x="540" y="165" on="1"/>
        <pt x="540" y="88" on="0"/>
        <pt x="446" y="7" on="0"/>
        <pt x="351" y="0" on="1"/>
        <pt x="264" y="-6" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          7 35 8 32 11 5 22 17 26 1 114 1 41 41 22 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="grave" xMin="295" yMin="426" xMax="493" yMax="710">
      <contour>
        <pt x="493" y="426" on="1"/>
        <pt x="435" y="426" on="1"/>
        <pt x="295" y="710" on="1"/>
        <pt x="395" y="710" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 2 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="greater" xMin="39" yMin="91" xMax="575" yMax="552">
      <contour>
        <pt x="575" y="349" on="1"/>
        <pt x="560" y="294" on="1"/>
        <pt x="39" y="91" on="1"/>
        <pt x="55" y="150" on="1"/>
        <pt x="518" y="326" on="1"/>
        <pt x="156" y="501" on="1"/>
        <pt x="171" y="552" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          0 4 1 3 5 6 3 223 2 1 144 2 1 127 2 1 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="greaterequal" xMin="27" yMin="0" xMax="583" yMax="670">
      <contour>
        <pt x="583" y="467" on="1"/>
        <pt x="568" y="412" on="1"/>
        <pt x="87" y="209" on="1"/>
        <pt x="103" y="268" on="1"/>
        <pt x="530" y="444" on="1"/>
        <pt x="204" y="619" on="1"/>
        <pt x="219" y="670" on="1"/>
      </contour>
      <contour>
        <pt x="465" y="51" on="1"/>
        <pt x="450" y="0" on="1"/>
        <pt x="27" y="0" on="1"/>
        <pt x="42" y="51" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          1 4 0 3 5 6 3 2 2 7 7 8
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="guilsinglleft" xMin="151" yMin="-15" xMax="504" yMax="471">
      <contour>
        <pt x="215" y="225" on="1"/>
        <pt x="382" y="41" on="1"/>
        <pt x="364" y="-15" on="1"/>
        <pt x="151" y="203" on="1"/>
        <pt x="165" y="254" on="1"/>
        <pt x="504" y="471" on="1"/>
        <pt x="485" y="402" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 0 4 3 6 5 1 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="guilsinglright" xMin="110" yMin="-15" xMax="463" yMax="471">
      <contour>
        <pt x="463" y="253" on="1"/>
        <pt x="449" y="202" on="1"/>
        <pt x="110" y="-15" on="1"/>
        <pt x="129" y="54" on="1"/>
        <pt x="399" y="231" on="1"/>
        <pt x="232" y="415" on="1"/>
        <pt x="250" y="471" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          1 4 0 3 5 6 3 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="h" xMin="37" yMin="0" xMax="546" yMax="710">
      <contour>
        <pt x="241" y="710" on="1"/>
        <pt x="300" y="710" on="1"/>
        <pt x="183" y="304" on="1"/>
        <pt x="274" y="397" on="0"/>
        <pt x="378" y="465" on="0"/>
        <pt x="437" y="465" on="1"/>
        <pt x="486" y="465" on="0"/>
        <pt x="546" y="412" on="0"/>
        <pt x="546" y="369" on="1"/>
        <pt x="546" y="357" on="0"/>
        <pt x="538" y="316" on="0"/>
        <pt x="529" y="284" on="1"/>
        <pt x="447" y="0" on="1"/>
        <pt x="388" y="0" on="1"/>
        <pt x="472" y="292" on="1"/>
        <pt x="479" y="316" on="0"/>
        <pt x="485" y="348" on="0"/>
        <pt x="485" y="360" on="1"/>
        <pt x="485" y="385" on="0"/>
        <pt x="452" y="413" on="0"/>
        <pt x="422" y="413" on="1"/>
        <pt x="376" y="413" on="0"/>
        <pt x="272" y="335" on="0"/>
        <pt x="159" y="221" on="1"/>
        <pt x="96" y="0" on="1"/>
        <pt x="37" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          13 25 10 114 23 2 2 20 20 5 7 114 0 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="hbar" xMin="54" yMin="0" xMax="535" yMax="710">
      <contour>
        <pt x="480" y="583" on="1"/>
        <pt x="466" y="535" on="1"/>
        <pt x="267" y="535" on="1"/>
        <pt x="190" y="269" on="1"/>
        <pt x="281" y="362" on="0"/>
        <pt x="380" y="428" on="0"/>
        <pt x="436" y="428" on="1"/>
        <pt x="480" y="428" on="0"/>
        <pt x="535" y="375" on="0"/>
        <pt x="535" y="332" on="1"/>
        <pt x="535" y="320" on="0"/>
        <pt x="527" y="279" on="0"/>
        <pt x="518" y="247" on="1"/>
        <pt x="448" y="0" on="1"/>
        <pt x="389" y="0" on="1"/>
        <pt x="461" y="255" on="1"/>
        <pt x="468" y="281" on="0"/>
        <pt x="474" y="311" on="0"/>
        <pt x="474" y="323" on="1"/>
        <pt x="474" y="348" on="0"/>
        <pt x="446" y="376" on="0"/>
        <pt x="421" y="376" on="1"/>
        <pt x="378" y="376" on="0"/>
        <pt x="282" y="303" on="0"/>
        <pt x="166" y="186" on="1"/>
        <pt x="113" y="0" on="1"/>
        <pt x="54" y="0" on="1"/>
        <pt x="208" y="535" on="1"/>
        <pt x="121" y="535" on="1"/>
        <pt x="135" y="583" on="1"/>
        <pt x="222" y="583" on="1"/>
        <pt x="258" y="710" on="1"/>
        <pt x="317" y="710" on="1"/>
        <pt x="281" y="583" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          24 3 3 21 21 6 30 33 33 27 2 6 6 26 31 0 114 14 26 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="hcircumflex" xMin="37" yMin="0" xMax="546" yMax="948">
      <component glyphName="h" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="193" y="207" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 26 0 1 1 38 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="hungarumlaut" xMin="248" yMin="536" xMax="651" yMax="735">
      <component glyphName="uni030B" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="hyphen" xMin="140" yMin="299" xMax="530" yMax="354">
      <contour>
        <pt x="140" y="299" on="1"/>
        <pt x="156" y="354" on="1"/>
        <pt x="530" y="354" on="1"/>
        <pt x="514" y="299" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          1 0 188
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="i" xMin="57" yMin="0" xMax="478" yMax="721">
      <contour>
        <pt x="478" y="675" on="1"/>
        <pt x="478" y="649" on="0"/>
        <pt x="438" y="614" on="0"/>
        <pt x="408" y="614" on="1"/>
        <pt x="382" y="614" on="0"/>
        <pt x="351" y="639" on="0"/>
        <pt x="351" y="661" on="1"/>
        <pt x="351" y="686" on="0"/>
        <pt x="391" y="721" on="0"/>
        <pt x="421" y="721" on="1"/>
        <pt x="449" y="721" on="0"/>
        <pt x="478" y="697" on="0"/>
      </contour>
      <contour>
        <pt x="57" y="0" on="1"/>
        <pt x="71" y="50" on="1"/>
        <pt x="232" y="50" on="1"/>
        <pt x="354" y="410" on="1"/>
        <pt x="195" y="410" on="1"/>
        <pt x="209" y="460" on="1"/>
        <pt x="430" y="460" on="1"/>
        <pt x="291" y="50" on="1"/>
        <pt x="470" y="50" on="1"/>
        <pt x="456" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          9 3 16 17 6 114 19 13 13 12 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[00110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="i.dot" xMin="57" yMin="0" xMax="482" yMax="659">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307" x="317" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 13 5 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="iacute" xMin="57" yMin="0" xMax="607" yMax="741">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="317" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 10 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ibreve" xMin="57" yMin="0" xMax="641" yMax="730">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306" x="317" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 17 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="icircumflex" xMin="57" yMin="0" xMax="593" yMax="741">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="317" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 10 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="idieresis" xMin="57" yMin="0" xMax="597" yMax="655">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308" x="317" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 13 5 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="igrave" xMin="57" yMin="0" xMax="489" yMax="734">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300" x="317" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="imacron" xMin="57" yMin="0" xMax="595" yMax="626">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304" x="317" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 11 5 1 1 116 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="iogonek" xMin="57" yMin="-235" xMax="478" yMax="721">
      <contour>
        <pt x="478" y="675" on="1"/>
        <pt x="478" y="649" on="0"/>
        <pt x="438" y="614" on="0"/>
        <pt x="408" y="614" on="1"/>
        <pt x="382" y="614" on="0"/>
        <pt x="351" y="639" on="0"/>
        <pt x="351" y="661" on="1"/>
        <pt x="351" y="686" on="0"/>
        <pt x="391" y="721" on="0"/>
        <pt x="421" y="721" on="1"/>
        <pt x="449" y="721" on="0"/>
        <pt x="478" y="697" on="0"/>
      </contour>
      <contour>
        <pt x="57" y="0" on="1"/>
        <pt x="71" y="50" on="1"/>
        <pt x="232" y="50" on="1"/>
        <pt x="354" y="410" on="1"/>
        <pt x="195" y="410" on="1"/>
        <pt x="209" y="460" on="1"/>
        <pt x="430" y="460" on="1"/>
        <pt x="291" y="50" on="1"/>
        <pt x="470" y="50" on="1"/>
        <pt x="456" y="0" on="1"/>
        <pt x="275" y="0" on="1"/>
        <pt x="219" y="-57" on="0"/>
        <pt x="167" y="-131" on="0"/>
        <pt x="167" y="-158" on="1"/>
        <pt x="167" y="-173" on="0"/>
        <pt x="192" y="-186" on="0"/>
        <pt x="223" y="-188" on="1"/>
        <pt x="288" y="-192" on="1"/>
        <pt x="272" y="-235" on="1"/>
        <pt x="197" y="-231" on="1"/>
        <pt x="147" y="-228" on="0"/>
        <pt x="105" y="-201" on="0"/>
        <pt x="105" y="-170" on="1"/>
        <pt x="105" y="-136" on="0"/>
        <pt x="162" y="-64" on="0"/>
        <pt x="234" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          29 31 19 14 14 22 37 10 114 9 3 16 17 6 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="itilde" xMin="57" yMin="0" xMax="650" yMax="726">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303" x="317" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 10 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="j" xMin="-32" yMin="-239" xMax="531" yMax="721">
      <contour>
        <pt x="531" y="675" on="1"/>
        <pt x="531" y="649" on="0"/>
        <pt x="491" y="614" on="0"/>
        <pt x="461" y="614" on="1"/>
        <pt x="435" y="614" on="0"/>
        <pt x="404" y="639" on="0"/>
        <pt x="404" y="661" on="1"/>
        <pt x="404" y="686" on="0"/>
        <pt x="444" y="721" on="0"/>
        <pt x="474" y="721" on="1"/>
        <pt x="502" y="721" on="0"/>
        <pt x="531" y="697" on="0"/>
      </contour>
      <contour>
        <pt x="464" y="460" on="1"/>
        <pt x="334" y="8" on="1"/>
        <pt x="310" y="-76" on="0"/>
        <pt x="268" y="-157" on="0"/>
        <pt x="240" y="-180" on="1"/>
        <pt x="210" y="-203" on="0"/>
        <pt x="117" y="-228" on="0"/>
        <pt x="36" y="-234" on="1"/>
        <pt x="-32" y="-239" on="1"/>
        <pt x="-32" y="-188" on="1"/>
        <pt x="33" y="-184" on="1"/>
        <pt x="95" y="-180" on="0"/>
        <pt x="173" y="-159" on="0"/>
        <pt x="198" y="-138" on="1"/>
        <pt x="223" y="-119" on="0"/>
        <pt x="259" y="-51" on="0"/>
        <pt x="277" y="13" on="1"/>
        <pt x="391" y="410" on="1"/>
        <pt x="180" y="410" on="1"/>
        <pt x="194" y="460" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          9 3 30 31 6 114 20 15 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[00110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="jcircumflex" xMin="-32" yMin="-239" xMax="643" yMax="741">
      <component glyphName="uni0237" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="367" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 20 19 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="k" xMin="58" yMin="0" xMax="599" yMax="710">
      <contour>
        <pt x="262" y="710" on="1"/>
        <pt x="321" y="710" on="1"/>
        <pt x="190" y="256" on="1"/>
        <pt x="509" y="460" on="1"/>
        <pt x="599" y="460" on="1"/>
        <pt x="599" y="458" on="1"/>
        <pt x="254" y="237" on="1"/>
        <pt x="470" y="2" on="1"/>
        <pt x="470" y="0" on="1"/>
        <pt x="396" y="0" on="1"/>
        <pt x="183" y="230" on="1"/>
        <pt x="117" y="0" on="1"/>
        <pt x="58" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          10 6 2 3 3 9 12 10 114 3 6 114 0 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="l" xMin="187" yMin="-7" xMax="468" yMax="710">
      <contour>
        <pt x="206" y="119" on="1"/>
        <pt x="206" y="145" on="0"/>
        <pt x="219" y="203" on="0"/>
        <pt x="234" y="244" on="1"/>
        <pt x="386" y="660" on="1"/>
        <pt x="187" y="660" on="1"/>
        <pt x="202" y="710" on="1"/>
        <pt x="463" y="710" on="1"/>
        <pt x="291" y="236" on="1"/>
        <pt x="278" y="200" on="0"/>
        <pt x="267" y="151" on="0"/>
        <pt x="267" y="127" on="1"/>
        <pt x="267" y="86" on="0"/>
        <pt x="306" y="50" on="0"/>
        <pt x="352" y="48" on="1"/>
        <pt x="468" y="44" on="1"/>
        <pt x="453" y="-7" on="1"/>
        <pt x="345" y="-4" on="1"/>
        <pt x="274" y="-2" on="0"/>
        <pt x="206" y="59" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          15 16 11 114 5 6 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="lacute" xMin="187" yMin="-7" xMax="634" yMax="991">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="344" y="250" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 20 6 1 1 81 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="lcaron" xMin="187" yMin="-7" xMax="703" yMax="787">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0315" x="495" y="77" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 22 6 1 1 78 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ldot" xMin="187" yMin="-7" xMax="706" yMax="710">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="middotcat" x="312" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="less" xMin="92" yMin="91" xMax="628" yMax="552">
      <contour>
        <pt x="92" y="294" on="1"/>
        <pt x="107" y="349" on="1"/>
        <pt x="628" y="552" on="1"/>
        <pt x="612" y="493" on="1"/>
        <pt x="149" y="317" on="1"/>
        <pt x="511" y="142" on="1"/>
        <pt x="496" y="91" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          0 4 1 3 3 2 5 223 6 1 144 6 1 127 6 1 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="lessequal" xMin="27" yMin="0" xMax="641" yMax="670">
      <contour>
        <pt x="145" y="412" on="1"/>
        <pt x="160" y="467" on="1"/>
        <pt x="641" y="670" on="1"/>
        <pt x="625" y="611" on="1"/>
        <pt x="198" y="435" on="1"/>
        <pt x="524" y="260" on="1"/>
        <pt x="509" y="209" on="1"/>
      </contour>
      <contour>
        <pt x="450" y="0" on="1"/>
        <pt x="27" y="0" on="1"/>
        <pt x="42" y="51" on="1"/>
        <pt x="465" y="51" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          0 4 1 3 3 2 5 6 6 10 10 7
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="lslash" xMin="99" yMin="-7" xMax="537" yMax="710">
      <contour>
        <pt x="267" y="335" on="1"/>
        <pt x="99" y="262" on="1"/>
        <pt x="115" y="317" on="1"/>
        <pt x="288" y="392" on="1"/>
        <pt x="386" y="660" on="1"/>
        <pt x="187" y="660" on="1"/>
        <pt x="202" y="710" on="1"/>
        <pt x="463" y="710" on="1"/>
        <pt x="355" y="413" on="1"/>
        <pt x="537" y="492" on="1"/>
        <pt x="521" y="437" on="1"/>
        <pt x="334" y="356" on="1"/>
        <pt x="291" y="236" on="1"/>
        <pt x="278" y="200" on="0"/>
        <pt x="267" y="151" on="0"/>
        <pt x="267" y="127" on="1"/>
        <pt x="267" y="86" on="0"/>
        <pt x="306" y="50" on="0"/>
        <pt x="352" y="48" on="1"/>
        <pt x="468" y="44" on="1"/>
        <pt x="453" y="-7" on="1"/>
        <pt x="345" y="-4" on="1"/>
        <pt x="274" y="-2" on="0"/>
        <pt x="206" y="59" on="0"/>
        <pt x="206" y="119" on="1"/>
        <pt x="206" y="145" on="0"/>
        <pt x="219" y="203" on="0"/>
        <pt x="234" y="244" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          1 2 0 11 3 8 10 9 8 6 19 20 11 114 5 6 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="m" xMin="-8" yMin="0" xMax="602" yMax="465">
      <contour>
        <pt x="124" y="460" on="1"/>
        <pt x="173" y="460" on="1"/>
        <pt x="142" y="325" on="1"/>
        <pt x="144" y="325" on="1"/>
        <pt x="196" y="397" on="0"/>
        <pt x="278" y="465" on="0"/>
        <pt x="315" y="465" on="1"/>
        <pt x="346" y="465" on="0"/>
        <pt x="382" y="431" on="0"/>
        <pt x="382" y="403" on="1"/>
        <pt x="382" y="396" on="0"/>
        <pt x="380" y="382" on="0"/>
        <pt x="377" y="372" on="1"/>
        <pt x="365" y="330" on="1"/>
        <pt x="367" y="330" on="1"/>
        <pt x="420" y="401" on="0"/>
        <pt x="499" y="465" on="0"/>
        <pt x="535" y="465" on="1"/>
        <pt x="566" y="465" on="0"/>
        <pt x="602" y="431" on="0"/>
        <pt x="602" y="403" on="1"/>
        <pt x="602" y="396" on="0"/>
        <pt x="600" y="382" on="0"/>
        <pt x="597" y="372" on="1"/>
        <pt x="490" y="0" on="1"/>
        <pt x="432" y="0" on="1"/>
        <pt x="533" y="354" on="1"/>
        <pt x="538" y="371" on="0"/>
        <pt x="541" y="386" on="0"/>
        <pt x="541" y="391" on="1"/>
        <pt x="541" y="403" on="0"/>
        <pt x="528" y="415" on="0"/>
        <pt x="515" y="415" on="1"/>
        <pt x="491" y="415" on="0"/>
        <pt x="414" y="339" on="0"/>
        <pt x="342" y="249" on="1"/>
        <pt x="270" y="0" on="1"/>
        <pt x="212" y="0" on="1"/>
        <pt x="313" y="354" on="1"/>
        <pt x="318" y="371" on="0"/>
        <pt x="321" y="386" on="0"/>
        <pt x="321" y="391" on="1"/>
        <pt x="321" y="403" on="0"/>
        <pt x="308" y="415" on="0"/>
        <pt x="295" y="415" on="1"/>
        <pt x="271" y="415" on="0"/>
        <pt x="194" y="339" on="0"/>
        <pt x="121" y="249" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="-8" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 23 values pushed */
          37 25 49 10 114 47 3 3 44 44 35 14 14 32 32 17 17 6 7 114 0 6 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="macron" xMin="242" yMin="576" xMax="585" yMax="626">
      <component glyphName="uni0304" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="middotcat" xMin="244" yMin="288" xMax="394" yMax="425">
      <contour>
        <pt x="394" y="376" on="1"/>
        <pt x="394" y="338" on="0"/>
        <pt x="345" y="288" on="0"/>
        <pt x="307" y="288" on="1"/>
        <pt x="277" y="288" on="0"/>
        <pt x="244" y="314" on="0"/>
        <pt x="244" y="337" on="1"/>
        <pt x="244" y="374" on="0"/>
        <pt x="295" y="425" on="0"/>
        <pt x="332" y="425" on="1"/>
        <pt x="362" y="425" on="0"/>
        <pt x="394" y="399" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          9 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="middotcat.cap" xMin="194" yMin="288" xMax="344" yMax="425">
      <contour>
        <pt x="344" y="376" on="1"/>
        <pt x="344" y="338" on="0"/>
        <pt x="295" y="288" on="0"/>
        <pt x="257" y="288" on="1"/>
        <pt x="227" y="288" on="0"/>
        <pt x="194" y="314" on="0"/>
        <pt x="194" y="337" on="1"/>
        <pt x="194" y="374" on="0"/>
        <pt x="245" y="425" on="0"/>
        <pt x="282" y="425" on="1"/>
        <pt x="312" y="425" on="0"/>
        <pt x="344" y="399" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          9 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="minus" xMin="93" yMin="301" xMax="576" yMax="352">
      <contour>
        <pt x="561" y="301" on="1"/>
        <pt x="93" y="301" on="1"/>
        <pt x="108" y="352" on="1"/>
        <pt x="576" y="352" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          2 1 188
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="mu" xMin="-31" yMin="-230" xMax="577" yMax="460">
      <contour>
        <pt x="183" y="-6" on="1"/>
        <pt x="151" y="-6" on="0"/>
        <pt x="107" y="22" on="0"/>
        <pt x="98" y="48" on="1"/>
        <pt x="32" y="-217" on="1"/>
        <pt x="28" y="-230" on="1"/>
        <pt x="-31" y="-230" on="1"/>
        <pt x="167" y="460" on="1"/>
        <pt x="226" y="460" on="1"/>
        <pt x="136" y="147" on="1"/>
        <pt x="132" y="135" on="0"/>
        <pt x="129" y="113" on="0"/>
        <pt x="129" y="103" on="1"/>
        <pt x="129" y="75" on="0"/>
        <pt x="164" y="47" on="0"/>
        <pt x="200" y="47" on="1"/>
        <pt x="242" y="47" on="0"/>
        <pt x="339" y="121" on="0"/>
        <pt x="455" y="239" on="1"/>
        <pt x="518" y="460" on="1"/>
        <pt x="577" y="460" on="1"/>
        <pt x="445" y="0" on="1"/>
        <pt x="386" y="0" on="1"/>
        <pt x="431" y="156" on="1"/>
        <pt x="336" y="59" on="0"/>
        <pt x="239" y="-6" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          22 10 114 19 7 6 114 5 14 114 18 23 23 15 15 3 0 11 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="multiply" xMin="85" yMin="117" xMax="583" yMax="529">
      <contour>
        <pt x="327" y="288" on="1"/>
        <pt x="115" y="123" on="1"/>
        <pt x="85" y="166" on="1"/>
        <pt x="297" y="331" on="1"/>
        <pt x="179" y="497" on="1"/>
        <pt x="225" y="528" on="1"/>
        <pt x="340" y="365" on="1"/>
        <pt x="550" y="529" on="1"/>
        <pt x="583" y="488" on="1"/>
        <pt x="371" y="323" on="1"/>
        <pt x="494" y="151" on="1"/>
        <pt x="449" y="117" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 23 values pushed */
          10 2 0 9 3 6 8 4 8 11 7 5 5 1 80 11 96 11 2 63 11 1 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="n" xMin="37" yMin="0" xMax="546" yMax="465">
      <contour>
        <pt x="169" y="460" on="1"/>
        <pt x="228" y="460" on="1"/>
        <pt x="183" y="304" on="1"/>
        <pt x="275" y="398" on="0"/>
        <pt x="377" y="465" on="0"/>
        <pt x="437" y="465" on="1"/>
        <pt x="486" y="465" on="0"/>
        <pt x="546" y="412" on="0"/>
        <pt x="546" y="369" on="1"/>
        <pt x="546" y="357" on="0"/>
        <pt x="538" y="316" on="0"/>
        <pt x="529" y="284" on="1"/>
        <pt x="447" y="0" on="1"/>
        <pt x="388" y="0" on="1"/>
        <pt x="472" y="292" on="1"/>
        <pt x="479" y="316" on="0"/>
        <pt x="485" y="348" on="0"/>
        <pt x="485" y="360" on="1"/>
        <pt x="485" y="385" on="0"/>
        <pt x="452" y="413" on="0"/>
        <pt x="422" y="413" on="1"/>
        <pt x="376" y="413" on="0"/>
        <pt x="272" y="334" on="0"/>
        <pt x="159" y="220" on="1"/>
        <pt x="96" y="0" on="1"/>
        <pt x="37" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          23 2 2 20 20 5 7 114 13 25 10 114 0 6 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="nacute" xMin="37" yMin="0" xMax="595" yMax="741">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="305" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 26 5 1 1 69 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ncaron" xMin="37" yMin="0" xMax="628" yMax="741">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C" x="305" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 26 5 1 1 69 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="nine" xMin="112" yMin="-1" xMax="603" yMax="669">
      <contour>
        <pt x="112" y="1" on="1"/>
        <pt x="287" y="124" on="1"/>
        <pt x="324" y="150" on="0"/>
        <pt x="386" y="200" on="0"/>
        <pt x="411" y="224" on="1"/>
        <pt x="277" y="230" on="0"/>
        <pt x="144" y="320" on="0"/>
        <pt x="144" y="405" on="1"/>
        <pt x="144" y="507" on="0"/>
        <pt x="314" y="669" on="0"/>
        <pt x="424" y="669" on="1"/>
        <pt x="507" y="669" on="0"/>
        <pt x="603" y="574" on="0"/>
        <pt x="603" y="489" on="1"/>
        <pt x="603" y="390" on="0"/>
        <pt x="468" y="194" on="0"/>
        <pt x="332" y="97" on="1"/>
        <pt x="195" y="-1" on="1"/>
        <pt x="112" y="-1" on="1"/>
      </contour>
      <contour>
        <pt x="423" y="618" on="1"/>
        <pt x="338" y="618" on="0"/>
        <pt x="204" y="485" on="0"/>
        <pt x="204" y="407" on="1"/>
        <pt x="204" y="336" on="0"/>
        <pt x="316" y="270" on="0"/>
        <pt x="448" y="263" on="1"/>
        <pt x="496" y="318" on="0"/>
        <pt x="543" y="430" on="0"/>
        <pt x="543" y="492" on="1"/>
        <pt x="543" y="551" on="0"/>
        <pt x="479" y="618" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 13 values pushed */
          16 1 4 25 4 0 19 10 5 114 0 12 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="nine.den" xMin="151" yMin="0" xMax="459" yMax="395">
      <contour>
        <pt x="151" y="1" on="1"/>
        <pt x="251" y="77" on="1"/>
        <pt x="271" y="92" on="0"/>
        <pt x="304" y="120" on="0"/>
        <pt x="318" y="132" on="1"/>
        <pt x="239" y="140" on="0"/>
        <pt x="165" y="193" on="0"/>
        <pt x="165" y="241" on="1"/>
        <pt x="165" y="302" on="0"/>
        <pt x="267" y="395" on="0"/>
        <pt x="338" y="395" on="1"/>
        <pt x="395" y="395" on="0"/>
        <pt x="459" y="339" on="0"/>
        <pt x="459" y="288" on="1"/>
        <pt x="459" y="235" on="0"/>
        <pt x="383" y="129" on="0"/>
        <pt x="295" y="60" on="1"/>
        <pt x="218" y="0" on="1"/>
        <pt x="151" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="335" y="353" on="1"/>
        <pt x="287" y="353" on="0"/>
        <pt x="215" y="286" on="0"/>
        <pt x="215" y="244" on="1"/>
        <pt x="215" y="207" on="0"/>
        <pt x="276" y="170" on="0"/>
        <pt x="349" y="163" on="1"/>
        <pt x="380" y="196" on="0"/>
        <pt x="409" y="255" on="0"/>
        <pt x="409" y="286" on="1"/>
        <pt x="409" y="318" on="0"/>
        <pt x="370" y="353" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          16 1 4 25 7 22 28 13 8 10 17 185 19 10 186
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="nine.inf" xMin="86" yMin="-230" xMax="394" yMax="165">
      <component glyphName="nine.den" x="-65" y="-230" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="nine.num" xMin="229" yMin="275" xMax="537" yMax="670">
      <component glyphName="nine.den" x="78" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="nine.sup" xMin="245" yMin="330" xMax="553" yMax="725">
      <component glyphName="nine.den" x="94" y="330" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="notequal" xMin="81" yMin="73" xMax="610" yMax="596">
      <contour>
        <pt x="204" y="209" on="1"/>
        <pt x="82" y="209" on="1"/>
        <pt x="97" y="261" on="1"/>
        <pt x="251" y="261" on="1"/>
        <pt x="321" y="338" on="1"/>
        <pt x="368" y="392" on="1"/>
        <pt x="134" y="392" on="1"/>
        <pt x="149" y="443" on="1"/>
        <pt x="413" y="443" on="1"/>
        <pt x="546" y="596" on="1"/>
        <pt x="610" y="596" on="1"/>
        <pt x="472" y="443" on="1"/>
        <pt x="587" y="443" on="1"/>
        <pt x="572" y="392" on="1"/>
        <pt x="426" y="392" on="1"/>
        <pt x="376" y="337" on="1"/>
        <pt x="310" y="261" on="1"/>
        <pt x="535" y="261" on="1"/>
        <pt x="520" y="209" on="1"/>
        <pt x="264" y="209" on="1"/>
        <pt x="145" y="73" on="1"/>
        <pt x="81" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 35 values pushed */
          11 7 64 9 1 9 9 7 7 6 21 21 19 1 1 16 128 2 144 2 2 2 64 12 15
          72 2 14 0 6 1 96 6 1 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ntilde" xMin="37" yMin="0" xMax="638" yMax="726">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303" x="305" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 26 5 1 1 69 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="numbersign" xMin="45" yMin="-12" xMax="624" yMax="666">
      <contour>
        <pt x="155" y="186" on="1"/>
        <pt x="45" y="186" on="1"/>
        <pt x="45" y="236" on="1"/>
        <pt x="176" y="236" on="1"/>
        <pt x="252" y="424" on="1"/>
        <pt x="126" y="424" on="1"/>
        <pt x="126" y="475" on="1"/>
        <pt x="273" y="475" on="1"/>
        <pt x="350" y="666" on="1"/>
        <pt x="401" y="666" on="1"/>
        <pt x="322" y="471" on="1"/>
        <pt x="464" y="471" on="1"/>
        <pt x="544" y="666" on="1"/>
        <pt x="595" y="666" on="1"/>
        <pt x="518" y="475" on="1"/>
        <pt x="624" y="475" on="1"/>
        <pt x="624" y="424" on="1"/>
        <pt x="497" y="424" on="1"/>
        <pt x="421" y="236" on="1"/>
        <pt x="544" y="236" on="1"/>
        <pt x="544" y="186" on="1"/>
        <pt x="400" y="186" on="1"/>
        <pt x="320" y="-12" on="1"/>
        <pt x="268" y="-12" on="1"/>
        <pt x="351" y="190" on="1"/>
        <pt x="207" y="190" on="1"/>
        <pt x="125" y="-12" on="1"/>
        <pt x="75" y="-12" on="1"/>
      </contour>
      <contour>
        <pt x="224" y="232" on="1"/>
        <pt x="368" y="232" on="1"/>
        <pt x="447" y="428" on="1"/>
        <pt x="304" y="428" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 23 values pushed */
          14 10 10 7 7 4 25 21 0 0 28 18 3 31 17 4 4 23 27 12 8 3 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="o" xMin="58" yMin="-15" xMax="556" yMax="475">
      <contour>
        <pt x="58" y="187" on="1"/>
        <pt x="58" y="243" on="0"/>
        <pt x="105" y="351" on="0"/>
        <pt x="147" y="392" on="1"/>
        <pt x="189" y="432" on="0"/>
        <pt x="296" y="475" on="0"/>
        <pt x="356" y="475" on="1"/>
        <pt x="446" y="475" on="0"/>
        <pt x="556" y="362" on="0"/>
        <pt x="556" y="273" on="1"/>
        <pt x="556" y="217" on="0"/>
        <pt x="509" y="109" on="0"/>
        <pt x="467" y="68" on="1"/>
        <pt x="425" y="28" on="0"/>
        <pt x="318" y="-15" on="0"/>
        <pt x="258" y="-15" on="1"/>
        <pt x="168" y="-15" on="0"/>
        <pt x="58" y="98" on="0"/>
      </contour>
      <contour>
        <pt x="118" y="185" on="1"/>
        <pt x="118" y="119" on="0"/>
        <pt x="200" y="34" on="0"/>
        <pt x="263" y="34" on="1"/>
        <pt x="356" y="34" on="0"/>
        <pt x="496" y="179" on="0"/>
        <pt x="496" y="275" on="1"/>
        <pt x="496" y="341" on="0"/>
        <pt x="414" y="426" on="0"/>
        <pt x="351" y="426" on="1"/>
        <pt x="258" y="426" on="0"/>
        <pt x="118" y="281" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          21 15 11 114 27 6 7 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="oacute" xMin="58" yMin="-15" xMax="588" yMax="746">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 30 6 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="obreve" xMin="58" yMin="-15" xMax="622" yMax="735">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 37 6 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ocircumflex" xMin="58" yMin="-15" xMax="573" yMax="741">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="297" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 30 6 1 1 61 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="odieresis" xMin="58" yMin="-15" xMax="578" yMax="660">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 33 6 1 1 86 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="oe" xMin="14" yMin="-15" xMax="610" yMax="475">
      <contour>
        <pt x="276" y="94" on="1"/>
        <pt x="243" y="41" on="0"/>
        <pt x="162" y="-15" on="0"/>
        <pt x="118" y="-15" on="1"/>
        <pt x="69" y="-15" on="0"/>
        <pt x="14" y="60" on="0"/>
        <pt x="14" y="126" on="1"/>
        <pt x="14" y="205" on="0"/>
        <pt x="76" y="367" on="0"/>
        <pt x="127" y="418" on="1"/>
        <pt x="155" y="446" on="0"/>
        <pt x="217" y="475" on="0"/>
        <pt x="250" y="475" on="1"/>
        <pt x="293" y="475" on="0"/>
        <pt x="343" y="417" on="0"/>
        <pt x="347" y="362" on="1"/>
        <pt x="380" y="416" on="0"/>
        <pt x="464" y="475" on="0"/>
        <pt x="507" y="475" on="1"/>
        <pt x="555" y="475" on="0"/>
        <pt x="610" y="421" on="0"/>
        <pt x="610" y="374" on="1"/>
        <pt x="610" y="302" on="0"/>
        <pt x="479" y="231" on="0"/>
        <pt x="335" y="217" on="1"/>
        <pt x="330" y="200" on="0"/>
        <pt x="325" y="165" on="0"/>
        <pt x="325" y="148" on="1"/>
        <pt x="325" y="88" on="0"/>
        <pt x="389" y="44" on="0"/>
        <pt x="475" y="44" on="1"/>
        <pt x="459" y="-5" on="1"/>
        <pt x="370" y="-5" on="0"/>
        <pt x="287" y="40" on="0"/>
      </contour>
      <contour>
        <pt x="548" y="373" on="1"/>
        <pt x="548" y="398" on="0"/>
        <pt x="522" y="425" on="0"/>
        <pt x="498" y="425" on="1"/>
        <pt x="459" y="425" on="0"/>
        <pt x="376" y="332" on="0"/>
        <pt x="349" y="262" on="1"/>
        <pt x="448" y="273" on="0"/>
        <pt x="548" y="328" on="0"/>
      </contour>
      <contour>
        <pt x="175" y="388" on="1"/>
        <pt x="133" y="346" on="0"/>
        <pt x="75" y="192" on="0"/>
        <pt x="75" y="125" on="1"/>
        <pt x="75" y="82" on="0"/>
        <pt x="106" y="35" on="0"/>
        <pt x="134" y="35" on="1"/>
        <pt x="151" y="35" on="0"/>
        <pt x="185" y="52" on="0"/>
        <pt x="203" y="70" on="1"/>
        <pt x="246" y="113" on="0"/>
        <pt x="304" y="265" on="0"/>
        <pt x="304" y="333" on="1"/>
        <pt x="304" y="376" on="0"/>
        <pt x="274" y="425" on="0"/>
        <pt x="246" y="425" on="1"/>
        <pt x="229" y="425" on="0"/>
        <pt x="193" y="406" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 24 values pushed */
          30 31 10 114 40 24 24 3 37 18 7 114 15 58 58 12 7 114 0 49 49 3 11 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ogonek" xMin="90" yMin="-235" xMax="273" yMax="26">
      <component glyphName="uni0328" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ograve" xMin="58" yMin="-15" xMax="556" yMax="739">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 32 6 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ohorn" xMin="58" yMin="-15" xMax="664" yMax="572">
      <contour>
        <pt x="58" y="180" on="1"/>
        <pt x="58" y="235" on="0"/>
        <pt x="106" y="340" on="0"/>
        <pt x="150" y="380" on="1"/>
        <pt x="191" y="419" on="0"/>
        <pt x="298" y="460" on="0"/>
        <pt x="358" y="460" on="1"/>
        <pt x="474" y="460" on="1"/>
        <pt x="532" y="460" on="0"/>
        <pt x="582" y="501" on="0"/>
        <pt x="606" y="572" on="1"/>
        <pt x="664" y="572" on="1"/>
        <pt x="635" y="480" on="0"/>
        <pt x="568" y="418" on="0"/>
        <pt x="495" y="418" on="1"/>
        <pt x="491" y="418" on="0"/>
        <pt x="485" y="418" on="0"/>
        <pt x="481" y="418" on="1"/>
        <pt x="477" y="412" on="1"/>
        <pt x="517" y="381" on="0"/>
        <pt x="556" y="309" on="0"/>
        <pt x="556" y="266" on="1"/>
        <pt x="556" y="211" on="0"/>
        <pt x="509" y="105" on="0"/>
        <pt x="466" y="65" on="1"/>
        <pt x="424" y="26" on="0"/>
        <pt x="318" y="-15" on="0"/>
        <pt x="258" y="-15" on="1"/>
        <pt x="168" y="-15" on="0"/>
        <pt x="58" y="94" on="0"/>
      </contour>
      <contour>
        <pt x="118" y="178" on="1"/>
        <pt x="118" y="115" on="0"/>
        <pt x="200" y="34" on="0"/>
        <pt x="263" y="34" on="1"/>
        <pt x="356" y="34" on="0"/>
        <pt x="496" y="175" on="0"/>
        <pt x="496" y="268" on="1"/>
        <pt x="496" y="330" on="0"/>
        <pt x="415" y="411" on="0"/>
        <pt x="353" y="411" on="1"/>
        <pt x="259" y="411" on="0"/>
        <pt x="118" y="271" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          33 27 11 114 14 17 17 18 39 39 10 6 6 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ohungarumlaut" xMin="58" yMin="-15" xMax="642" yMax="740">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030B" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 30 6 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="omacron" xMin="58" yMin="-15" xMax="576" yMax="631">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 31 6 1 1 106 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="one" xMin="57" yMin="0" xMax="509" yMax="664">
      <contour>
        <pt x="460" y="0" on="1"/>
        <pt x="57" y="0" on="1"/>
        <pt x="72" y="51" on="1"/>
        <pt x="224" y="51" on="1"/>
        <pt x="419" y="578" on="1"/>
        <pt x="226" y="483" on="1"/>
        <pt x="245" y="546" on="1"/>
        <pt x="486" y="664" on="1"/>
        <pt x="509" y="664" on="1"/>
        <pt x="285" y="51" on="1"/>
        <pt x="475" y="51" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          5 6 6 4 4 7 5 114 9 2 2 1 12 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="one.den" xMin="121" yMin="0" xMax="403" yMax="380">
      <contour>
        <pt x="381" y="0" on="1"/>
        <pt x="121" y="0" on="1"/>
        <pt x="133" y="42" on="1"/>
        <pt x="231" y="42" on="1"/>
        <pt x="328" y="310" on="1"/>
        <pt x="211" y="258" on="1"/>
        <pt x="225" y="310" on="1"/>
        <pt x="384" y="380" on="1"/>
        <pt x="403" y="380" on="1"/>
        <pt x="281" y="42" on="1"/>
        <pt x="393" y="42" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          5 4 6 3 1 7 184 114 9 3 3 1 185 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="one.inf" xMin="56" yMin="-230" xMax="338" yMax="150">
      <component glyphName="one.den" x="-65" y="-230" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="one.num" xMin="199" yMin="275" xMax="481" yMax="655">
      <component glyphName="one.den" x="78" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="one.sup" xMin="215" yMin="330" xMax="497" yMax="710">
      <component glyphName="one.den" x="94" y="330" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="oneeighth" xMin="0" yMin="-244" xMax="614" yMax="655">
      <component glyphName="eight.den" x="124" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
      <component glyphName="one.den" x="-95" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="onefifth" xMin="0" yMin="-239" xMax="614" yMax="655">
      <component glyphName="five.den" x="134" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
      <component glyphName="one.den" x="-95" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="onehalf" xMin="0" yMin="-230" xMax="614" yMax="655">
      <component glyphName="one.den" x="-95" y="275" flags="0x4"/>
      <component glyphName="two.den" x="114" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="onequarter" xMin="0" yMin="-230" xMax="614" yMax="655">
      <component glyphName="four.den" x="84" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
      <component glyphName="one.den" x="-95" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="onesixth" xMin="0" yMin="-245" xMax="614" yMax="655">
      <component glyphName="six.den" x="94" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
      <component glyphName="one.den" x="-95" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="onethird" xMin="0" yMin="-240" xMax="628" yMax="655">
      <component glyphName="three.den" x="157" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
      <component glyphName="one.den" x="-95" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ordfeminine" xMin="114" yMin="187" xMax="553" yMax="692">
      <contour>
        <pt x="546" y="578" on="1"/>
        <pt x="492" y="409" on="1"/>
        <pt x="490" y="402" on="0"/>
        <pt x="488" y="391" on="0"/>
        <pt x="488" y="387" on="1"/>
        <pt x="488" y="379" on="0"/>
        <pt x="498" y="371" on="0"/>
        <pt x="514" y="368" on="1"/>
        <pt x="548" y="363" on="1"/>
        <pt x="537" y="327" on="1"/>
        <pt x="494" y="331" on="1"/>
        <pt x="467" y="334" on="0"/>
        <pt x="439" y="358" on="0"/>
        <pt x="435" y="384" on="1"/>
        <pt x="431" y="384" on="1"/>
        <pt x="376" y="352" on="0"/>
        <pt x="294" y="325" on="0"/>
        <pt x="251" y="325" on="1"/>
        <pt x="207" y="325" on="0"/>
        <pt x="162" y="360" on="0"/>
        <pt x="162" y="395" on="1"/>
        <pt x="162" y="423" on="0"/>
        <pt x="181" y="473" on="0"/>
        <pt x="199" y="491" on="1"/>
        <pt x="219" y="511" on="0"/>
        <pt x="290" y="530" on="0"/>
        <pt x="367" y="537" on="1"/>
        <pt x="485" y="547" on="1"/>
        <pt x="498" y="591" on="0"/>
        <pt x="500" y="602" on="0"/>
        <pt x="500" y="607" on="1"/>
        <pt x="500" y="629" on="0"/>
        <pt x="455" y="648" on="0"/>
        <pt x="405" y="648" on="1"/>
        <pt x="376" y="648" on="0"/>
        <pt x="295" y="640" on="0"/>
        <pt x="253" y="632" on="1"/>
        <pt x="266" y="679" on="1"/>
        <pt x="314" y="686" on="0"/>
        <pt x="382" y="692" on="0"/>
        <pt x="419" y="692" on="1"/>
        <pt x="486" y="692" on="0"/>
        <pt x="553" y="655" on="0"/>
        <pt x="553" y="617" on="1"/>
        <pt x="553" y="608" on="0"/>
        <pt x="550" y="589" on="0"/>
      </contour>
      <contour>
        <pt x="216" y="408" on="1"/>
        <pt x="216" y="387" on="0"/>
        <pt x="241" y="370" on="0"/>
        <pt x="269" y="370" on="1"/>
        <pt x="312" y="370" on="0"/>
        <pt x="402" y="399" on="0"/>
        <pt x="448" y="428" on="1"/>
        <pt x="473" y="508" on="1"/>
        <pt x="375" y="499" on="1"/>
        <pt x="305" y="492" on="0"/>
        <pt x="250" y="479" on="0"/>
        <pt x="240" y="469" on="1"/>
        <pt x="230" y="459" on="0"/>
        <pt x="216" y="424" on="0"/>
      </contour>
      <contour>
        <pt x="114" y="187" on="1"/>
        <pt x="127" y="234" on="1"/>
        <pt x="506" y="234" on="1"/>
        <pt x="493" y="187" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          60 61 52 13 49 49 54 53 26 27 4 9 0 17 1 17 33 40 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[11100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ordmasculine" xMin="114" yMin="187" xMax="582" yMax="692">
      <contour>
        <pt x="192" y="471" on="1"/>
        <pt x="192" y="562" on="0"/>
        <pt x="327" y="692" on="0"/>
        <pt x="417" y="692" on="1"/>
        <pt x="490" y="692" on="0"/>
        <pt x="582" y="610" on="0"/>
        <pt x="582" y="543" on="1"/>
        <pt x="582" y="452" on="0"/>
        <pt x="447" y="322" on="0"/>
        <pt x="357" y="322" on="1"/>
        <pt x="284" y="322" on="0"/>
        <pt x="192" y="404" on="0"/>
      </contour>
      <contour>
        <pt x="242" y="474" on="1"/>
        <pt x="242" y="426" on="0"/>
        <pt x="304" y="367" on="0"/>
        <pt x="357" y="367" on="1"/>
        <pt x="426" y="367" on="0"/>
        <pt x="532" y="469" on="0"/>
        <pt x="532" y="540" on="1"/>
        <pt x="532" y="588" on="0"/>
        <pt x="470" y="647" on="0"/>
        <pt x="417" y="647" on="1"/>
        <pt x="348" y="647" on="0"/>
        <pt x="242" y="545" on="0"/>
      </contour>
      <contour>
        <pt x="114" y="187" on="1"/>
        <pt x="127" y="234" on="1"/>
        <pt x="492" y="234" on="1"/>
        <pt x="479" y="187" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          24 25 15 9 21 3 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[11100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="oslash" xMin="-43" yMin="-71" xMax="657" yMax="531">
      <contour>
        <pt x="147" y="392" on="1"/>
        <pt x="189" y="432" on="0"/>
        <pt x="296" y="475" on="0"/>
        <pt x="356" y="475" on="1"/>
        <pt x="393" y="475" on="0"/>
        <pt x="458" y="453" on="0"/>
        <pt x="484" y="432" on="1"/>
        <pt x="582" y="531" on="1"/>
        <pt x="657" y="531" on="1"/>
        <pt x="516" y="398" on="1"/>
        <pt x="535" y="372" on="0"/>
        <pt x="556" y="308" on="0"/>
        <pt x="556" y="273" on="1"/>
        <pt x="556" y="217" on="0"/>
        <pt x="509" y="109" on="0"/>
        <pt x="467" y="68" on="1"/>
        <pt x="425" y="28" on="0"/>
        <pt x="318" y="-15" on="0"/>
        <pt x="258" y="-15" on="1"/>
        <pt x="220" y="-15" on="0"/>
        <pt x="156" y="7" on="0"/>
        <pt x="129" y="29" on="1"/>
        <pt x="32" y="-71" on="1"/>
        <pt x="-43" y="-71" on="1"/>
        <pt x="98" y="62" on="1"/>
        <pt x="78" y="88" on="0"/>
        <pt x="58" y="152" on="0"/>
        <pt x="58" y="187" on="1"/>
        <pt x="58" y="243" on="0"/>
        <pt x="105" y="351" on="0"/>
      </contour>
      <contour>
        <pt x="351" y="426" on="1"/>
        <pt x="258" y="426" on="0"/>
        <pt x="118" y="281" on="0"/>
        <pt x="118" y="185" on="1"/>
        <pt x="118" y="162" on="0"/>
        <pt x="129" y="120" on="0"/>
        <pt x="140" y="102" on="1"/>
        <pt x="443" y="394" on="1"/>
        <pt x="424" y="410" on="0"/>
        <pt x="377" y="426" on="0"/>
      </contour>
      <contour>
        <pt x="263" y="34" on="1"/>
        <pt x="356" y="34" on="0"/>
        <pt x="496" y="179" on="0"/>
        <pt x="496" y="275" on="1"/>
        <pt x="496" y="298" on="0"/>
        <pt x="485" y="340" on="0"/>
        <pt x="474" y="359" on="1"/>
        <pt x="170" y="67" on="1"/>
        <pt x="189" y="51" on="0"/>
        <pt x="237" y="34" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          6 9 37 46 36 47 24 21 8 3 40 22 18 11 114 30 7 3 7 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="otilde" xMin="58" yMin="-15" xMax="631" yMax="731">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 30 6 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="p" xMin="-32" yMin="-230" xMax="557" yMax="468">
      <contour>
        <pt x="27" y="-230" on="1"/>
        <pt x="-32" y="-230" on="1"/>
        <pt x="166" y="460" on="1"/>
        <pt x="215" y="460" on="1"/>
        <pt x="195" y="363" on="1"/>
        <pt x="251" y="419" on="0"/>
        <pt x="344" y="468" on="0"/>
        <pt x="394" y="468" on="1"/>
        <pt x="470" y="468" on="0"/>
        <pt x="557" y="378" on="0"/>
        <pt x="557" y="300" on="1"/>
        <pt x="557" y="167" on="0"/>
        <pt x="370" y="-8" on="0"/>
        <pt x="221" y="-8" on="1"/>
        <pt x="189" y="-8" on="0"/>
        <pt x="127" y="4" on="0"/>
        <pt x="97" y="16" on="1"/>
      </contour>
      <contour>
        <pt x="495" y="297" on="1"/>
        <pt x="495" y="351" on="0"/>
        <pt x="435" y="418" on="0"/>
        <pt x="388" y="418" on="1"/>
        <pt x="339" y="418" on="0"/>
        <pt x="251" y="365" on="0"/>
        <pt x="178" y="297" on="1"/>
        <pt x="112" y="66" on="1"/>
        <pt x="135" y="54" on="0"/>
        <pt x="190" y="42" on="0"/>
        <pt x="222" y="42" on="1"/>
        <pt x="344" y="42" on="0"/>
        <pt x="495" y="191" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          24 27 27 16 13 11 114 23 4 4 20 20 7 7 114 2 6 114 1 14 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="paragraph" xMin="150" yMin="0" xMax="631" yMax="655">
      <contour>
        <pt x="453" y="609" on="1"/>
        <pt x="363" y="298" on="1"/>
        <pt x="359" y="298" on="1"/>
        <pt x="255" y="298" on="0"/>
        <pt x="150" y="366" on="0"/>
        <pt x="150" y="433" on="1"/>
        <pt x="150" y="540" on="0"/>
        <pt x="296" y="655" on="0"/>
        <pt x="433" y="655" on="1"/>
        <pt x="631" y="655" on="1"/>
        <pt x="443" y="0" on="1"/>
        <pt x="385" y="0" on="1"/>
        <pt x="560" y="609" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          11 8 114 1 0 8 3 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="parenleft" xMin="136" yMin="-145" xMax="661" yMax="803">
      <contour>
        <pt x="136" y="228" on="1"/>
        <pt x="136" y="396" on="0"/>
        <pt x="390" y="689" on="0"/>
        <pt x="636" y="803" on="1"/>
        <pt x="661" y="760" on="1"/>
        <pt x="432" y="647" on="0"/>
        <pt x="198" y="378" on="0"/>
        <pt x="198" y="228" on="1"/>
        <pt x="198" y="135" on="0"/>
        <pt x="305" y="-28" on="0"/>
        <pt x="414" y="-102" on="1"/>
        <pt x="381" y="-145" on="1"/>
        <pt x="259" y="-67" on="0"/>
        <pt x="136" y="121" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          3 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="parenright" xMin="10" yMin="-145" xMax="535" yMax="803">
      <contour>
        <pt x="535" y="430" on="1"/>
        <pt x="535" y="262" on="0"/>
        <pt x="281" y="-31" on="0"/>
        <pt x="35" y="-145" on="1"/>
        <pt x="10" y="-102" on="1"/>
        <pt x="239" y="11" on="0"/>
        <pt x="473" y="280" on="0"/>
        <pt x="473" y="430" on="1"/>
        <pt x="473" y="523" on="0"/>
        <pt x="366" y="686" on="0"/>
        <pt x="257" y="760" on="1"/>
        <pt x="290" y="803" on="1"/>
        <pt x="412" y="725" on="0"/>
        <pt x="535" y="537" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          11 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="percent" xMin="-45" yMin="-15" xMax="715" yMax="670">
      <contour>
        <pt x="413" y="560" on="1"/>
        <pt x="413" y="460" on="0"/>
        <pt x="305" y="317" on="0"/>
        <pt x="225" y="317" on="1"/>
        <pt x="170" y="317" on="0"/>
        <pt x="113" y="373" on="0"/>
        <pt x="113" y="427" on="1"/>
        <pt x="113" y="527" on="0"/>
        <pt x="221" y="670" on="0"/>
        <pt x="301" y="670" on="1"/>
        <pt x="356" y="670" on="0"/>
        <pt x="413" y="614" on="0"/>
      </contour>
      <contour>
        <pt x="714" y="654" on="1"/>
        <pt x="429" y="376" on="1"/>
        <pt x="394" y="376" on="1"/>
        <pt x="618" y="660" on="1"/>
        <pt x="715" y="660" on="1"/>
      </contour>
      <contour>
        <pt x="360" y="560" on="1"/>
        <pt x="360" y="592" on="0"/>
        <pt x="329" y="623" on="0"/>
        <pt x="297" y="623" on="1"/>
        <pt x="243" y="623" on="0"/>
        <pt x="166" y="500" on="0"/>
        <pt x="166" y="427" on="1"/>
        <pt x="166" y="395" on="0"/>
        <pt x="197" y="364" on="0"/>
        <pt x="229" y="364" on="1"/>
        <pt x="283" y="364" on="0"/>
        <pt x="360" y="487" on="0"/>
      </contour>
      <contour>
        <pt x="556" y="228" on="1"/>
        <pt x="556" y="128" on="0"/>
        <pt x="448" y="-15" on="0"/>
        <pt x="368" y="-15" on="1"/>
        <pt x="313" y="-15" on="0"/>
        <pt x="256" y="41" on="0"/>
        <pt x="256" y="95" on="1"/>
        <pt x="256" y="195" on="0"/>
        <pt x="364" y="338" on="0"/>
        <pt x="444" y="338" on="1"/>
        <pt x="499" y="338" on="0"/>
        <pt x="556" y="282" on="0"/>
      </contour>
      <contour>
        <pt x="-44" y="1" on="1"/>
        <pt x="241" y="279" on="1"/>
        <pt x="276" y="279" on="1"/>
        <pt x="52" y="-5" on="1"/>
        <pt x="-45" y="-5" on="1"/>
      </contour>
      <contour>
        <pt x="503" y="228" on="1"/>
        <pt x="503" y="260" on="0"/>
        <pt x="472" y="291" on="0"/>
        <pt x="440" y="291" on="1"/>
        <pt x="386" y="291" on="0"/>
        <pt x="309" y="168" on="0"/>
        <pt x="309" y="95" on="1"/>
        <pt x="309" y="63" on="0"/>
        <pt x="340" y="32" on="0"/>
        <pt x="372" y="32" on="1"/>
        <pt x="426" y="32" on="0"/>
        <pt x="503" y="155" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          44 12 114 49 13 38 55 32 13 114 15 4 114 42 26 3 20 9 5 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="period" xMin="185" yMin="-15" xMax="335" yMax="122">
      <contour>
        <pt x="335" y="64" on="1"/>
        <pt x="335" y="29" on="0"/>
        <pt x="289" y="-15" on="0"/>
        <pt x="251" y="-15" on="1"/>
        <pt x="220" y="-15" on="0"/>
        <pt x="185" y="16" on="0"/>
        <pt x="185" y="42" on="1"/>
        <pt x="185" y="78" on="0"/>
        <pt x="231" y="122" on="0"/>
        <pt x="270" y="122" on="1"/>
        <pt x="299" y="122" on="0"/>
        <pt x="335" y="90" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          9 3 11 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="periodcentered" xMin="266" yMin="267" xMax="416" yMax="404">
      <component glyphName="period" x="81" y="282" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="plus" xMin="93" yMin="90" xMax="576" yMax="561">
      <contour>
        <pt x="297" y="301" on="1"/>
        <pt x="93" y="301" on="1"/>
        <pt x="108" y="352" on="1"/>
        <pt x="312" y="352" on="1"/>
        <pt x="372" y="561" on="1"/>
        <pt x="431" y="561" on="1"/>
        <pt x="371" y="352" on="1"/>
        <pt x="576" y="352" on="1"/>
        <pt x="561" y="301" on="1"/>
        <pt x="356" y="301" on="1"/>
        <pt x="295" y="90" on="1"/>
        <pt x="236" y="90" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 28 values pushed */
          6 2 0 4 16 4 2 79 4 143 4 2 61 4 1 15 4 1 4 4 2 2 1 11 11
          9 1 188
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="plusminus" xMin="7" yMin="0" xMax="609" yMax="655">
      <contour>
        <pt x="330" y="415" on="1"/>
        <pt x="126" y="415" on="1"/>
        <pt x="141" y="466" on="1"/>
        <pt x="345" y="466" on="1"/>
        <pt x="399" y="655" on="1"/>
        <pt x="458" y="655" on="1"/>
        <pt x="404" y="466" on="1"/>
        <pt x="609" y="466" on="1"/>
        <pt x="594" y="415" on="1"/>
        <pt x="389" y="415" on="1"/>
        <pt x="334" y="224" on="1"/>
        <pt x="275" y="224" on="1"/>
      </contour>
      <contour>
        <pt x="490" y="51" on="1"/>
        <pt x="475" y="0" on="1"/>
        <pt x="7" y="0" on="1"/>
        <pt x="22" y="51" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 13 values pushed */
          5 5 3 6 6 0 9 9 10 10 12 12 13
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="q" xMin="56" yMin="-230" xMax="570" yMax="468">
      <contour>
        <pt x="382" y="-230" on="1"/>
        <pt x="323" y="-230" on="1"/>
        <pt x="416" y="93" on="1"/>
        <pt x="360" y="39" on="0"/>
        <pt x="265" y="-8" on="0"/>
        <pt x="212" y="-8" on="1"/>
        <pt x="142" y="-8" on="0"/>
        <pt x="56" y="84" on="0"/>
        <pt x="56" y="160" on="1"/>
        <pt x="56" y="293" on="0"/>
        <pt x="246" y="468" on="0"/>
        <pt x="396" y="468" on="1"/>
        <pt x="438" y="468" on="0"/>
        <pt x="525" y="447" on="0"/>
        <pt x="570" y="426" on="1"/>
      </contour>
      <contour>
        <pt x="399" y="418" on="1"/>
        <pt x="273" y="418" on="0"/>
        <pt x="118" y="269" on="0"/>
        <pt x="118" y="163" on="1"/>
        <pt x="118" y="109" on="0"/>
        <pt x="174" y="42" on="0"/>
        <pt x="218" y="42" on="1"/>
        <pt x="270" y="42" on="0"/>
        <pt x="363" y="96" on="0"/>
        <pt x="436" y="163" on="1"/>
        <pt x="503" y="398" on="1"/>
        <pt x="478" y="408" on="0"/>
        <pt x="427" y="418" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          14 25 25 15 15 11 7 114 2 24 24 21 21 5 11 114 1 14 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="question" xMin="125" yMin="-15" xMax="628" yMax="725">
      <contour>
        <pt x="253" y="227" on="1"/>
        <pt x="217" y="227" on="1"/>
        <pt x="223" y="268" on="0"/>
        <pt x="232" y="317" on="0"/>
        <pt x="235" y="328" on="1"/>
        <pt x="239" y="344" on="0"/>
        <pt x="261" y="362" on="0"/>
        <pt x="292" y="374" on="1"/>
        <pt x="425" y="425" on="1"/>
        <pt x="497" y="453" on="0"/>
        <pt x="564" y="523" on="0"/>
        <pt x="564" y="573" on="1"/>
        <pt x="564" y="621" on="0"/>
        <pt x="505" y="674" on="0"/>
        <pt x="452" y="674" on="1"/>
        <pt x="402" y="674" on="0"/>
        <pt x="301" y="632" on="0"/>
        <pt x="203" y="573" on="1"/>
        <pt x="176" y="618" on="1"/>
        <pt x="275" y="680" on="0"/>
        <pt x="392" y="725" on="0"/>
        <pt x="460" y="725" on="1"/>
        <pt x="534" y="725" on="0"/>
        <pt x="628" y="645" on="0"/>
        <pt x="628" y="582" on="1"/>
        <pt x="628" y="507" on="0"/>
        <pt x="540" y="412" on="0"/>
        <pt x="436" y="371" on="1"/>
        <pt x="321" y="326" on="1"/>
        <pt x="296" y="316" on="0"/>
        <pt x="274" y="282" on="0"/>
      </contour>
      <contour>
        <pt x="125" y="30" on="1"/>
        <pt x="125" y="58" on="0"/>
        <pt x="165" y="93" on="0"/>
        <pt x="197" y="93" on="1"/>
        <pt x="222" y="93" on="0"/>
        <pt x="253" y="68" on="0"/>
        <pt x="253" y="48" on="1"/>
        <pt x="253" y="20" on="0"/>
        <pt x="213" y="-15" on="0"/>
        <pt x="181" y="-15" on="1"/>
        <pt x="155" y="-15" on="0"/>
        <pt x="125" y="10" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          1 1 34 34 40 11 114 14 21 1 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="questiondown" xMin="64" yMin="-15" xMax="567" yMax="725">
      <contour>
        <pt x="567" y="680" on="1"/>
        <pt x="567" y="652" on="0"/>
        <pt x="527" y="617" on="0"/>
        <pt x="495" y="617" on="1"/>
        <pt x="470" y="617" on="0"/>
        <pt x="439" y="642" on="0"/>
        <pt x="439" y="662" on="1"/>
        <pt x="439" y="690" on="0"/>
        <pt x="479" y="725" on="0"/>
        <pt x="511" y="725" on="1"/>
        <pt x="537" y="725" on="0"/>
        <pt x="567" y="700" on="0"/>
      </contour>
      <contour>
        <pt x="439" y="483" on="1"/>
        <pt x="475" y="483" on="1"/>
        <pt x="469" y="442" on="0"/>
        <pt x="460" y="393" on="0"/>
        <pt x="457" y="382" on="1"/>
        <pt x="453" y="366" on="0"/>
        <pt x="431" y="348" on="0"/>
        <pt x="400" y="336" on="1"/>
        <pt x="267" y="285" on="1"/>
        <pt x="195" y="257" on="0"/>
        <pt x="128" y="187" on="0"/>
        <pt x="128" y="137" on="1"/>
        <pt x="128" y="89" on="0"/>
        <pt x="187" y="36" on="0"/>
        <pt x="240" y="36" on="1"/>
        <pt x="290" y="36" on="0"/>
        <pt x="391" y="78" on="0"/>
        <pt x="489" y="137" on="1"/>
        <pt x="516" y="92" on="1"/>
        <pt x="417" y="30" on="0"/>
        <pt x="300" y="-15" on="0"/>
        <pt x="232" y="-15" on="1"/>
        <pt x="158" y="-15" on="0"/>
        <pt x="64" y="65" on="0"/>
        <pt x="64" y="128" on="1"/>
        <pt x="64" y="203" on="0"/>
        <pt x="152" y="298" on="0"/>
        <pt x="256" y="339" on="1"/>
        <pt x="371" y="384" on="1"/>
        <pt x="396" y="394" on="0"/>
        <pt x="418" y="428" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          20 19 39 40 4 13 26 33 11 114 13 3 3 9 1 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotedbl" xMin="203" yMin="426" xMax="610" yMax="710">
      <contour>
        <pt x="449" y="426" on="1"/>
        <pt x="507" y="426" on="1"/>
        <pt x="610" y="710" on="1"/>
        <pt x="510" y="710" on="1"/>
      </contour>
      <contour>
        <pt x="203" y="426" on="1"/>
        <pt x="261" y="426" on="1"/>
        <pt x="364" y="710" on="1"/>
        <pt x="264" y="710" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          1 48 4 1 4 2 6 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotedblbase" xMin="-35" yMin="-144" xMax="486" yMax="120">
      <component glyphName="quotedblright" x="-168" y="-590" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="quotedblleft" xMin="160" yMin="446" xMax="681" yMax="710">
      <contour>
        <pt x="373" y="710" on="1"/>
        <pt x="436" y="710" on="1"/>
        <pt x="435" y="708" on="1"/>
        <pt x="351" y="620" on="0"/>
        <pt x="294" y="536" on="0"/>
        <pt x="260" y="446" on="1"/>
        <pt x="160" y="446" on="1"/>
        <pt x="198" y="546" on="0"/>
        <pt x="269" y="633" on="0"/>
      </contour>
      <contour>
        <pt x="618" y="710" on="1"/>
        <pt x="681" y="710" on="1"/>
        <pt x="680" y="708" on="1"/>
        <pt x="596" y="620" on="0"/>
        <pt x="539" y="536" on="0"/>
        <pt x="505" y="446" on="1"/>
        <pt x="405" y="446" on="1"/>
        <pt x="443" y="546" on="0"/>
        <pt x="514" y="633" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          15 5 9 0 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotedblright" xMin="133" yMin="446" xMax="654" yMax="710">
      <contour>
        <pt x="441" y="446" on="1"/>
        <pt x="378" y="446" on="1"/>
        <pt x="378" y="448" on="1"/>
        <pt x="464" y="538" on="0"/>
        <pt x="521" y="622" on="0"/>
        <pt x="554" y="710" on="1"/>
        <pt x="654" y="710" on="1"/>
        <pt x="616" y="612" on="0"/>
        <pt x="545" y="524" on="0"/>
      </contour>
      <contour>
        <pt x="196" y="446" on="1"/>
        <pt x="133" y="446" on="1"/>
        <pt x="133" y="448" on="1"/>
        <pt x="219" y="538" on="0"/>
        <pt x="276" y="622" on="0"/>
        <pt x="309" y="710" on="1"/>
        <pt x="409" y="710" on="1"/>
        <pt x="371" y="612" on="0"/>
        <pt x="300" y="524" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          0 9 5 14 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quoteleft" xMin="289" yMin="456" xMax="560" yMax="710">
      <contour>
        <pt x="497" y="710" on="1"/>
        <pt x="560" y="710" on="1"/>
        <pt x="559" y="708" on="1"/>
        <pt x="480" y="634" on="0"/>
        <pt x="404" y="524" on="0"/>
        <pt x="385" y="456" on="1"/>
        <pt x="289" y="456" on="1"/>
        <pt x="312" y="538" on="0"/>
        <pt x="398" y="643" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          6 0 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quoteright" xMin="257" yMin="456" xMax="528" yMax="710">
      <contour>
        <pt x="320" y="456" on="1"/>
        <pt x="257" y="456" on="1"/>
        <pt x="257" y="458" on="1"/>
        <pt x="335" y="531" on="0"/>
        <pt x="411" y="641" on="0"/>
        <pt x="432" y="710" on="1"/>
        <pt x="528" y="710" on="1"/>
        <pt x="505" y="628" on="0"/>
        <pt x="419" y="523" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          0 5 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotesinglbase" xMin="89" yMin="-134" xMax="360" yMax="120">
      <component glyphName="quoteright" x="-168" y="-590" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="quotesingle" xMin="326" yMin="426" xMax="487" yMax="710">
      <contour>
        <pt x="326" y="426" on="1"/>
        <pt x="384" y="426" on="1"/>
        <pt x="487" y="710" on="1"/>
        <pt x="387" y="710" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          48 1 1 1 2 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="r" xMin="-13" yMin="0" xMax="593" yMax="463">
      <contour>
        <pt x="-13" y="0" on="1"/>
        <pt x="2" y="50" on="1"/>
        <pt x="131" y="50" on="1"/>
        <pt x="235" y="410" on="1"/>
        <pt x="125" y="410" on="1"/>
        <pt x="139" y="460" on="1"/>
        <pt x="303" y="460" on="1"/>
        <pt x="257" y="286" on="1"/>
        <pt x="362" y="396" on="0"/>
        <pt x="450" y="454" on="0"/>
        <pt x="524" y="459" on="1"/>
        <pt x="593" y="463" on="1"/>
        <pt x="593" y="403" on="1"/>
        <pt x="513" y="396" on="1"/>
        <pt x="485" y="393" on="0"/>
        <pt x="445" y="386" on="0"/>
        <pt x="425" y="376" on="1"/>
        <pt x="393" y="360" on="0"/>
        <pt x="287" y="265" on="0"/>
        <pt x="239" y="219" on="1"/>
        <pt x="190" y="50" on="1"/>
        <pt x="351" y="50" on="1"/>
        <pt x="336" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          19 7 7 13 13 10 10 4 5 6 114 20 1 1 0 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="racute" xMin="-13" yMin="0" xMax="593" yMax="741">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="293" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 23 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="rcaron" xMin="-13" yMin="0" xMax="616" yMax="741">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C" x="293" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 23 5 1 1 72 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="registered" xMin="121" yMin="208" xMax="629" yMax="725">
      <contour>
        <pt x="629" y="537" on="1"/>
        <pt x="629" y="477" on="0"/>
        <pt x="582" y="356" on="0"/>
        <pt x="541" y="309" on="1"/>
        <pt x="498" y="260" on="0"/>
        <pt x="385" y="208" on="0"/>
        <pt x="320" y="208" on="1"/>
        <pt x="226" y="208" on="0"/>
        <pt x="121" y="307" on="0"/>
        <pt x="121" y="396" on="1"/>
        <pt x="121" y="456" on="0"/>
        <pt x="167" y="577" on="0"/>
        <pt x="208" y="624" on="1"/>
        <pt x="251" y="673" on="0"/>
        <pt x="363" y="725" on="0"/>
        <pt x="427" y="725" on="1"/>
        <pt x="523" y="725" on="0"/>
        <pt x="629" y="626" on="0"/>
      </contour>
      <contour>
        <pt x="588" y="536" on="1"/>
        <pt x="588" y="609" on="0"/>
        <pt x="504" y="689" on="0"/>
        <pt x="426" y="689" on="1"/>
        <pt x="371" y="689" on="0"/>
        <pt x="275" y="641" on="0"/>
        <pt x="237" y="596" on="1"/>
        <pt x="202" y="554" on="0"/>
        <pt x="162" y="447" on="0"/>
        <pt x="162" y="397" on="1"/>
        <pt x="162" y="324" on="0"/>
        <pt x="245" y="243" on="0"/>
        <pt x="320" y="243" on="1"/>
        <pt x="376" y="243" on="0"/>
        <pt x="473" y="290" on="0"/>
        <pt x="511" y="335" on="1"/>
        <pt x="547" y="378" on="0"/>
        <pt x="588" y="485" on="0"/>
      </contour>
      <contour>
        <pt x="430" y="416" on="1"/>
        <pt x="472" y="345" on="1"/>
        <pt x="472" y="343" on="1"/>
        <pt x="421" y="343" on="1"/>
        <pt x="381" y="412" on="1"/>
        <pt x="366" y="438" on="0"/>
        <pt x="344" y="453" on="0"/>
        <pt x="323" y="454" on="1"/>
        <pt x="291" y="343" on="1"/>
        <pt x="249" y="343" on="1"/>
        <pt x="324" y="604" on="1"/>
        <pt x="436" y="604" on="1"/>
        <pt x="473" y="604" on="0"/>
        <pt x="515" y="571" on="0"/>
        <pt x="515" y="542" on="1"/>
        <pt x="515" y="503" on="0"/>
        <pt x="455" y="462" on="0"/>
        <pt x="393" y="458" on="1"/>
        <pt x="393" y="456" on="1"/>
        <pt x="404" y="450" on="0"/>
        <pt x="419" y="434" on="0"/>
      </contour>
      <contour>
        <pt x="471" y="535" on="1"/>
        <pt x="471" y="550" on="0"/>
        <pt x="447" y="567" on="0"/>
        <pt x="424" y="567" on="1"/>
        <pt x="355" y="567" on="1"/>
        <pt x="331" y="483" on="1"/>
        <pt x="365" y="484" on="1"/>
        <pt x="419" y="485" on="0"/>
        <pt x="471" y="510" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          39 61 63 62 53 43 4 46 45 46 45 46 6 21 15 1 114 30 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ring" xMin="286" yMin="536" xMax="572" yMax="772">
      <component glyphName="uni030A" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="s" xMin="46" yMin="-9" xMax="554" yMax="468">
      <contour>
        <pt x="480" y="118" on="1"/>
        <pt x="480" y="56" on="0"/>
        <pt x="380" y="-9" on="0"/>
        <pt x="283" y="-9" on="1"/>
        <pt x="226" y="-9" on="0"/>
        <pt x="119" y="7" on="0"/>
        <pt x="46" y="26" on="1"/>
        <pt x="63" y="79" on="1"/>
        <pt x="121" y="60" on="0"/>
        <pt x="231" y="42" on="0"/>
        <pt x="286" y="42" on="1"/>
        <pt x="352" y="42" on="0"/>
        <pt x="420" y="78" on="0"/>
        <pt x="420" y="112" on="1"/>
        <pt x="420" y="138" on="0"/>
        <pt x="387" y="171" on="0"/>
        <pt x="343" y="192" on="1"/>
        <pt x="277" y="223" on="1"/>
        <pt x="207" y="256" on="0"/>
        <pt x="151" y="311" on="0"/>
        <pt x="151" y="352" on="1"/>
        <pt x="151" y="409" on="0"/>
        <pt x="247" y="468" on="0"/>
        <pt x="340" y="468" on="1"/>
        <pt x="384" y="468" on="0"/>
        <pt x="501" y="450" on="0"/>
        <pt x="554" y="435" on="1"/>
        <pt x="539" y="383" on="1"/>
        <pt x="487" y="400" on="0"/>
        <pt x="386" y="417" on="0"/>
        <pt x="340" y="417" on="1"/>
        <pt x="275" y="417" on="0"/>
        <pt x="211" y="388" on="0"/>
        <pt x="211" y="358" on="1"/>
        <pt x="211" y="333" on="0"/>
        <pt x="242" y="303" on="0"/>
        <pt x="289" y="280" on="1"/>
        <pt x="355" y="248" on="1"/>
        <pt x="433" y="210" on="0"/>
        <pt x="480" y="161" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          13 0 16 17 37 36 20 33 8 3 30 23 7 114 10 3 11 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="sacute" xMin="46" yMin="-9" xMax="616" yMax="746">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="326" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 40 23 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="scaron" xMin="46" yMin="-9" xMax="649" yMax="746">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C" x="326" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 40 23 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="scircumflex" xMin="46" yMin="-9" xMax="601" yMax="741">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="325" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 40 23 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="section" xMin="0" yMin="-240" xMax="605" yMax="670">
      <contour>
        <pt x="51" y="194" on="1"/>
        <pt x="51" y="237" on="0"/>
        <pt x="94" y="294" on="0"/>
        <pt x="144" y="324" on="1"/>
        <pt x="171" y="341" on="0"/>
        <pt x="246" y="378" on="0"/>
        <pt x="296" y="400" on="1"/>
        <pt x="239" y="437" on="0"/>
        <pt x="196" y="493" on="0"/>
        <pt x="196" y="535" on="1"/>
        <pt x="196" y="602" on="0"/>
        <pt x="309" y="670" on="0"/>
        <pt x="422" y="670" on="1"/>
        <pt x="466" y="670" on="0"/>
        <pt x="563" y="660" on="0"/>
        <pt x="605" y="651" on="1"/>
        <pt x="591" y="598" on="1"/>
        <pt x="550" y="609" on="0"/>
        <pt x="467" y="619" on="0"/>
        <pt x="422" y="619" on="1"/>
        <pt x="335" y="619" on="0"/>
        <pt x="256" y="583" on="0"/>
        <pt x="256" y="541" on="1"/>
        <pt x="256" y="513" on="0"/>
        <pt x="291" y="474" on="0"/>
        <pt x="339" y="444" on="1"/>
        <pt x="426" y="389" on="1"/>
        <pt x="500" y="342" on="0"/>
        <pt x="554" y="280" on="0"/>
        <pt x="554" y="236" on="1"/>
        <pt x="554" y="193" on="0"/>
        <pt x="511" y="136" on="0"/>
        <pt x="461" y="106" on="1"/>
        <pt x="434" y="89" on="0"/>
        <pt x="359" y="52" on="0"/>
        <pt x="309" y="30" on="1"/>
        <pt x="365" y="-5" on="0"/>
        <pt x="409" y="-63" on="0"/>
        <pt x="409" y="-105" on="1"/>
        <pt x="409" y="-172" on="0"/>
        <pt x="296" y="-240" on="0"/>
        <pt x="183" y="-240" on="1"/>
        <pt x="139" y="-240" on="0"/>
        <pt x="42" y="-230" on="0"/>
        <pt x="0" y="-221" on="1"/>
        <pt x="14" y="-168" on="1"/>
        <pt x="55" y="-179" on="0"/>
        <pt x="138" y="-189" on="0"/>
        <pt x="183" y="-189" on="1"/>
        <pt x="270" y="-189" on="0"/>
        <pt x="349" y="-153" on="0"/>
        <pt x="349" y="-111" on="1"/>
        <pt x="349" y="-83" on="0"/>
        <pt x="314" y="-44" on="0"/>
        <pt x="266" y="-14" on="1"/>
        <pt x="179" y="41" on="1"/>
        <pt x="105" y="88" on="0"/>
        <pt x="51" y="150" on="0"/>
      </contour>
      <contour>
        <pt x="113" y="200" on="1"/>
        <pt x="113" y="171" on="0"/>
        <pt x="160" y="125" on="0"/>
        <pt x="232" y="79" on="1"/>
        <pt x="266" y="57" on="1"/>
        <pt x="309" y="78" on="0"/>
        <pt x="375" y="112" on="0"/>
        <pt x="399" y="125" on="1"/>
        <pt x="451" y="155" on="0"/>
        <pt x="492" y="198" on="0"/>
        <pt x="492" y="230" on="1"/>
        <pt x="492" y="259" on="0"/>
        <pt x="445" y="305" on="0"/>
        <pt x="373" y="351" on="1"/>
        <pt x="339" y="373" on="1"/>
        <pt x="296" y="352" on="0"/>
        <pt x="230" y="318" on="0"/>
        <pt x="206" y="305" on="1"/>
        <pt x="154" y="275" on="0"/>
        <pt x="113" y="232" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          54 35 55 62 61 71 72 26 6 25 10 48 41 19 12 3 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="semicolon" xMin="57" yMin="-144" xMax="440" yMax="472">
      <contour>
        <pt x="440" y="421" on="1"/>
        <pt x="440" y="384" on="0"/>
        <pt x="392" y="335" on="0"/>
        <pt x="354" y="335" on="1"/>
        <pt x="324" y="335" on="0"/>
        <pt x="290" y="363" on="0"/>
        <pt x="290" y="388" on="1"/>
        <pt x="290" y="422" on="0"/>
        <pt x="338" y="472" on="0"/>
        <pt x="375" y="472" on="1"/>
        <pt x="407" y="472" on="0"/>
        <pt x="440" y="446" on="0"/>
      </contour>
      <contour>
        <pt x="120" y="-144" on="1"/>
        <pt x="57" y="-144" on="1"/>
        <pt x="57" y="-142" on="1"/>
        <pt x="143" y="-51" on="0"/>
        <pt x="200" y="32" on="0"/>
        <pt x="232" y="120" on="1"/>
        <pt x="332" y="120" on="1"/>
        <pt x="295" y="22" on="0"/>
        <pt x="225" y="-66" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          12 17 3 9 7 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="seven" xMin="101" yMin="0" xMax="646" yMax="655">
      <contour>
        <pt x="646" y="618" on="1"/>
        <pt x="175" y="0" on="1"/>
        <pt x="101" y="0" on="1"/>
        <pt x="101" y="2" on="1"/>
        <pt x="562" y="595" on="1"/>
        <pt x="562" y="600" on="1"/>
        <pt x="165" y="600" on="1"/>
        <pt x="181" y="655" on="1"/>
        <pt x="646" y="655" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          4 0 6 6 7 4 114 2 12 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="seven.den" xMin="152" yMin="0" xMax="492" yMax="380">
      <contour>
        <pt x="485" y="342" on="1"/>
        <pt x="213" y="0" on="1"/>
        <pt x="152" y="0" on="1"/>
        <pt x="152" y="2" on="1"/>
        <pt x="423" y="333" on="1"/>
        <pt x="423" y="336" on="1"/>
        <pt x="186" y="336" on="1"/>
        <pt x="199" y="380" on="1"/>
        <pt x="492" y="380" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          6 4 0 3 7 184 114 1 185 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="seven.inf" xMin="87" yMin="-230" xMax="427" yMax="150">
      <component glyphName="seven.den" x="-65" y="-230" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="seven.num" xMin="230" yMin="275" xMax="570" yMax="655">
      <component glyphName="seven.den" x="78" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="seven.sup" xMin="246" yMin="330" xMax="586" yMax="710">
      <component glyphName="seven.den" x="94" y="330" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="seveneighths" xMin="0" yMin="-244" xMax="614" yMax="655">
      <component glyphName="seven.den" x="-29" y="275" flags="0x4"/>
      <component glyphName="eight.den" x="124" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="six" xMin="75" yMin="-15" xMax="566" yMax="655">
      <contour>
        <pt x="566" y="653" on="1"/>
        <pt x="391" y="530" on="1"/>
        <pt x="354" y="504" on="0"/>
        <pt x="292" y="454" on="0"/>
        <pt x="267" y="430" on="1"/>
        <pt x="401" y="424" on="0"/>
        <pt x="534" y="334" on="0"/>
        <pt x="534" y="249" on="1"/>
        <pt x="534" y="147" on="0"/>
        <pt x="364" y="-15" on="0"/>
        <pt x="254" y="-15" on="1"/>
        <pt x="171" y="-15" on="0"/>
        <pt x="75" y="80" on="0"/>
        <pt x="75" y="165" on="1"/>
        <pt x="75" y="264" on="0"/>
        <pt x="210" y="460" on="0"/>
        <pt x="346" y="557" on="1"/>
        <pt x="483" y="655" on="1"/>
        <pt x="566" y="655" on="1"/>
      </contour>
      <contour>
        <pt x="230" y="391" on="1"/>
        <pt x="182" y="336" on="0"/>
        <pt x="135" y="224" on="0"/>
        <pt x="135" y="162" on="1"/>
        <pt x="135" y="103" on="0"/>
        <pt x="199" y="36" on="0"/>
        <pt x="255" y="36" on="1"/>
        <pt x="340" y="36" on="0"/>
        <pt x="474" y="169" on="0"/>
        <pt x="474" y="247" on="1"/>
        <pt x="474" y="318" on="0"/>
        <pt x="362" y="384" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          19 4 1 16 4 10 0 17 4 114 25 10 13 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="six.den" xMin="131" yMin="-15" xMax="440" yMax="380">
      <contour>
        <pt x="440" y="379" on="1"/>
        <pt x="339" y="303" on="1"/>
        <pt x="322" y="290" on="0"/>
        <pt x="289" y="264" on="0"/>
        <pt x="272" y="249" on="1"/>
        <pt x="351" y="240" on="0"/>
        <pt x="425" y="187" on="0"/>
        <pt x="425" y="139" on="1"/>
        <pt x="425" y="78" on="0"/>
        <pt x="323" y="-15" on="0"/>
        <pt x="252" y="-15" on="1"/>
        <pt x="196" y="-15" on="0"/>
        <pt x="131" y="42" on="0"/>
        <pt x="131" y="92" on="1"/>
        <pt x="131" y="145" on="0"/>
        <pt x="208" y="252" on="0"/>
        <pt x="296" y="320" on="1"/>
        <pt x="373" y="380" on="1"/>
        <pt x="440" y="380" on="1"/>
      </contour>
      <contour>
        <pt x="241" y="218" on="1"/>
        <pt x="210" y="184" on="0"/>
        <pt x="181" y="126" on="0"/>
        <pt x="181" y="94" on="1"/>
        <pt x="181" y="62" on="0"/>
        <pt x="220" y="27" on="0"/>
        <pt x="255" y="27" on="1"/>
        <pt x="303" y="27" on="0"/>
        <pt x="375" y="95" on="0"/>
        <pt x="375" y="136" on="1"/>
        <pt x="375" y="174" on="0"/>
        <pt x="315" y="210" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          13 22 28 7 19 4 1 16 8 10 17 184 114 25 10 187 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="six.inf" xMin="66" yMin="-245" xMax="375" yMax="150">
      <component glyphName="six.den" x="-65" y="-230" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="six.num" xMin="209" yMin="260" xMax="518" yMax="655">
      <component glyphName="six.den" x="78" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="six.sup" xMin="225" yMin="315" xMax="534" yMax="710">
      <component glyphName="six.den" x="94" y="330" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="slash" xMin="-55" yMin="-100" xMax="724" yMax="755">
      <contour>
        <pt x="655" y="755" on="1"/>
        <pt x="724" y="755" on="1"/>
        <pt x="16" y="-100" on="1"/>
        <pt x="-55" y="-100" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="space"/><!-- contains no outline data -->

    <TTGlyph name="sterling" xMin="10" yMin="0" xMax="632" yMax="670">
      <contour>
        <pt x="485" y="0" on="1"/>
        <pt x="10" y="0" on="1"/>
        <pt x="10" y="37" on="1"/>
        <pt x="111" y="112" on="0"/>
        <pt x="223" y="214" on="0"/>
        <pt x="240" y="248" on="1"/>
        <pt x="93" y="248" on="1"/>
        <pt x="106" y="296" on="1"/>
        <pt x="249" y="296" on="1"/>
        <pt x="248" y="308" on="0"/>
        <pt x="237" y="333" on="0"/>
        <pt x="223" y="358" on="1"/>
        <pt x="199" y="399" on="0"/>
        <pt x="183" y="453" on="0"/>
        <pt x="183" y="482" on="1"/>
        <pt x="183" y="563" on="0"/>
        <pt x="315" y="670" on="0"/>
        <pt x="421" y="670" on="1"/>
        <pt x="499" y="670" on="0"/>
        <pt x="598" y="607" on="0"/>
        <pt x="632" y="534" on="1"/>
        <pt x="576" y="508" on="1"/>
        <pt x="552" y="567" on="0"/>
        <pt x="476" y="619" on="0"/>
        <pt x="418" y="619" on="1"/>
        <pt x="342" y="619" on="0"/>
        <pt x="247" y="541" on="0"/>
        <pt x="247" y="483" on="1"/>
        <pt x="247" y="463" on="0"/>
        <pt x="260" y="421" on="0"/>
        <pt x="281" y="384" on="1"/>
        <pt x="300" y="349" on="0"/>
        <pt x="312" y="313" on="0"/>
        <pt x="312" y="296" on="1"/>
        <pt x="530" y="296" on="1"/>
        <pt x="517" y="248" on="1"/>
        <pt x="306" y="248" on="1"/>
        <pt x="294" y="215" on="0"/>
        <pt x="202" y="125" on="0"/>
        <pt x="107" y="51" on="1"/>
        <pt x="500" y="51" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 26 values pushed */
          7 33 33 6 15 36 79 36 95 36 159 36 4 36 36 1 24 17 5 114 2 39 39 1 12
          114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="t" xMin="116" yMin="-8" xMax="565" yMax="637">
      <contour>
        <pt x="346" y="410" on="1"/>
        <pt x="276" y="220" on="1"/>
        <pt x="264" y="188" on="0"/>
        <pt x="253" y="139" on="0"/>
        <pt x="253" y="121" on="1"/>
        <pt x="253" y="87" on="0"/>
        <pt x="296" y="52" on="0"/>
        <pt x="342" y="50" on="1"/>
        <pt x="467" y="43" on="1"/>
        <pt x="453" y="-8" on="1"/>
        <pt x="348" y="-4" on="1"/>
        <pt x="270" y="-1" on="0"/>
        <pt x="193" y="59" on="0"/>
        <pt x="193" y="116" on="1"/>
        <pt x="193" y="135" on="0"/>
        <pt x="207" y="193" on="0"/>
        <pt x="221" y="232" on="1"/>
        <pt x="286" y="410" on="1"/>
        <pt x="116" y="410" on="1"/>
        <pt x="130" y="460" on="1"/>
        <pt x="305" y="460" on="1"/>
        <pt x="370" y="637" on="1"/>
        <pt x="429" y="637" on="1"/>
        <pt x="364" y="460" on="1"/>
        <pt x="565" y="460" on="1"/>
        <pt x="551" y="410" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          0 18 18 23 21 19 6 114 8 9 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="tbar" xMin="101" yMin="-8" xMax="565" yMax="637">
      <contour>
        <pt x="217" y="222" on="1"/>
        <pt x="101" y="222" on="1"/>
        <pt x="114" y="270" on="1"/>
        <pt x="235" y="270" on="1"/>
        <pt x="286" y="410" on="1"/>
        <pt x="116" y="410" on="1"/>
        <pt x="130" y="460" on="1"/>
        <pt x="305" y="460" on="1"/>
        <pt x="370" y="637" on="1"/>
        <pt x="429" y="637" on="1"/>
        <pt x="364" y="460" on="1"/>
        <pt x="565" y="460" on="1"/>
        <pt x="551" y="410" on="1"/>
        <pt x="346" y="410" on="1"/>
        <pt x="294" y="270" on="1"/>
        <pt x="472" y="270" on="1"/>
        <pt x="459" y="222" on="1"/>
        <pt x="277" y="222" on="1"/>
        <pt x="265" y="188" on="0"/>
        <pt x="253" y="137" on="0"/>
        <pt x="253" y="121" on="1"/>
        <pt x="253" y="87" on="0"/>
        <pt x="296" y="52" on="0"/>
        <pt x="342" y="50" on="1"/>
        <pt x="467" y="43" on="1"/>
        <pt x="453" y="-8" on="1"/>
        <pt x="348" y="-4" on="1"/>
        <pt x="270" y="-1" on="0"/>
        <pt x="193" y="59" on="0"/>
        <pt x="193" y="116" on="1"/>
        <pt x="193" y="135" on="0"/>
        <pt x="205" y="188" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          24 25 10 17 0 0 3 3 14 14 13 13 5 5 10 8 6 6 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="tcaron" xMin="116" yMin="-8" xMax="647" yMax="787">
      <component glyphName="t" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0315" x="439" y="77" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 27 19 1 1 99 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="thorn" xMin="-32" yMin="-230" xMax="557" yMax="710">
      <contour>
        <pt x="27" y="-230" on="1"/>
        <pt x="-32" y="-230" on="1"/>
        <pt x="238" y="710" on="1"/>
        <pt x="297" y="710" on="1"/>
        <pt x="199" y="367" on="1"/>
        <pt x="253" y="420" on="0"/>
        <pt x="345" y="468" on="0"/>
        <pt x="394" y="468" on="1"/>
        <pt x="470" y="468" on="0"/>
        <pt x="557" y="378" on="0"/>
        <pt x="557" y="300" on="1"/>
        <pt x="557" y="167" on="0"/>
        <pt x="370" y="-8" on="0"/>
        <pt x="221" y="-8" on="1"/>
        <pt x="189" y="-8" on="0"/>
        <pt x="128" y="4" on="0"/>
        <pt x="98" y="16" on="1"/>
      </contour>
      <contour>
        <pt x="495" y="297" on="1"/>
        <pt x="495" y="351" on="0"/>
        <pt x="435" y="418" on="0"/>
        <pt x="388" y="418" on="1"/>
        <pt x="339" y="418" on="0"/>
        <pt x="251" y="365" on="0"/>
        <pt x="178" y="297" on="1"/>
        <pt x="112" y="66" on="1"/>
        <pt x="135" y="54" on="0"/>
        <pt x="190" y="42" on="0"/>
        <pt x="222" y="42" on="1"/>
        <pt x="344" y="42" on="0"/>
        <pt x="495" y="191" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          24 27 27 16 13 11 114 23 4 4 20 20 7 7 114 2 0 114 1 14 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="three" xMin="25" yMin="-10" xMax="604" yMax="655">
      <contour>
        <pt x="499" y="604" on="1"/>
        <pt x="178" y="604" on="1"/>
        <pt x="193" y="655" on="1"/>
        <pt x="604" y="655" on="1"/>
        <pt x="604" y="618" on="1"/>
        <pt x="319" y="381" on="1"/>
        <pt x="319" y="378" on="1"/>
        <pt x="424" y="373" on="0"/>
        <pt x="525" y="302" on="0"/>
        <pt x="525" y="231" on="1"/>
        <pt x="525" y="127" on="0"/>
        <pt x="346" y="9" on="0"/>
        <pt x="172" y="-1" on="1"/>
        <pt x="25" y="-10" on="1"/>
        <pt x="35" y="42" on="1"/>
        <pt x="167" y="51" on="1"/>
        <pt x="310" y="61" on="0"/>
        <pt x="459" y="149" on="0"/>
        <pt x="459" y="223" on="1"/>
        <pt x="459" y="268" on="0"/>
        <pt x="403" y="317" on="0"/>
        <pt x="340" y="327" on="1"/>
        <pt x="316" y="331" on="0"/>
        <pt x="258" y="335" on="0"/>
        <pt x="224" y="336" on="1"/>
        <pt x="224" y="364" on="1"/>
        <pt x="499" y="602" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 23 values pushed */
          24 25 25 6 5 6 21 21 2 14 15 15 13 12 12 114 26 1 1 4 2 4 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="three.den" xMin="105" yMin="-10" xMax="471" yMax="380">
      <contour>
        <pt x="387" y="338" on="1"/>
        <pt x="192" y="338" on="1"/>
        <pt x="204" y="380" on="1"/>
        <pt x="471" y="380" on="1"/>
        <pt x="471" y="353" on="1"/>
        <pt x="302" y="220" on="1"/>
        <pt x="302" y="218" on="1"/>
        <pt x="362" y="214" on="0"/>
        <pt x="422" y="170" on="0"/>
        <pt x="422" y="132" on="1"/>
        <pt x="422" y="70" on="0"/>
        <pt x="309" y="1" on="0"/>
        <pt x="197" y="-5" on="1"/>
        <pt x="105" y="-10" on="1"/>
        <pt x="114" y="33" on="1"/>
        <pt x="199" y="39" on="1"/>
        <pt x="281" y="45" on="0"/>
        <pt x="369" y="92" on="0"/>
        <pt x="369" y="127" on="1"/>
        <pt x="369" y="157" on="0"/>
        <pt x="304" y="181" on="0"/>
        <pt x="228" y="182" on="1"/>
        <pt x="228" y="205" on="1"/>
        <pt x="387" y="336" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          20 21 5 3 2 13 12 187 114 22 4 1 1 2 184 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="three.inf" xMin="40" yMin="-240" xMax="406" yMax="150">
      <component glyphName="three.den" x="-65" y="-230" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="three.num" xMin="183" yMin="265" xMax="549" yMax="655">
      <component glyphName="three.den" x="78" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="three.sup" xMin="199" yMin="320" xMax="565" yMax="710">
      <component glyphName="three.den" x="94" y="330" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="threeeighths" xMin="0" yMin="-244" xMax="614" yMax="655">
      <component glyphName="eight.den" x="124" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
      <component glyphName="three.den" x="-59" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="threefifths" xMin="0" yMin="-239" xMax="614" yMax="655">
      <component glyphName="five.den" x="134" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
      <component glyphName="three.den" x="-59" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="threequarters" xMin="0" yMin="-230" xMax="614" yMax="655">
      <component glyphName="three.den" x="-59" y="275" flags="0x4"/>
      <component glyphName="four.den" x="84" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="tilde" xMin="201" yMin="536" xMax="640" yMax="726">
      <component glyphName="uni0303" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="trademark" xMin="158" yMin="403" xMax="684" yMax="710">
      <contour>
        <pt x="251" y="670" on="1"/>
        <pt x="158" y="670" on="1"/>
        <pt x="169" y="709" on="1"/>
        <pt x="397" y="709" on="1"/>
        <pt x="386" y="670" on="1"/>
        <pt x="296" y="670" on="1"/>
        <pt x="219" y="403" on="1"/>
        <pt x="174" y="403" on="1"/>
      </contour>
      <contour>
        <pt x="616" y="710" on="1"/>
        <pt x="684" y="710" on="1"/>
        <pt x="608" y="403" on="1"/>
        <pt x="566" y="403" on="1"/>
        <pt x="638" y="683" on="1"/>
        <pt x="511" y="490" on="1"/>
        <pt x="501" y="490" on="1"/>
        <pt x="483" y="674" on="1"/>
        <pt x="396" y="403" on="1"/>
        <pt x="354" y="403" on="1"/>
        <pt x="454" y="710" on="1"/>
        <pt x="517" y="710" on="1"/>
        <pt x="530" y="580" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          8 18 18 2 11 17 17 14 20 15 12 4 7 5 0 0 2 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="two" xMin="19" yMin="0" xMax="598" yMax="670">
      <contour>
        <pt x="472" y="0" on="1"/>
        <pt x="19" y="0" on="1"/>
        <pt x="19" y="37" on="1"/>
        <pt x="381" y="326" on="1"/>
        <pt x="465" y="393" on="0"/>
        <pt x="533" y="482" on="0"/>
        <pt x="533" y="530" on="1"/>
        <pt x="533" y="572" on="0"/>
        <pt x="481" y="619" on="0"/>
        <pt x="435" y="619" on="1"/>
        <pt x="386" y="619" on="0"/>
        <pt x="282" y="568" on="0"/>
        <pt x="189" y="500" on="1"/>
        <pt x="158" y="545" on="1"/>
        <pt x="258" y="617" on="0"/>
        <pt x="374" y="670" on="0"/>
        <pt x="438" y="670" on="1"/>
        <pt x="510" y="670" on="0"/>
        <pt x="598" y="594" on="0"/>
        <pt x="598" y="533" on="1"/>
        <pt x="598" y="474" on="0"/>
        <pt x="518" y="367" on="0"/>
        <pt x="426" y="295" on="1"/>
        <pt x="121" y="53" on="1"/>
        <pt x="121" y="51" on="1"/>
        <pt x="487" y="51" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          9 16 5 114 2 23 24 24 1 12 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="two.den" xMin="102" yMin="0" xMax="465" yMax="392">
      <contour>
        <pt x="392" y="0" on="1"/>
        <pt x="102" y="0" on="1"/>
        <pt x="102" y="27" on="1"/>
        <pt x="315" y="184" on="1"/>
        <pt x="366" y="222" on="0"/>
        <pt x="411" y="276" on="0"/>
        <pt x="411" y="304" on="1"/>
        <pt x="411" y="325" on="0"/>
        <pt x="380" y="349" on="0"/>
        <pt x="352" y="349" on="1"/>
        <pt x="320" y="349" on="0"/>
        <pt x="256" y="319" on="0"/>
        <pt x="205" y="282" on="1"/>
        <pt x="181" y="317" on="1"/>
        <pt x="237" y="358" on="0"/>
        <pt x="313" y="392" on="0"/>
        <pt x="355" y="392" on="1"/>
        <pt x="403" y="392" on="0"/>
        <pt x="465" y="345" on="0"/>
        <pt x="465" y="308" on="1"/>
        <pt x="465" y="270" on="0"/>
        <pt x="414" y="205" on="0"/>
        <pt x="358" y="165" on="1"/>
        <pt x="188" y="44" on="1"/>
        <pt x="188" y="42" on="1"/>
        <pt x="405" y="42" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          19 6 3 22 4 1 9 16 186 114 2 24 24 23 1 185 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="two.inf" xMin="37" yMin="-230" xMax="400" yMax="162">
      <component glyphName="two.den" x="-65" y="-230" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="two.num" xMin="180" yMin="275" xMax="543" yMax="667">
      <component glyphName="two.den" x="78" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="two.sup" xMin="196" yMin="330" xMax="559" yMax="722">
      <component glyphName="two.den" x="94" y="330" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="twofifths" xMin="0" yMin="-239" xMax="614" yMax="667">
      <component glyphName="five.den" x="134" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
      <component glyphName="two.den" x="-69" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="twothirds" xMin="0" yMin="-240" xMax="628" yMax="667">
      <component glyphName="two.den" x="-69" y="275" flags="0x4"/>
      <component glyphName="three.den" x="157" y="-230" flags="0x4"/>
      <component glyphName="fracbar" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="u" xMin="68" yMin="-5" xMax="577" yMax="460">
      <contour>
        <pt x="445" y="0" on="1"/>
        <pt x="386" y="0" on="1"/>
        <pt x="431" y="156" on="1"/>
        <pt x="339" y="62" on="0"/>
        <pt x="237" y="-5" on="0"/>
        <pt x="177" y="-5" on="1"/>
        <pt x="128" y="-5" on="0"/>
        <pt x="68" y="48" on="0"/>
        <pt x="68" y="91" on="1"/>
        <pt x="68" y="103" on="0"/>
        <pt x="76" y="144" on="0"/>
        <pt x="85" y="176" on="1"/>
        <pt x="167" y="460" on="1"/>
        <pt x="226" y="460" on="1"/>
        <pt x="142" y="168" on="1"/>
        <pt x="135" y="144" on="0"/>
        <pt x="129" y="112" on="0"/>
        <pt x="129" y="100" on="1"/>
        <pt x="129" y="75" on="0"/>
        <pt x="162" y="47" on="0"/>
        <pt x="192" y="47" on="1"/>
        <pt x="238" y="47" on="0"/>
        <pt x="342" y="126" on="0"/>
        <pt x="455" y="240" on="1"/>
        <pt x="518" y="460" on="1"/>
        <pt x="577" y="460" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          25 12 6 114 23 2 2 20 20 5 11 114 1 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uacute" xMin="68" yMin="-5" xMax="594" yMax="730">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="304" y="-11" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 26 24 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ubreve" xMin="68" yMin="-5" xMax="630" yMax="730">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 33 24 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ucircumflex" xMin="68" yMin="-5" xMax="582" yMax="741">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 26 12 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="udieresis" xMin="68" yMin="-5" xMax="586" yMax="655">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 29 12 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ugrave" xMin="68" yMin="-5" xMax="577" yMax="723">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300" x="304" y="-11" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 28 24 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uhorn" xMin="68" yMin="-5" xMax="737" yMax="572">
      <contour>
        <pt x="445" y="0" on="1"/>
        <pt x="386" y="0" on="1"/>
        <pt x="431" y="156" on="1"/>
        <pt x="339" y="62" on="0"/>
        <pt x="237" y="-5" on="0"/>
        <pt x="177" y="-5" on="1"/>
        <pt x="128" y="-5" on="0"/>
        <pt x="68" y="48" on="0"/>
        <pt x="68" y="91" on="1"/>
        <pt x="68" y="103" on="0"/>
        <pt x="76" y="144" on="0"/>
        <pt x="85" y="176" on="1"/>
        <pt x="167" y="460" on="1"/>
        <pt x="226" y="460" on="1"/>
        <pt x="142" y="168" on="1"/>
        <pt x="135" y="144" on="0"/>
        <pt x="129" y="112" on="0"/>
        <pt x="129" y="100" on="1"/>
        <pt x="129" y="75" on="0"/>
        <pt x="162" y="47" on="0"/>
        <pt x="192" y="47" on="1"/>
        <pt x="238" y="47" on="0"/>
        <pt x="342" y="126" on="0"/>
        <pt x="455" y="240" on="1"/>
        <pt x="518" y="460" on="1"/>
        <pt x="537" y="460" on="1"/>
        <pt x="604" y="460" on="0"/>
        <pt x="655" y="500" on="0"/>
        <pt x="679" y="572" on="1"/>
        <pt x="737" y="572" on="1"/>
        <pt x="712" y="486" on="0"/>
        <pt x="642" y="421" on="0"/>
        <pt x="565" y="419" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          32 24 24 28 12 6 114 23 2 2 20 20 5 11 114 1 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uhungarumlaut" xMin="68" yMin="-5" xMax="650" yMax="735">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030B" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 26 12 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="umacron" xMin="68" yMin="-5" xMax="584" yMax="626">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 27 12 1 1 116 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="underscore" xMin="-11" yMin="-81" xMax="463" yMax="-26">
      <contour>
        <pt x="-11" y="-81" on="1"/>
        <pt x="5" y="-26" on="1"/>
        <pt x="463" y="-26" on="1"/>
        <pt x="447" y="-81" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          SVTCA[0]	/* SetFPVectorToAxis */
          RUTG[ ]	/* RoundUpToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni00A0"/><!-- contains no outline data -->

    <TTGlyph name="uni00A80300" xMin="-63" yMin="556" xMax="277" yMax="870">
      <contour>
        <pt x="37" y="870" on="1"/>
        <pt x="213" y="724" on="1"/>
        <pt x="187" y="693" on="1"/>
        <pt x="-3" y="826" on="1"/>
      </contour>
      <contour>
        <pt x="41" y="617" on="1"/>
        <pt x="41" y="590" on="0"/>
        <pt x="7" y="556" on="0"/>
        <pt x="-21" y="556" on="1"/>
        <pt x="-41" y="556" on="0"/>
        <pt x="-63" y="573" on="0"/>
        <pt x="-63" y="588" on="1"/>
        <pt x="-63" y="613" on="0"/>
        <pt x="-26" y="649" on="0"/>
        <pt x="-1" y="649" on="1"/>
        <pt x="19" y="649" on="0"/>
        <pt x="41" y="633" on="0"/>
      </contour>
      <contour>
        <pt x="277" y="617" on="1"/>
        <pt x="277" y="590" on="0"/>
        <pt x="243" y="556" on="0"/>
        <pt x="215" y="556" on="1"/>
        <pt x="195" y="556" on="0"/>
        <pt x="174" y="573" on="0"/>
        <pt x="174" y="588" on="1"/>
        <pt x="174" y="613" on="0"/>
        <pt x="210" y="649" on="0"/>
        <pt x="236" y="649" on="1"/>
        <pt x="255" y="649" on="0"/>
        <pt x="277" y="632" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          19 25 25 13 1 3 0 2 7 13
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[11110]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni00A80300.cap" xMin="-25" yMin="751" xMax="354" yMax="1066">
      <contour>
        <pt x="84" y="1066" on="1"/>
        <pt x="267" y="921" on="1"/>
        <pt x="239" y="889" on="1"/>
        <pt x="47" y="1020" on="1"/>
      </contour>
      <contour>
        <pt x="87" y="816" on="1"/>
        <pt x="87" y="787" on="0"/>
        <pt x="50" y="751" on="0"/>
        <pt x="21" y="751" on="1"/>
        <pt x="-1" y="751" on="0"/>
        <pt x="-25" y="769" on="0"/>
        <pt x="-25" y="786" on="1"/>
        <pt x="-25" y="813" on="0"/>
        <pt x="13" y="852" on="0"/>
        <pt x="41" y="852" on="1"/>
        <pt x="64" y="852" on="0"/>
        <pt x="87" y="834" on="0"/>
      </contour>
      <contour>
        <pt x="354" y="816" on="1"/>
        <pt x="354" y="787" on="0"/>
        <pt x="317" y="751" on="0"/>
        <pt x="288" y="751" on="1"/>
        <pt x="266" y="751" on="0"/>
        <pt x="242" y="769" on="0"/>
        <pt x="242" y="786" on="1"/>
        <pt x="242" y="813" on="0"/>
        <pt x="280" y="852" on="0"/>
        <pt x="308" y="852" on="1"/>
        <pt x="331" y="852" on="0"/>
        <pt x="354" y="834" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          19 25 25 13 3 0 1 2 7 13
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[11110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni00A80301" xMin="-63" yMin="556" xMax="341" yMax="875">
      <contour>
        <pt x="341" y="823" on="1"/>
        <pt x="79" y="693" on="1"/>
        <pt x="58" y="729" on="1"/>
        <pt x="318" y="875" on="1"/>
      </contour>
      <contour>
        <pt x="41" y="617" on="1"/>
        <pt x="41" y="590" on="0"/>
        <pt x="7" y="556" on="0"/>
        <pt x="-21" y="556" on="1"/>
        <pt x="-41" y="556" on="0"/>
        <pt x="-63" y="573" on="0"/>
        <pt x="-63" y="588" on="1"/>
        <pt x="-63" y="613" on="0"/>
        <pt x="-26" y="649" on="0"/>
        <pt x="-1" y="649" on="1"/>
        <pt x="19" y="649" on="0"/>
        <pt x="41" y="633" on="0"/>
      </contour>
      <contour>
        <pt x="277" y="617" on="1"/>
        <pt x="277" y="590" on="0"/>
        <pt x="243" y="556" on="0"/>
        <pt x="215" y="556" on="1"/>
        <pt x="195" y="556" on="0"/>
        <pt x="174" y="573" on="0"/>
        <pt x="174" y="588" on="1"/>
        <pt x="174" y="613" on="0"/>
        <pt x="210" y="649" on="0"/>
        <pt x="236" y="649" on="1"/>
        <pt x="255" y="649" on="0"/>
        <pt x="277" y="632" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          19 25 25 13 0 3 2 1 7 13
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[11110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni00A80301.cap" xMin="-25" yMin="751" xMax="407" yMax="1069">
      <contour>
        <pt x="407" y="1020" on="1"/>
        <pt x="139" y="889" on="1"/>
        <pt x="120" y="925" on="1"/>
        <pt x="382" y="1069" on="1"/>
      </contour>
      <contour>
        <pt x="87" y="816" on="1"/>
        <pt x="87" y="787" on="0"/>
        <pt x="50" y="751" on="0"/>
        <pt x="21" y="751" on="1"/>
        <pt x="-1" y="751" on="0"/>
        <pt x="-25" y="769" on="0"/>
        <pt x="-25" y="786" on="1"/>
        <pt x="-25" y="813" on="0"/>
        <pt x="13" y="852" on="0"/>
        <pt x="41" y="852" on="1"/>
        <pt x="64" y="852" on="0"/>
        <pt x="87" y="834" on="0"/>
      </contour>
      <contour>
        <pt x="354" y="816" on="1"/>
        <pt x="354" y="787" on="0"/>
        <pt x="317" y="751" on="0"/>
        <pt x="288" y="751" on="1"/>
        <pt x="266" y="751" on="0"/>
        <pt x="242" y="769" on="0"/>
        <pt x="242" y="786" on="1"/>
        <pt x="242" y="813" on="0"/>
        <pt x="280" y="852" on="0"/>
        <pt x="308" y="852" on="1"/>
        <pt x="331" y="852" on="0"/>
        <pt x="354" y="834" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          19 25 25 13 0 3 2 1 7 13
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[11110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni00A80304" xMin="-63" yMin="556" xMax="301" yMax="776">
      <contour>
        <pt x="286" y="726" on="1"/>
        <pt x="-2" y="726" on="1"/>
        <pt x="13" y="776" on="1"/>
        <pt x="301" y="776" on="1"/>
      </contour>
      <contour>
        <pt x="41" y="617" on="1"/>
        <pt x="41" y="590" on="0"/>
        <pt x="7" y="556" on="0"/>
        <pt x="-21" y="556" on="1"/>
        <pt x="-41" y="556" on="0"/>
        <pt x="-63" y="573" on="0"/>
        <pt x="-63" y="588" on="1"/>
        <pt x="-63" y="613" on="0"/>
        <pt x="-26" y="649" on="0"/>
        <pt x="-1" y="649" on="1"/>
        <pt x="19" y="649" on="0"/>
        <pt x="41" y="633" on="0"/>
      </contour>
      <contour>
        <pt x="277" y="617" on="1"/>
        <pt x="277" y="590" on="0"/>
        <pt x="243" y="556" on="0"/>
        <pt x="215" y="556" on="1"/>
        <pt x="195" y="556" on="0"/>
        <pt x="174" y="573" on="0"/>
        <pt x="174" y="588" on="1"/>
        <pt x="174" y="613" on="0"/>
        <pt x="210" y="649" on="0"/>
        <pt x="236" y="649" on="1"/>
        <pt x="255" y="649" on="0"/>
        <pt x="277" y="632" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          19 25 25 2 1 7 13
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni00A80304.cap" xMin="-25" yMin="751" xMax="387" yMax="1006">
      <contour>
        <pt x="372" y="956" on="1"/>
        <pt x="44" y="956" on="1"/>
        <pt x="59" y="1006" on="1"/>
        <pt x="387" y="1006" on="1"/>
      </contour>
      <contour>
        <pt x="87" y="816" on="1"/>
        <pt x="87" y="787" on="0"/>
        <pt x="50" y="751" on="0"/>
        <pt x="21" y="751" on="1"/>
        <pt x="-1" y="751" on="0"/>
        <pt x="-25" y="769" on="0"/>
        <pt x="-25" y="786" on="1"/>
        <pt x="-25" y="813" on="0"/>
        <pt x="13" y="852" on="0"/>
        <pt x="41" y="852" on="1"/>
        <pt x="64" y="852" on="0"/>
        <pt x="87" y="834" on="0"/>
      </contour>
      <contour>
        <pt x="354" y="816" on="1"/>
        <pt x="354" y="787" on="0"/>
        <pt x="317" y="751" on="0"/>
        <pt x="288" y="751" on="1"/>
        <pt x="266" y="751" on="0"/>
        <pt x="242" y="769" on="0"/>
        <pt x="242" y="786" on="1"/>
        <pt x="242" y="813" on="0"/>
        <pt x="280" y="852" on="0"/>
        <pt x="308" y="852" on="1"/>
        <pt x="331" y="852" on="0"/>
        <pt x="354" y="834" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          19 25 25 2 1 7 13
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni00A8030C" xMin="-63" yMin="556" xMax="366" yMax="894">
      <contour>
        <pt x="124" y="699" on="1"/>
        <pt x="8" y="871" on="1"/>
        <pt x="37" y="894" on="1"/>
        <pt x="149" y="758" on="1"/>
        <pt x="343" y="894" on="1"/>
        <pt x="366" y="862" on="1"/>
        <pt x="160" y="699" on="1"/>
      </contour>
      <contour>
        <pt x="41" y="617" on="1"/>
        <pt x="41" y="590" on="0"/>
        <pt x="7" y="556" on="0"/>
        <pt x="-21" y="556" on="1"/>
        <pt x="-41" y="556" on="0"/>
        <pt x="-63" y="573" on="0"/>
        <pt x="-63" y="588" on="1"/>
        <pt x="-63" y="613" on="0"/>
        <pt x="-26" y="649" on="0"/>
        <pt x="-1" y="649" on="1"/>
        <pt x="19" y="649" on="0"/>
        <pt x="41" y="633" on="0"/>
      </contour>
      <contour>
        <pt x="277" y="617" on="1"/>
        <pt x="277" y="590" on="0"/>
        <pt x="243" y="556" on="0"/>
        <pt x="215" y="556" on="1"/>
        <pt x="195" y="556" on="0"/>
        <pt x="174" y="573" on="0"/>
        <pt x="174" y="588" on="1"/>
        <pt x="174" y="613" on="0"/>
        <pt x="210" y="649" on="0"/>
        <pt x="236" y="649" on="1"/>
        <pt x="255" y="649" on="0"/>
        <pt x="277" y="632" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 13 values pushed */
          22 28 28 16 3 5 1 3 4 2 0 10 16
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[11110]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni00A8030C.cap" xMin="-25" yMin="751" xMax="418" yMax="1071">
      <contour>
        <pt x="179" y="886" on="1"/>
        <pt x="55" y="1045" on="1"/>
        <pt x="88" y="1071" on="1"/>
        <pt x="203" y="944" on="1"/>
        <pt x="394" y="1071" on="1"/>
        <pt x="418" y="1037" on="1"/>
        <pt x="215" y="886" on="1"/>
      </contour>
      <contour>
        <pt x="87" y="816" on="1"/>
        <pt x="87" y="787" on="0"/>
        <pt x="50" y="751" on="0"/>
        <pt x="21" y="751" on="1"/>
        <pt x="-1" y="751" on="0"/>
        <pt x="-25" y="769" on="0"/>
        <pt x="-25" y="786" on="1"/>
        <pt x="-25" y="813" on="0"/>
        <pt x="13" y="852" on="0"/>
        <pt x="41" y="852" on="1"/>
        <pt x="64" y="852" on="0"/>
        <pt x="87" y="834" on="0"/>
      </contour>
      <contour>
        <pt x="354" y="816" on="1"/>
        <pt x="354" y="787" on="0"/>
        <pt x="317" y="751" on="0"/>
        <pt x="288" y="751" on="1"/>
        <pt x="266" y="751" on="0"/>
        <pt x="242" y="769" on="0"/>
        <pt x="242" y="786" on="1"/>
        <pt x="242" y="813" on="0"/>
        <pt x="280" y="852" on="0"/>
        <pt x="308" y="852" on="1"/>
        <pt x="331" y="852" on="0"/>
        <pt x="354" y="834" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          1 5 3 3 4 2 0 22 28 28 10 16
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[11110]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni00AB" xMin="60" yMin="-15" xMax="599" yMax="471">
      <contour>
        <pt x="248" y="39" on="1"/>
        <pt x="232" y="-15" on="1"/>
        <pt x="60" y="203" on="1"/>
        <pt x="74" y="254" on="1"/>
        <pt x="372" y="471" on="1"/>
        <pt x="351" y="400" on="1"/>
        <pt x="120" y="223" on="1"/>
      </contour>
      <contour>
        <pt x="475" y="39" on="1"/>
        <pt x="459" y="-15" on="1"/>
        <pt x="287" y="183" on="1"/>
        <pt x="301" y="234" on="1"/>
        <pt x="599" y="471" on="1"/>
        <pt x="578" y="400" on="1"/>
        <pt x="347" y="204" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          7 8 8 1 12 11 11 9 2 13 6 10 3 6 5 4 0 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni00BB" xMin="15" yMin="-15" xMax="554" yMax="471">
      <contour>
        <pt x="554" y="253" on="1"/>
        <pt x="540" y="202" on="1"/>
        <pt x="242" y="-15" on="1"/>
        <pt x="263" y="56" on="1"/>
        <pt x="494" y="233" on="1"/>
        <pt x="366" y="417" on="1"/>
        <pt x="382" y="471" on="1"/>
      </contour>
      <contour>
        <pt x="327" y="273" on="1"/>
        <pt x="313" y="222" on="1"/>
        <pt x="15" y="-15" on="1"/>
        <pt x="36" y="56" on="1"/>
        <pt x="267" y="252" on="1"/>
        <pt x="139" y="417" on="1"/>
        <pt x="155" y="471" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          5 6 6 1 8 4 11 0 7 6 12 13 3 2 2 10 9
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0122" xMin="61" yMin="-295" xMax="623" yMax="664">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="364" y="-5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0123" xMin="17" yMin="-239" xMax="570" yMax="751">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0312" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 52 10 1 1 68 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0136" xMin="37" yMin="-290" xMax="692" yMax="655">
      <component glyphName="K" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="352" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0137" xMin="58" yMin="-290" xMax="599" yMax="710">
      <component glyphName="k" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="301" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni013B" xMin="37" yMin="-290" xMax="487" yMax="655">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="338" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni013C" xMin="54" yMin="-290" xMax="468" yMax="710">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="297" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0145" xMin="31" yMin="-285" xMax="639" yMax="655">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="309" y="5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0146" xMin="37" yMin="-290" xMax="546" yMax="465">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="315" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0156" xMin="37" yMin="-290" xMax="614" yMax="655">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="332" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0157" xMin="-13" yMin="-290" xMax="593" yMax="463">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="236" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni015E" xMin="33" yMin="-270" xMax="623" yMax="668">
      <contour>
        <pt x="284" y="38" on="1"/>
        <pt x="367" y="38" on="0"/>
        <pt x="461" y="111" on="0"/>
        <pt x="461" y="175" on="1"/>
        <pt x="461" y="212" on="0"/>
        <pt x="418" y="270" on="0"/>
        <pt x="374" y="295" on="1"/>
        <pt x="284" y="345" on="1"/>
        <pt x="229" y="376" on="0"/>
        <pt x="178" y="450" on="0"/>
        <pt x="178" y="499" on="1"/>
        <pt x="178" y="572" on="0"/>
        <pt x="302" y="668" on="0"/>
        <pt x="403" y="668" on="1"/>
        <pt x="459" y="668" on="0"/>
        <pt x="556" y="649" on="0"/>
        <pt x="623" y="625" on="1"/>
        <pt x="605" y="571" on="1"/>
        <pt x="549" y="595" on="0"/>
        <pt x="451" y="617" on="0"/>
        <pt x="403" y="617" on="1"/>
        <pt x="327" y="617" on="0"/>
        <pt x="241" y="556" on="0"/>
        <pt x="241" y="503" on="1"/>
        <pt x="241" y="466" on="0"/>
        <pt x="277" y="415" on="0"/>
        <pt x="318" y="392" on="1"/>
        <pt x="408" y="341" on="1"/>
        <pt x="471" y="305" on="0"/>
        <pt x="524" y="234" on="0"/>
        <pt x="524" y="177" on="1"/>
        <pt x="524" y="89" on="0"/>
        <pt x="395" y="-13" on="0"/>
        <pt x="284" y="-13" on="1"/>
        <pt x="258" y="-13" on="1"/>
        <pt x="226" y="-66" on="1"/>
        <pt x="302" y="-78" on="0"/>
        <pt x="360" y="-112" on="0"/>
        <pt x="360" y="-151" on="1"/>
        <pt x="360" y="-192" on="0"/>
        <pt x="304" y="-233" on="0"/>
        <pt x="239" y="-247" on="1"/>
        <pt x="207" y="-253" on="0"/>
        <pt x="123" y="-265" on="0"/>
        <pt x="69" y="-270" on="1"/>
        <pt x="69" y="-221" on="1"/>
        <pt x="108" y="-217" on="0"/>
        <pt x="170" y="-210" on="0"/>
        <pt x="194" y="-207" on="1"/>
        <pt x="250" y="-198" on="0"/>
        <pt x="296" y="-177" on="0"/>
        <pt x="296" y="-155" on="1"/>
        <pt x="296" y="-135" on="0"/>
        <pt x="240" y="-116" on="0"/>
        <pt x="163" y="-108" on="1"/>
        <pt x="160" y="-98" on="1"/>
        <pt x="218" y="-9" on="1"/>
        <pt x="173" y="-2" on="0"/>
        <pt x="85" y="30" on="0"/>
        <pt x="33" y="59" on="1"/>
        <pt x="60" y="110" on="1"/>
        <pt x="127" y="72" on="0"/>
        <pt x="234" y="38" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 25 values pushed */
          35 55 54 3 45 44 23 10 26 27 7 6 30 3 8 13 56 0 34 9 114 20 13 3 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni015F" xMin="46" yMin="-270" xMax="554" yMax="468">
      <contour>
        <pt x="480" y="118" on="1"/>
        <pt x="480" y="56" on="0"/>
        <pt x="380" y="-9" on="0"/>
        <pt x="283" y="-9" on="1"/>
        <pt x="276" y="-9" on="0"/>
        <pt x="263" y="-9" on="0"/>
        <pt x="256" y="-9" on="1"/>
        <pt x="220" y="-66" on="1"/>
        <pt x="296" y="-78" on="0"/>
        <pt x="354" y="-112" on="0"/>
        <pt x="354" y="-151" on="1"/>
        <pt x="354" y="-192" on="0"/>
        <pt x="298" y="-233" on="0"/>
        <pt x="233" y="-247" on="1"/>
        <pt x="201" y="-253" on="0"/>
        <pt x="117" y="-265" on="0"/>
        <pt x="63" y="-270" on="1"/>
        <pt x="63" y="-221" on="1"/>
        <pt x="102" y="-217" on="0"/>
        <pt x="164" y="-210" on="0"/>
        <pt x="188" y="-207" on="1"/>
        <pt x="244" y="-198" on="0"/>
        <pt x="290" y="-177" on="0"/>
        <pt x="290" y="-155" on="1"/>
        <pt x="290" y="-135" on="0"/>
        <pt x="234" y="-116" on="0"/>
        <pt x="157" y="-108" on="1"/>
        <pt x="154" y="-98" on="1"/>
        <pt x="214" y="-6" on="1"/>
        <pt x="178" y="-3" on="0"/>
        <pt x="97" y="12" on="0"/>
        <pt x="46" y="26" on="1"/>
        <pt x="63" y="79" on="1"/>
        <pt x="121" y="60" on="0"/>
        <pt x="231" y="42" on="0"/>
        <pt x="286" y="42" on="1"/>
        <pt x="352" y="42" on="0"/>
        <pt x="420" y="78" on="0"/>
        <pt x="420" y="112" on="1"/>
        <pt x="420" y="138" on="0"/>
        <pt x="387" y="171" on="0"/>
        <pt x="343" y="192" on="1"/>
        <pt x="277" y="223" on="1"/>
        <pt x="207" y="256" on="0"/>
        <pt x="151" y="311" on="0"/>
        <pt x="151" y="352" on="1"/>
        <pt x="151" y="409" on="0"/>
        <pt x="247" y="468" on="0"/>
        <pt x="340" y="468" on="1"/>
        <pt x="384" y="468" on="0"/>
        <pt x="501" y="450" on="0"/>
        <pt x="554" y="435" on="1"/>
        <pt x="539" y="383" on="1"/>
        <pt x="487" y="400" on="0"/>
        <pt x="386" y="417" on="0"/>
        <pt x="340" y="417" on="1"/>
        <pt x="275" y="417" on="0"/>
        <pt x="211" y="388" on="0"/>
        <pt x="211" y="358" on="1"/>
        <pt x="211" y="333" on="0"/>
        <pt x="242" y="303" on="0"/>
        <pt x="289" y="280" on="1"/>
        <pt x="355" y="248" on="1"/>
        <pt x="433" y="210" on="0"/>
        <pt x="480" y="161" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 29 values pushed */
          38 0 41 42 62 61 45 58 8 3 55 48 7 114 23 10 26 27 7 5 17 16 28 6 6
          35 3 11 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0162" xMin="66" yMin="-265" xMax="677" yMax="655">
      <contour>
        <pt x="381" y="604" on="1"/>
        <pt x="160" y="604" on="1"/>
        <pt x="175" y="655" on="1"/>
        <pt x="677" y="655" on="1"/>
        <pt x="662" y="604" on="1"/>
        <pt x="442" y="604" on="1"/>
        <pt x="269" y="0" on="1"/>
        <pt x="261" y="0" on="1"/>
        <pt x="223" y="-61" on="1"/>
        <pt x="299" y="-73" on="0"/>
        <pt x="357" y="-107" on="0"/>
        <pt x="357" y="-146" on="1"/>
        <pt x="357" y="-187" on="0"/>
        <pt x="301" y="-228" on="0"/>
        <pt x="236" y="-242" on="1"/>
        <pt x="204" y="-248" on="0"/>
        <pt x="120" y="-260" on="0"/>
        <pt x="66" y="-265" on="1"/>
        <pt x="66" y="-216" on="1"/>
        <pt x="105" y="-212" on="0"/>
        <pt x="167" y="-205" on="0"/>
        <pt x="191" y="-202" on="1"/>
        <pt x="247" y="-193" on="0"/>
        <pt x="293" y="-172" on="0"/>
        <pt x="293" y="-150" on="1"/>
        <pt x="293" y="-130" on="0"/>
        <pt x="237" y="-111" on="0"/>
        <pt x="160" y="-103" on="1"/>
        <pt x="157" y="-93" on="1"/>
        <pt x="217" y="0" on="1"/>
        <pt x="208" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          14 24 11 27 28 8 6 18 17 7 30 8 114 5 1 1 2 2 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0163" xMin="84" yMin="-265" xMax="565" yMax="637">
      <contour>
        <pt x="175" y="-93" on="1"/>
        <pt x="248" y="19" on="1"/>
        <pt x="221" y="33" on="0"/>
        <pt x="193" y="82" on="0"/>
        <pt x="193" y="116" on="1"/>
        <pt x="193" y="135" on="0"/>
        <pt x="207" y="193" on="0"/>
        <pt x="221" y="232" on="1"/>
        <pt x="286" y="410" on="1"/>
        <pt x="116" y="410" on="1"/>
        <pt x="130" y="460" on="1"/>
        <pt x="305" y="460" on="1"/>
        <pt x="370" y="637" on="1"/>
        <pt x="429" y="637" on="1"/>
        <pt x="364" y="460" on="1"/>
        <pt x="565" y="460" on="1"/>
        <pt x="551" y="410" on="1"/>
        <pt x="346" y="410" on="1"/>
        <pt x="276" y="220" on="1"/>
        <pt x="264" y="188" on="0"/>
        <pt x="253" y="139" on="0"/>
        <pt x="253" y="121" on="1"/>
        <pt x="253" y="87" on="0"/>
        <pt x="296" y="52" on="0"/>
        <pt x="342" y="50" on="1"/>
        <pt x="467" y="43" on="1"/>
        <pt x="453" y="-8" on="1"/>
        <pt x="348" y="-4" on="1"/>
        <pt x="329" y="-3" on="0"/>
        <pt x="296" y="1" on="0"/>
        <pt x="282" y="5" on="1"/>
        <pt x="241" y="-61" on="1"/>
        <pt x="317" y="-73" on="0"/>
        <pt x="375" y="-107" on="0"/>
        <pt x="375" y="-146" on="1"/>
        <pt x="375" y="-187" on="0"/>
        <pt x="319" y="-228" on="0"/>
        <pt x="254" y="-242" on="1"/>
        <pt x="222" y="-248" on="0"/>
        <pt x="138" y="-260" on="0"/>
        <pt x="84" y="-265" on="1"/>
        <pt x="84" y="-216" on="1"/>
        <pt x="123" y="-212" on="0"/>
        <pt x="185" y="-205" on="0"/>
        <pt x="209" y="-202" on="1"/>
        <pt x="265" y="-193" on="0"/>
        <pt x="311" y="-172" on="0"/>
        <pt x="311" y="-150" on="1"/>
        <pt x="311" y="-130" on="0"/>
        <pt x="255" y="-111" on="0"/>
        <pt x="178" y="-103" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 23 values pushed */
          50 0 31 3 41 40 1 30 30 27 27 25 26 10 114 17 9 9 14 12 10 6 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni018F" xMin="64" yMin="-15" xMax="599" yMax="664">
      <contour>
        <pt x="599" y="480" on="1"/>
        <pt x="599" y="443" on="0"/>
        <pt x="584" y="355" on="0"/>
        <pt x="569" y="302" on="1"/>
        <pt x="523" y="143" on="0"/>
        <pt x="362" y="-15" on="0"/>
        <pt x="243" y="-15" on="1"/>
        <pt x="156" y="-15" on="0"/>
        <pt x="64" y="68" on="0"/>
        <pt x="64" y="147" on="1"/>
        <pt x="64" y="194" on="0"/>
        <pt x="87" y="306" on="0"/>
        <pt x="110" y="369" on="1"/>
        <pt x="522" y="369" on="1"/>
        <pt x="529" y="403" on="0"/>
        <pt x="537" y="459" on="0"/>
        <pt x="537" y="482" on="1"/>
        <pt x="537" y="551" on="0"/>
        <pt x="465" y="613" on="0"/>
        <pt x="380" y="613" on="1"/>
        <pt x="353" y="613" on="0"/>
        <pt x="287" y="605" on="0"/>
        <pt x="254" y="598" on="1"/>
        <pt x="277" y="653" on="1"/>
        <pt x="307" y="659" on="0"/>
        <pt x="356" y="664" on="0"/>
        <pt x="383" y="664" on="1"/>
        <pt x="494" y="664" on="0"/>
        <pt x="599" y="574" on="0"/>
      </contour>
      <contour>
        <pt x="126" y="154" on="1"/>
        <pt x="126" y="93" on="0"/>
        <pt x="182" y="36" on="0"/>
        <pt x="243" y="36" on="1"/>
        <pt x="339" y="36" on="0"/>
        <pt x="464" y="171" on="0"/>
        <pt x="508" y="318" on="1"/>
        <pt x="154" y="318" on="1"/>
        <pt x="140" y="274" on="0"/>
        <pt x="126" y="191" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          12 36 36 6 19 26 3 114 32 6 9 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01CD" xMin="-20" yMin="0" xMax="656" yMax="920">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 11 3 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01CE" xMin="39" yMin="-5" xMax="622" yMax="746">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 60 40 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01CF" xMin="73" yMin="0" xMax="671" yMax="920">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01D0" xMin="57" yMin="0" xMax="640" yMax="741">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C" x="317" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 10 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01D1" xMin="61" yMin="-15" xMax="658" yMax="925">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 36 3 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01D2" xMin="58" yMin="-15" xMax="621" yMax="746">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 30 6 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01D3" xMin="74" yMin="-15" xMax="669" yMax="915">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C.cap" x="305" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 24 4 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01D4" xMin="68" yMin="-5" xMax="627" yMax="730">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C" x="304" y="-11" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 26 24 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01D5" xMin="74" yMin="-15" xMax="694" yMax="1006">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni00A80304.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          3 2 1 31 16 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01D6" xMin="68" yMin="-5" xMax="607" yMax="776">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni00A80304" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          3 2 1 33 12 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01D7" xMin="74" yMin="-15" xMax="714" yMax="1069">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni00A80301.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          3 2 1 31 16 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01D8" xMin="68" yMin="-5" xMax="647" yMax="875">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni00A80301" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          3 2 1 33 12 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01D9" xMin="74" yMin="-15" xMax="725" yMax="1071">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni00A8030C.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          3 2 1 34 16 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01DA" xMin="68" yMin="-5" xMax="672" yMax="894">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni00A8030C" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          3 2 1 36 12 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01DB" xMin="74" yMin="-15" xMax="661" yMax="1066">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni00A80300.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          3 2 1 31 16 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01DC" xMin="68" yMin="-5" xMax="583" yMax="870">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni00A80300" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          3 2 1 33 12 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01EA" xMin="61" yMin="-240" xMax="606" yMax="670">
      <contour>
        <pt x="97" y="-175" on="1"/>
        <pt x="97" y="-143" on="0"/>
        <pt x="150" y="-73" on="0"/>
        <pt x="218" y="-12" on="1"/>
        <pt x="142" y="0" on="0"/>
        <pt x="61" y="112" on="0"/>
        <pt x="61" y="206" on="1"/>
        <pt x="61" y="244" on="0"/>
        <pt x="73" y="328" on="0"/>
        <pt x="84" y="366" on="1"/>
        <pt x="123" y="501" on="0"/>
        <pt x="300" y="670" on="0"/>
        <pt x="407" y="670" on="1"/>
        <pt x="502" y="670" on="0"/>
        <pt x="606" y="556" on="0"/>
        <pt x="606" y="449" on="1"/>
        <pt x="606" y="411" on="0"/>
        <pt x="594" y="327" on="0"/>
        <pt x="583" y="289" on="1"/>
        <pt x="544" y="153" on="0"/>
        <pt x="366" y="-15" on="0"/>
        <pt x="257" y="-15" on="1"/>
        <pt x="207" y="-68" on="0"/>
        <pt x="159" y="-137" on="0"/>
        <pt x="159" y="-163" on="1"/>
        <pt x="159" y="-178" on="0"/>
        <pt x="184" y="-191" on="0"/>
        <pt x="215" y="-193" on="1"/>
        <pt x="280" y="-197" on="1"/>
        <pt x="264" y="-240" on="1"/>
        <pt x="189" y="-236" on="1"/>
        <pt x="139" y="-233" on="0"/>
        <pt x="97" y="-206" on="0"/>
      </contour>
      <contour>
        <pt x="124" y="203" on="1"/>
        <pt x="124" y="122" on="0"/>
        <pt x="196" y="36" on="0"/>
        <pt x="263" y="36" on="1"/>
        <pt x="347" y="36" on="0"/>
        <pt x="486" y="176" on="0"/>
        <pt x="519" y="290" on="1"/>
        <pt x="531" y="330" on="0"/>
        <pt x="543" y="415" on="0"/>
        <pt x="543" y="452" on="1"/>
        <pt x="543" y="533" on="0"/>
        <pt x="471" y="619" on="0"/>
        <pt x="404" y="619" on="1"/>
        <pt x="320" y="619" on="0"/>
        <pt x="181" y="479" on="0"/>
        <pt x="148" y="365" on="1"/>
        <pt x="136" y="325" on="0"/>
        <pt x="124" y="240" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          28 29 36 3 21 9 114 45 12 3 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01EB" xMin="58" yMin="-240" xMax="556" yMax="475">
      <contour>
        <pt x="97" y="-175" on="1"/>
        <pt x="97" y="-143" on="0"/>
        <pt x="150" y="-73" on="0"/>
        <pt x="218" y="-12" on="1"/>
        <pt x="145" y="0" on="0"/>
        <pt x="58" y="109" on="0"/>
        <pt x="58" y="187" on="1"/>
        <pt x="58" y="243" on="0"/>
        <pt x="105" y="351" on="0"/>
        <pt x="147" y="392" on="1"/>
        <pt x="189" y="432" on="0"/>
        <pt x="296" y="475" on="0"/>
        <pt x="356" y="475" on="1"/>
        <pt x="446" y="475" on="0"/>
        <pt x="556" y="362" on="0"/>
        <pt x="556" y="273" on="1"/>
        <pt x="556" y="217" on="0"/>
        <pt x="509" y="109" on="0"/>
        <pt x="466" y="68" on="1"/>
        <pt x="425" y="28" on="0"/>
        <pt x="317" y="-15" on="0"/>
        <pt x="257" y="-15" on="1"/>
        <pt x="207" y="-68" on="0"/>
        <pt x="159" y="-137" on="0"/>
        <pt x="159" y="-163" on="1"/>
        <pt x="159" y="-178" on="0"/>
        <pt x="184" y="-191" on="0"/>
        <pt x="215" y="-193" on="1"/>
        <pt x="280" y="-197" on="1"/>
        <pt x="264" y="-240" on="1"/>
        <pt x="189" y="-236" on="1"/>
        <pt x="139" y="-233" on="0"/>
        <pt x="97" y="-206" on="0"/>
      </contour>
      <contour>
        <pt x="118" y="185" on="1"/>
        <pt x="118" y="119" on="0"/>
        <pt x="200" y="34" on="0"/>
        <pt x="263" y="34" on="1"/>
        <pt x="356" y="34" on="0"/>
        <pt x="496" y="179" on="0"/>
        <pt x="496" y="275" on="1"/>
        <pt x="496" y="341" on="0"/>
        <pt x="414" y="426" on="0"/>
        <pt x="351" y="426" on="1"/>
        <pt x="258" y="426" on="0"/>
        <pt x="118" y="281" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 13 values pushed */
          3 36 36 28 29 128 21 11 114 42 12 7 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01F0" xMin="-32" yMin="-239" xMax="690" yMax="741">
      <component glyphName="uni0237" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C" x="367" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 20 19 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01F8" xMin="31" yMin="0" xMax="639" yMax="908">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300.cap" x="311" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 6 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01F9" xMin="37" yMin="0" xMax="546" yMax="734">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300" x="305" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 28 5 1 1 69 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0218" xMin="33" yMin="-290" xMax="623" yMax="668">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="310" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0219" xMin="46" yMin="-295" xMax="554" yMax="468">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="297" y="-5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni021A" xMin="65" yMin="-290" xMax="677" yMax="655">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="308" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni021B" xMin="92" yMin="-290" xMax="565" yMax="637">
      <component glyphName="t" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0326" x="335" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0226" xMin="-20" yMin="0" xMax="517" yMax="860">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 14 3 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0227" xMin="39" yMin="-5" xMax="523" yMax="664">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 63 40 1 1 93 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni022E" xMin="61" yMin="-15" xMax="606" yMax="865">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 39 3 1 1 86 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni022F" xMin="58" yMin="-15" xMax="556" yMax="664">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 33 6 1 1 86 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0232" xMin="175" yMin="0" xMax="683" yMax="821">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 10 6 1 1 116 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0233" xMin="-77" yMin="-233" xMax="611" yMax="626">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304" x="312" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 17 12 1 1 116 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0237" xMin="-32" yMin="-239" xMax="464" yMax="460">
      <contour>
        <pt x="464" y="460" on="1"/>
        <pt x="334" y="8" on="1"/>
        <pt x="310" y="-76" on="0"/>
        <pt x="268" y="-157" on="0"/>
        <pt x="240" y="-180" on="1"/>
        <pt x="210" y="-203" on="0"/>
        <pt x="117" y="-228" on="0"/>
        <pt x="36" y="-234" on="1"/>
        <pt x="-32" y="-239" on="1"/>
        <pt x="-32" y="-188" on="1"/>
        <pt x="33" y="-184" on="1"/>
        <pt x="95" y="-180" on="0"/>
        <pt x="173" y="-159" on="0"/>
        <pt x="198" y="-138" on="1"/>
        <pt x="223" y="-119" on="0"/>
        <pt x="259" y="-51" on="0"/>
        <pt x="277" y="13" on="1"/>
        <pt x="391" y="410" on="1"/>
        <pt x="180" y="410" on="1"/>
        <pt x="194" y="460" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          18 19 6 114 9 8 15 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0259" xMin="44" yMin="-15" xMax="537" yMax="465">
      <contour>
        <pt x="202" y="416" on="1"/>
        <pt x="218" y="465" on="1"/>
        <pt x="306" y="465" on="0"/>
        <pt x="428" y="450" on="0"/>
        <pt x="465" y="432" on="1"/>
        <pt x="504" y="413" on="0"/>
        <pt x="537" y="350" on="0"/>
        <pt x="537" y="302" on="1"/>
        <pt x="537" y="241" on="0"/>
        <pt x="483" y="123" on="0"/>
        <pt x="434" y="77" on="1"/>
        <pt x="387" y="33" on="0"/>
        <pt x="267" y="-15" on="0"/>
        <pt x="203" y="-15" on="1"/>
        <pt x="130" y="-15" on="0"/>
        <pt x="44" y="49" on="0"/>
        <pt x="44" y="102" on="1"/>
        <pt x="44" y="173" on="0"/>
        <pt x="168" y="243" on="0"/>
        <pt x="304" y="256" on="1"/>
        <pt x="473" y="271" on="1"/>
        <pt x="474" y="279" on="0"/>
        <pt x="475" y="293" on="0"/>
        <pt x="475" y="300" on="1"/>
        <pt x="475" y="373" on="0"/>
        <pt x="345" y="416" on="0"/>
      </contour>
      <contour>
        <pt x="106" y="102" on="1"/>
        <pt x="106" y="73" on="0"/>
        <pt x="159" y="35" on="0"/>
        <pt x="203" y="35" on="1"/>
        <pt x="290" y="35" on="0"/>
        <pt x="437" y="144" on="0"/>
        <pt x="463" y="227" on="1"/>
        <pt x="307" y="212" on="1"/>
        <pt x="206" y="202" on="0"/>
        <pt x="106" y="148" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          19 20 20 34 33 33 1 30 13 11 114 0 1 7 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02B9" xMin="326" yMin="426" xMax="487" yMax="710">
      <component glyphName="quotesingle" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="uni02BA" xMin="203" yMin="426" xMax="610" yMax="710">
      <component glyphName="quotedbl" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="uni02BB" xMin="289" yMin="456" xMax="560" yMax="710">
      <component glyphName="quoteleft" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="uni02BC" xMin="257" yMin="456" xMax="528" yMax="710">
      <component glyphName="quoteright" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="uni02BE" xMin="178" yMin="315" xMax="512" yMax="725">
      <contour>
        <pt x="449" y="395" on="1"/>
        <pt x="406" y="352" on="0"/>
        <pt x="279" y="315" on="0"/>
        <pt x="178" y="315" on="1"/>
        <pt x="196" y="377" on="1"/>
        <pt x="317" y="377" on="0"/>
        <pt x="434" y="469" on="0"/>
        <pt x="434" y="565" on="1"/>
        <pt x="434" y="614" on="0"/>
        <pt x="356" y="663" on="0"/>
        <pt x="278" y="663" on="1"/>
        <pt x="296" y="725" on="1"/>
        <pt x="404" y="725" on="0"/>
        <pt x="512" y="642" on="0"/>
        <pt x="512" y="560" on="1"/>
        <pt x="512" y="510" on="0"/>
        <pt x="480" y="426" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          4 3 10 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02BF" xMin="226" yMin="315" xMax="560" yMax="725">
      <contour>
        <pt x="289" y="645" on="1"/>
        <pt x="332" y="688" on="0"/>
        <pt x="459" y="725" on="0"/>
        <pt x="560" y="725" on="1"/>
        <pt x="542" y="663" on="1"/>
        <pt x="421" y="663" on="0"/>
        <pt x="304" y="571" on="0"/>
        <pt x="304" y="475" on="1"/>
        <pt x="304" y="426" on="0"/>
        <pt x="382" y="377" on="0"/>
        <pt x="460" y="377" on="1"/>
        <pt x="442" y="315" on="1"/>
        <pt x="334" y="315" on="0"/>
        <pt x="226" y="398" on="0"/>
        <pt x="226" y="480" on="1"/>
        <pt x="226" y="530" on="0"/>
        <pt x="258" y="614" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          10 11 4 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02C60300" xMin="-87" yMin="536" xMax="353" yMax="853">
      <contour>
        <pt x="254" y="853" on="1"/>
        <pt x="353" y="727" on="1"/>
        <pt x="321" y="702" on="1"/>
        <pt x="207" y="816" on="1"/>
      </contour>
      <contour>
        <pt x="-65" y="536" on="1"/>
        <pt x="-87" y="567" on="1"/>
        <pt x="118" y="731" on="1"/>
        <pt x="154" y="731" on="1"/>
        <pt x="277" y="558" on="1"/>
        <pt x="241" y="536" on="1"/>
        <pt x="127" y="672" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 13 values pushed */
          10 5 8 3 4 6 0 2 2 6 128 9 4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02C60300.cap" xMin="-31" yMin="732" xMax="424" yMax="1037">
      <contour>
        <pt x="297" y="1037" on="1"/>
        <pt x="424" y="924" on="1"/>
        <pt x="397" y="893" on="1"/>
        <pt x="256" y="993" on="1"/>
      </contour>
      <contour>
        <pt x="-9" y="732" on="1"/>
        <pt x="-31" y="762" on="1"/>
        <pt x="165" y="901" on="1"/>
        <pt x="201" y="901" on="1"/>
        <pt x="332" y="758" on="1"/>
        <pt x="297" y="732" on="1"/>
        <pt x="176" y="844" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          10 5 8 3 4 6 1 3 0 2 2 6 128 9 4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02C60301" xMin="-87" yMin="536" xMax="443" yMax="861">
      <contour>
        <pt x="263" y="702" on="1"/>
        <pt x="241" y="735" on="1"/>
        <pt x="412" y="861" on="1"/>
        <pt x="443" y="816" on="1"/>
      </contour>
      <contour>
        <pt x="-65" y="536" on="1"/>
        <pt x="-87" y="567" on="1"/>
        <pt x="118" y="731" on="1"/>
        <pt x="154" y="731" on="1"/>
        <pt x="277" y="558" on="1"/>
        <pt x="241" y="536" on="1"/>
        <pt x="127" y="672" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          10 5 8 3 4 6 1 3 2 128 0 0 6 9 4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02C60301.cap" xMin="-31" yMin="732" xMax="498" yMax="1033">
      <contour>
        <pt x="318" y="893" on="1"/>
        <pt x="297" y="928" on="1"/>
        <pt x="471" y="1033" on="1"/>
        <pt x="498" y="985" on="1"/>
      </contour>
      <contour>
        <pt x="-9" y="732" on="1"/>
        <pt x="-31" y="762" on="1"/>
        <pt x="165" y="901" on="1"/>
        <pt x="201" y="901" on="1"/>
        <pt x="332" y="758" on="1"/>
        <pt x="297" y="732" on="1"/>
        <pt x="176" y="844" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          8 5 10 3 6 4 1 3 2 0 0 6 128 9 4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02C60303" xMin="-87" yMin="536" xMax="370" yMax="913">
      <contour>
        <pt x="115" y="904" on="1"/>
        <pt x="133" y="904" on="0"/>
        <pt x="164" y="880" on="0"/>
        <pt x="189" y="849" on="1"/>
        <pt x="211" y="822" on="0"/>
        <pt x="227" y="809" on="0"/>
        <pt x="236" y="809" on="1"/>
        <pt x="251" y="809" on="0"/>
        <pt x="292" y="855" on="0"/>
        <pt x="332" y="913" on="1"/>
        <pt x="370" y="892" on="1"/>
        <pt x="320" y="815" on="0"/>
        <pt x="259" y="755" on="0"/>
        <pt x="228" y="755" on="1"/>
        <pt x="211" y="755" on="0"/>
        <pt x="181" y="778" on="0"/>
        <pt x="154" y="810" on="1"/>
        <pt x="133" y="836" on="0"/>
        <pt x="117" y="850" on="0"/>
        <pt x="108" y="850" on="1"/>
        <pt x="93" y="850" on="0"/>
        <pt x="56" y="809" on="0"/>
        <pt x="22" y="759" on="1"/>
        <pt x="-14" y="782" on="1"/>
        <pt x="31" y="850" on="0"/>
        <pt x="86" y="904" on="0"/>
      </contour>
      <contour>
        <pt x="-65" y="536" on="1"/>
        <pt x="-87" y="567" on="1"/>
        <pt x="118" y="731" on="1"/>
        <pt x="154" y="731" on="1"/>
        <pt x="277" y="558" on="1"/>
        <pt x="241" y="536" on="1"/>
        <pt x="127" y="672" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          32 27 30 3 26 28 19 9 0 128 22 6 13 13 28 31 26
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02C60303.cap" xMin="-31" yMin="732" xMax="438" yMax="1084">
      <contour>
        <pt x="180" y="1073" on="1"/>
        <pt x="202" y="1073" on="0"/>
        <pt x="234" y="1050" on="0"/>
        <pt x="257" y="1020" on="1"/>
        <pt x="279" y="993" on="0"/>
        <pt x="295" y="980" on="0"/>
        <pt x="304" y="980" on="1"/>
        <pt x="321" y="980" on="0"/>
        <pt x="364" y="1027" on="0"/>
        <pt x="403" y="1084" on="1"/>
        <pt x="438" y="1062" on="1"/>
        <pt x="386" y="984" on="0"/>
        <pt x="332" y="928" on="0"/>
        <pt x="305" y="928" on="1"/>
        <pt x="283" y="928" on="0"/>
        <pt x="249" y="952" on="0"/>
        <pt x="225" y="981" on="1"/>
        <pt x="204" y="1007" on="0"/>
        <pt x="188" y="1021" on="0"/>
        <pt x="179" y="1021" on="1"/>
        <pt x="163" y="1021" on="0"/>
        <pt x="123" y="979" on="0"/>
        <pt x="90" y="930" on="1"/>
        <pt x="54" y="948" on="1"/>
        <pt x="100" y="1019" on="0"/>
        <pt x="153" y="1073" on="0"/>
      </contour>
      <contour>
        <pt x="-9" y="732" on="1"/>
        <pt x="-31" y="762" on="1"/>
        <pt x="165" y="901" on="1"/>
        <pt x="201" y="901" on="1"/>
        <pt x="332" y="758" on="1"/>
        <pt x="297" y="732" on="1"/>
        <pt x="176" y="844" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 29 values pushed */
          30 27 32 3 28 26 23 22 22 13 10 9 9 19 0 128 6 111 13 127 13 143 13 3 13
          13 28 31 26
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02C60309" xMin="-87" yMin="536" xMax="458" yMax="897">
      <contour>
        <pt x="458" y="812" on="1"/>
        <pt x="458" y="773" on="0"/>
        <pt x="353" y="720" on="0"/>
        <pt x="250" y="706" on="1"/>
        <pt x="244" y="741" on="1"/>
        <pt x="245" y="743" on="1"/>
        <pt x="327" y="759" on="0"/>
        <pt x="397" y="788" on="0"/>
        <pt x="397" y="806" on="1"/>
        <pt x="397" y="822" on="0"/>
        <pt x="336" y="845" on="0"/>
        <pt x="264" y="858" on="1"/>
        <pt x="264" y="861" on="1"/>
        <pt x="308" y="897" on="1"/>
        <pt x="389" y="884" on="0"/>
        <pt x="458" y="845" on="0"/>
      </contour>
      <contour>
        <pt x="-65" y="536" on="1"/>
        <pt x="-87" y="567" on="1"/>
        <pt x="118" y="731" on="1"/>
        <pt x="154" y="731" on="1"/>
        <pt x="277" y="558" on="1"/>
        <pt x="241" y="536" on="1"/>
        <pt x="127" y="672" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          22 17 20 3 16 18 11 12 13 5 4 3 3 18 128 21 16
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02C60309.cap" xMin="-31" yMin="732" xMax="488" yMax="1066">
      <contour>
        <pt x="488" y="984" on="1"/>
        <pt x="488" y="945" on="0"/>
        <pt x="400" y="905" on="0"/>
        <pt x="293" y="892" on="1"/>
        <pt x="288" y="924" on="1"/>
        <pt x="289" y="926" on="1"/>
        <pt x="365" y="938" on="0"/>
        <pt x="429" y="959" on="0"/>
        <pt x="429" y="977" on="1"/>
        <pt x="429" y="991" on="0"/>
        <pt x="363" y="1012" on="0"/>
        <pt x="275" y="1027" on="1"/>
        <pt x="275" y="1030" on="1"/>
        <pt x="319" y="1066" on="1"/>
        <pt x="410" y="1051" on="0"/>
        <pt x="488" y="1013" on="0"/>
      </contour>
      <contour>
        <pt x="-9" y="732" on="1"/>
        <pt x="-31" y="762" on="1"/>
        <pt x="165" y="901" on="1"/>
        <pt x="201" y="901" on="1"/>
        <pt x="332" y="758" on="1"/>
        <pt x="297" y="732" on="1"/>
        <pt x="176" y="844" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          22 17 20 3 16 18 12 11 13 5 4 3 3 18 21 16
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02C8" xMin="297" yMin="323" xMax="483" yMax="715">
      <contour>
        <pt x="483" y="715" on="1"/>
        <pt x="371" y="323" on="1"/>
        <pt x="297" y="323" on="1"/>
        <pt x="409" y="715" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          2 3 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02CC" xMin="297" yMin="-230" xMax="483" yMax="162">
      <component glyphName="uni02C8" x="0" y="-553" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni02CD" xMin="27" yMin="-166" xMax="370" yMax="-116">
      <component glyphName="uni0331" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni02D80300" xMin="-36" yMin="536" xMax="319" yMax="904">
      <contour>
        <pt x="37" y="904" on="1"/>
        <pt x="213" y="758" on="1"/>
        <pt x="187" y="728" on="1"/>
        <pt x="-3" y="861" on="1"/>
      </contour>
      <contour>
        <pt x="102" y="586" on="1"/>
        <pt x="150" y="586" on="0"/>
        <pt x="233" y="649" on="0"/>
        <pt x="277" y="720" on="1"/>
        <pt x="319" y="703" on="1"/>
        <pt x="270" y="614" on="0"/>
        <pt x="166" y="536" on="0"/>
        <pt x="96" y="536" on="1"/>
        <pt x="24" y="536" on="0"/>
        <pt x="-36" y="616" on="0"/>
        <pt x="-36" y="714" on="1"/>
        <pt x="3" y="720" on="1"/>
        <pt x="8" y="648" on="0"/>
        <pt x="54" y="586" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          8 7 7 14 15 11 3 1 0 64 2 128 4 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[11100]	/* MoveDirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02D80300.cap" xMin="13" yMin="731" xMax="370" yMax="1062">
      <contour>
        <pt x="80" y="1062" on="1"/>
        <pt x="262" y="916" on="1"/>
        <pt x="235" y="885" on="1"/>
        <pt x="42" y="1016" on="1"/>
      </contour>
      <contour>
        <pt x="158" y="781" on="1"/>
        <pt x="209" y="781" on="0"/>
        <pt x="290" y="835" on="0"/>
        <pt x="327" y="894" on="1"/>
        <pt x="370" y="877" on="1"/>
        <pt x="327" y="800" on="0"/>
        <pt x="225" y="731" on="0"/>
        <pt x="154" y="731" on="1"/>
        <pt x="78" y="731" on="0"/>
        <pt x="13" y="802" on="0"/>
        <pt x="13" y="885" on="1"/>
        <pt x="53" y="894" on="1"/>
        <pt x="57" y="835" on="0"/>
        <pt x="107" y="781" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          8 7 7 15 3 0 64 1 2 2 14 15 128 4 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02D80301" xMin="-36" yMin="536" xMax="360" yMax="909">
      <contour>
        <pt x="98" y="728" on="1"/>
        <pt x="75" y="763" on="1"/>
        <pt x="335" y="909" on="1"/>
        <pt x="360" y="858" on="1"/>
      </contour>
      <contour>
        <pt x="102" y="586" on="1"/>
        <pt x="150" y="586" on="0"/>
        <pt x="233" y="649" on="0"/>
        <pt x="277" y="720" on="1"/>
        <pt x="319" y="703" on="1"/>
        <pt x="270" y="614" on="0"/>
        <pt x="166" y="536" on="0"/>
        <pt x="96" y="536" on="1"/>
        <pt x="24" y="536" on="0"/>
        <pt x="-36" y="616" on="0"/>
        <pt x="-36" y="714" on="1"/>
        <pt x="3" y="720" on="1"/>
        <pt x="8" y="648" on="0"/>
        <pt x="54" y="586" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          8 7 7 14 15 11 2 64 0 128 4 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[11100]	/* MoveDirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02D80301.cap" xMin="13" yMin="731" xMax="407" yMax="1068">
      <contour>
        <pt x="407" y="1018" on="1"/>
        <pt x="139" y="887" on="1"/>
        <pt x="119" y="924" on="1"/>
        <pt x="381" y="1068" on="1"/>
      </contour>
      <contour>
        <pt x="158" y="781" on="1"/>
        <pt x="209" y="781" on="0"/>
        <pt x="290" y="835" on="0"/>
        <pt x="327" y="894" on="1"/>
        <pt x="370" y="877" on="1"/>
        <pt x="327" y="800" on="0"/>
        <pt x="225" y="731" on="0"/>
        <pt x="154" y="731" on="1"/>
        <pt x="78" y="731" on="0"/>
        <pt x="13" y="802" on="0"/>
        <pt x="13" y="885" on="1"/>
        <pt x="53" y="894" on="1"/>
        <pt x="57" y="835" on="0"/>
        <pt x="107" y="781" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          8 7 7 14 15 11 128 2 0 3 64 1 128 4 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[11100]	/* MoveDirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02D80303" xMin="-36" yMin="536" xMax="370" yMax="913">
      <contour>
        <pt x="115" y="904" on="1"/>
        <pt x="133" y="904" on="0"/>
        <pt x="164" y="880" on="0"/>
        <pt x="189" y="849" on="1"/>
        <pt x="211" y="822" on="0"/>
        <pt x="227" y="809" on="0"/>
        <pt x="236" y="809" on="1"/>
        <pt x="251" y="809" on="0"/>
        <pt x="292" y="855" on="0"/>
        <pt x="332" y="913" on="1"/>
        <pt x="370" y="892" on="1"/>
        <pt x="320" y="815" on="0"/>
        <pt x="259" y="755" on="0"/>
        <pt x="228" y="755" on="1"/>
        <pt x="211" y="755" on="0"/>
        <pt x="181" y="778" on="0"/>
        <pt x="154" y="810" on="1"/>
        <pt x="133" y="836" on="0"/>
        <pt x="117" y="850" on="0"/>
        <pt x="108" y="850" on="1"/>
        <pt x="93" y="850" on="0"/>
        <pt x="56" y="809" on="0"/>
        <pt x="22" y="759" on="1"/>
        <pt x="-14" y="782" on="1"/>
        <pt x="31" y="850" on="0"/>
        <pt x="86" y="904" on="0"/>
      </contour>
      <contour>
        <pt x="102" y="586" on="1"/>
        <pt x="150" y="586" on="0"/>
        <pt x="233" y="649" on="0"/>
        <pt x="277" y="720" on="1"/>
        <pt x="319" y="703" on="1"/>
        <pt x="270" y="614" on="0"/>
        <pt x="166" y="536" on="0"/>
        <pt x="96" y="536" on="1"/>
        <pt x="24" y="536" on="0"/>
        <pt x="-36" y="616" on="0"/>
        <pt x="-36" y="714" on="1"/>
        <pt x="3" y="720" on="1"/>
        <pt x="8" y="648" on="0"/>
        <pt x="54" y="586" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          30 29 29 37 23 22 22 13 10 9 9 19 0 128 6 13 13 36 37 26 33
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02D80303.cap" xMin="13" yMin="731" xMax="419" yMax="1084">
      <contour>
        <pt x="161" y="1073" on="1"/>
        <pt x="183" y="1073" on="0"/>
        <pt x="215" y="1050" on="0"/>
        <pt x="238" y="1020" on="1"/>
        <pt x="260" y="993" on="0"/>
        <pt x="276" y="980" on="0"/>
        <pt x="285" y="980" on="1"/>
        <pt x="302" y="980" on="0"/>
        <pt x="345" y="1027" on="0"/>
        <pt x="384" y="1084" on="1"/>
        <pt x="419" y="1062" on="1"/>
        <pt x="367" y="984" on="0"/>
        <pt x="313" y="928" on="0"/>
        <pt x="286" y="928" on="1"/>
        <pt x="264" y="928" on="0"/>
        <pt x="230" y="952" on="0"/>
        <pt x="206" y="981" on="1"/>
        <pt x="185" y="1007" on="0"/>
        <pt x="169" y="1021" on="0"/>
        <pt x="160" y="1021" on="1"/>
        <pt x="144" y="1021" on="0"/>
        <pt x="104" y="979" on="0"/>
        <pt x="71" y="930" on="1"/>
        <pt x="35" y="948" on="1"/>
        <pt x="81" y="1019" on="0"/>
        <pt x="134" y="1073" on="0"/>
      </contour>
      <contour>
        <pt x="158" y="781" on="1"/>
        <pt x="209" y="781" on="0"/>
        <pt x="290" y="835" on="0"/>
        <pt x="327" y="894" on="1"/>
        <pt x="370" y="877" on="1"/>
        <pt x="327" y="800" on="0"/>
        <pt x="225" y="731" on="0"/>
        <pt x="154" y="731" on="1"/>
        <pt x="78" y="731" on="0"/>
        <pt x="13" y="802" on="0"/>
        <pt x="13" y="885" on="1"/>
        <pt x="53" y="894" on="1"/>
        <pt x="57" y="835" on="0"/>
        <pt x="107" y="781" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          30 29 29 37 23 22 22 13 10 9 9 19 0 6 13 13 36 37 128 26 33
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02D80309" xMin="-36" yMin="536" xMax="319" yMax="919">
      <contour>
        <pt x="281" y="834" on="1"/>
        <pt x="281" y="795" on="0"/>
        <pt x="176" y="742" on="0"/>
        <pt x="73" y="728" on="1"/>
        <pt x="67" y="760" on="1"/>
        <pt x="68" y="762" on="1"/>
        <pt x="149" y="778" on="0"/>
        <pt x="220" y="808" on="0"/>
        <pt x="220" y="828" on="1"/>
        <pt x="220" y="844" on="0"/>
        <pt x="159" y="867" on="0"/>
        <pt x="87" y="880" on="1"/>
        <pt x="87" y="883" on="1"/>
        <pt x="131" y="919" on="1"/>
        <pt x="212" y="906" on="0"/>
        <pt x="281" y="867" on="0"/>
      </contour>
      <contour>
        <pt x="102" y="586" on="1"/>
        <pt x="150" y="586" on="0"/>
        <pt x="233" y="649" on="0"/>
        <pt x="277" y="720" on="1"/>
        <pt x="319" y="703" on="1"/>
        <pt x="270" y="614" on="0"/>
        <pt x="166" y="536" on="0"/>
        <pt x="96" y="536" on="1"/>
        <pt x="24" y="536" on="0"/>
        <pt x="-36" y="616" on="0"/>
        <pt x="-36" y="714" on="1"/>
        <pt x="3" y="720" on="1"/>
        <pt x="8" y="648" on="0"/>
        <pt x="54" y="586" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          20 19 19 26 27 23 12 11 13 5 4 3 16 23
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[11100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni02D80309.cap" xMin="13" yMin="731" xMax="370" yMax="1066">
      <contour>
        <pt x="311" y="984" on="1"/>
        <pt x="311" y="945" on="0"/>
        <pt x="223" y="905" on="0"/>
        <pt x="116" y="892" on="1"/>
        <pt x="111" y="924" on="1"/>
        <pt x="112" y="926" on="1"/>
        <pt x="188" y="938" on="0"/>
        <pt x="252" y="959" on="0"/>
        <pt x="252" y="977" on="1"/>
        <pt x="252" y="991" on="0"/>
        <pt x="186" y="1012" on="0"/>
        <pt x="98" y="1027" on="1"/>
        <pt x="98" y="1030" on="1"/>
        <pt x="142" y="1066" on="1"/>
        <pt x="233" y="1051" on="0"/>
        <pt x="311" y="1013" on="0"/>
      </contour>
      <contour>
        <pt x="158" y="781" on="1"/>
        <pt x="209" y="781" on="0"/>
        <pt x="290" y="835" on="0"/>
        <pt x="327" y="894" on="1"/>
        <pt x="370" y="877" on="1"/>
        <pt x="327" y="800" on="0"/>
        <pt x="225" y="731" on="0"/>
        <pt x="154" y="731" on="1"/>
        <pt x="78" y="731" on="0"/>
        <pt x="13" y="802" on="0"/>
        <pt x="13" y="885" on="1"/>
        <pt x="53" y="894" on="1"/>
        <pt x="57" y="835" on="0"/>
        <pt x="107" y="781" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          20 19 19 27 12 11 13 64 5 4 3 3 26 27 128 16 23
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0300" xMin="-24" yMin="535" xMax="172" yMax="734">
      <contour>
        <pt x="21" y="734" on="1"/>
        <pt x="172" y="563" on="1"/>
        <pt x="141" y="535" on="1"/>
        <pt x="-24" y="694" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 5 values pushed */
          1 3 0 128 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0300.cap" xMin="12" yMin="731" xMax="225" yMax="913">
      <contour>
        <pt x="52" y="913" on="1"/>
        <pt x="225" y="762" on="1"/>
        <pt x="198" y="731" on="1"/>
        <pt x="12" y="869" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 3 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0301" xMin="10" yMin="536" xMax="290" yMax="741">
      <contour>
        <pt x="34" y="536" on="1"/>
        <pt x="10" y="570" on="1"/>
        <pt x="259" y="741" on="1"/>
        <pt x="290" y="695" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 5 values pushed */
          1 3 2 128 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0301.cap" xMin="68" yMin="731" xMax="354" yMax="920">
      <contour>
        <pt x="90" y="731" on="1"/>
        <pt x="68" y="769" on="1"/>
        <pt x="327" y="920" on="1"/>
        <pt x="354" y="869" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 5 values pushed */
          1 3 2 128 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0302" xMin="-89" yMin="536" xMax="276" yMax="741">
      <contour>
        <pt x="-65" y="536" on="1"/>
        <pt x="-89" y="567" on="1"/>
        <pt x="123" y="741" on="1"/>
        <pt x="159" y="741" on="1"/>
        <pt x="276" y="558" on="1"/>
        <pt x="241" y="536" on="1"/>
        <pt x="129" y="682" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          4 1 6 3 2 5 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0302.cap" xMin="-31" yMin="732" xMax="333" yMax="921">
      <contour>
        <pt x="-9" y="732" on="1"/>
        <pt x="-31" y="762" on="1"/>
        <pt x="169" y="921" on="1"/>
        <pt x="205" y="921" on="1"/>
        <pt x="333" y="757" on="1"/>
        <pt x="297" y="732" on="1"/>
        <pt x="182" y="863" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          4 1 6 3 2 5 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0303" xMin="-106" yMin="536" xMax="333" yMax="726">
      <contour>
        <pt x="175" y="536" on="1"/>
        <pt x="154" y="536" on="0"/>
        <pt x="118" y="571" on="0"/>
        <pt x="93" y="613" on="1"/>
        <pt x="72" y="648" on="0"/>
        <pt x="54" y="670" on="0"/>
        <pt x="44" y="670" on="1"/>
        <pt x="29" y="670" on="0"/>
        <pt x="-16" y="614" on="0"/>
        <pt x="-66" y="536" on="1"/>
        <pt x="-106" y="556" on="1"/>
        <pt x="-44" y="655" on="0"/>
        <pt x="19" y="726" on="0"/>
        <pt x="51" y="726" on="1"/>
        <pt x="72" y="726" on="0"/>
        <pt x="108" y="691" on="0"/>
        <pt x="133" y="649" on="1"/>
        <pt x="154" y="614" on="0"/>
        <pt x="172" y="592" on="0"/>
        <pt x="182" y="592" on="1"/>
        <pt x="197" y="592" on="0"/>
        <pt x="240" y="646" on="0"/>
        <pt x="292" y="726" on="1"/>
        <pt x="333" y="707" on="1"/>
        <pt x="271" y="608" on="0"/>
        <pt x="207" y="536" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          23 22 22 6 13 128 10 9 9 19 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0303.cap" xMin="-48" yMin="731" xMax="374" yMax="897">
      <contour>
        <pt x="339" y="897" on="1"/>
        <pt x="374" y="876" on="1"/>
        <pt x="317" y="792" on="0"/>
        <pt x="256" y="731" on="0"/>
        <pt x="226" y="731" on="1"/>
        <pt x="208" y="731" on="0"/>
        <pt x="174" y="760" on="0"/>
        <pt x="144" y="801" on="1"/>
        <pt x="122" y="830" on="0"/>
        <pt x="102" y="849" on="0"/>
        <pt x="92" y="849" on="1"/>
        <pt x="78" y="849" on="0"/>
        <pt x="41" y="806" on="0"/>
        <pt x="-13" y="731" on="1"/>
        <pt x="-48" y="754" on="1"/>
        <pt x="7" y="835" on="0"/>
        <pt x="69" y="897" on="0"/>
        <pt x="100" y="897" on="1"/>
        <pt x="118" y="897" on="0"/>
        <pt x="150" y="869" on="0"/>
        <pt x="182" y="827" on="1"/>
        <pt x="205" y="797" on="0"/>
        <pt x="224" y="779" on="0"/>
        <pt x="233" y="779" on="1"/>
        <pt x="247" y="779" on="0"/>
        <pt x="287" y="825" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          1 0 0 10 17 14 13 13 23 4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0304" xMin="-65" yMin="576" xMax="278" yMax="626">
      <contour>
        <pt x="263" y="576" on="1"/>
        <pt x="-65" y="576" on="1"/>
        <pt x="-50" y="626" on="1"/>
        <pt x="278" y="626" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          2 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0304.cap" xMin="-9" yMin="771" xMax="333" yMax="821">
      <contour>
        <pt x="319" y="771" on="1"/>
        <pt x="-9" y="771" on="1"/>
        <pt x="5" y="821" on="1"/>
        <pt x="333" y="821" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          2 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0306" xMin="-35" yMin="536" xMax="324" yMax="730">
      <contour>
        <pt x="102" y="586" on="1"/>
        <pt x="149" y="586" on="0"/>
        <pt x="231" y="652" on="0"/>
        <pt x="280" y="730" on="1"/>
        <pt x="324" y="716" on="1"/>
        <pt x="268" y="617" on="0"/>
        <pt x="166" y="536" on="0"/>
        <pt x="97" y="536" on="1"/>
        <pt x="26" y="536" on="0"/>
        <pt x="-35" y="621" on="0"/>
        <pt x="-35" y="720" on="1"/>
        <pt x="6" y="730" on="1"/>
        <pt x="11" y="652" on="0"/>
        <pt x="55" y="586" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          4 3 3 10 11 128 0 7
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0306.cap" xMin="18" yMin="731" xMax="374" yMax="909">
      <contour>
        <pt x="158" y="781" on="1"/>
        <pt x="207" y="781" on="0"/>
        <pt x="289" y="841" on="0"/>
        <pt x="332" y="909" on="1"/>
        <pt x="374" y="893" on="1"/>
        <pt x="326" y="806" on="0"/>
        <pt x="223" y="731" on="0"/>
        <pt x="154" y="731" on="1"/>
        <pt x="81" y="731" on="0"/>
        <pt x="18" y="809" on="0"/>
        <pt x="18" y="900" on="1"/>
        <pt x="58" y="909" on="1"/>
        <pt x="62" y="841" on="0"/>
        <pt x="109" y="781" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          4 3 3 10 11 0 7
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0307" xMin="51" yMin="556" xMax="165" yMax="659">
      <contour>
        <pt x="165" y="623" on="1"/>
        <pt x="165" y="593" on="0"/>
        <pt x="128" y="556" on="0"/>
        <pt x="98" y="556" on="1"/>
        <pt x="76" y="556" on="0"/>
        <pt x="51" y="575" on="0"/>
        <pt x="51" y="592" on="1"/>
        <pt x="51" y="619" on="0"/>
        <pt x="90" y="659" on="0"/>
        <pt x="118" y="659" on="1"/>
        <pt x="141" y="659" on="0"/>
        <pt x="165" y="641" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          9 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0307.cap" xMin="105" yMin="751" xMax="225" yMax="860">
      <contour>
        <pt x="225" y="822" on="1"/>
        <pt x="225" y="790" on="0"/>
        <pt x="187" y="751" on="0"/>
        <pt x="155" y="751" on="1"/>
        <pt x="131" y="751" on="0"/>
        <pt x="105" y="771" on="0"/>
        <pt x="105" y="790" on="1"/>
        <pt x="105" y="818" on="0"/>
        <pt x="147" y="860" on="0"/>
        <pt x="176" y="860" on="1"/>
        <pt x="199" y="860" on="0"/>
        <pt x="225" y="840" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          9 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0308" xMin="-66" yMin="556" xMax="280" yMax="655">
      <contour>
        <pt x="44" y="620" on="1"/>
        <pt x="44" y="592" on="0"/>
        <pt x="9" y="556" on="0"/>
        <pt x="-21" y="556" on="1"/>
        <pt x="-43" y="556" on="0"/>
        <pt x="-66" y="574" on="0"/>
        <pt x="-66" y="591" on="1"/>
        <pt x="-66" y="617" on="0"/>
        <pt x="-28" y="655" on="0"/>
        <pt x="-1" y="655" on="1"/>
        <pt x="21" y="655" on="0"/>
        <pt x="44" y="637" on="0"/>
      </contour>
      <contour>
        <pt x="280" y="620" on="1"/>
        <pt x="280" y="591" on="0"/>
        <pt x="244" y="556" on="0"/>
        <pt x="215" y="556" on="1"/>
        <pt x="194" y="556" on="0"/>
        <pt x="171" y="574" on="0"/>
        <pt x="171" y="591" on="1"/>
        <pt x="171" y="617" on="0"/>
        <pt x="209" y="655" on="0"/>
        <pt x="236" y="655" on="1"/>
        <pt x="257" y="655" on="0"/>
        <pt x="280" y="636" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 5 values pushed */
          21 15 15 9 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0308.cap" xMin="-27" yMin="751" xMax="356" yMax="856">
      <contour>
        <pt x="89" y="818" on="1"/>
        <pt x="89" y="789" on="0"/>
        <pt x="51" y="751" on="0"/>
        <pt x="21" y="751" on="1"/>
        <pt x="-1" y="751" on="0"/>
        <pt x="-27" y="771" on="0"/>
        <pt x="-27" y="788" on="1"/>
        <pt x="-27" y="816" on="0"/>
        <pt x="12" y="856" on="0"/>
        <pt x="41" y="856" on="1"/>
        <pt x="65" y="856" on="0"/>
        <pt x="89" y="837" on="0"/>
      </contour>
      <contour>
        <pt x="356" y="818" on="1"/>
        <pt x="356" y="789" on="0"/>
        <pt x="318" y="751" on="0"/>
        <pt x="288" y="751" on="1"/>
        <pt x="266" y="751" on="0"/>
        <pt x="240" y="771" on="0"/>
        <pt x="240" y="788" on="1"/>
        <pt x="240" y="816" on="0"/>
        <pt x="279" y="856" on="0"/>
        <pt x="308" y="856" on="1"/>
        <pt x="332" y="856" on="0"/>
        <pt x="356" y="837" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 5 values pushed */
          21 15 15 9 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0309" xMin="-7" yMin="536" xMax="224" yMax="751">
      <contour>
        <pt x="224" y="662" on="1"/>
        <pt x="224" y="608" on="0"/>
        <pt x="109" y="544" on="0"/>
        <pt x="-3" y="536" on="1"/>
        <pt x="-7" y="574" on="1"/>
        <pt x="-6" y="575" on="1"/>
        <pt x="79" y="584" on="0"/>
        <pt x="165" y="626" on="0"/>
        <pt x="165" y="658" on="1"/>
        <pt x="165" y="678" on="0"/>
        <pt x="103" y="705" on="0"/>
        <pt x="35" y="717" on="1"/>
        <pt x="35" y="720" on="1"/>
        <pt x="76" y="751" on="1"/>
        <pt x="153" y="738" on="0"/>
        <pt x="224" y="696" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          12 11 13 192 5 4 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0309.cap" xMin="72" yMin="731" xMax="319" yMax="926">
      <contour>
        <pt x="319" y="839" on="1"/>
        <pt x="319" y="793" on="0"/>
        <pt x="199" y="742" on="0"/>
        <pt x="77" y="731" on="1"/>
        <pt x="72" y="765" on="1"/>
        <pt x="72" y="767" on="1"/>
        <pt x="172" y="782" on="0"/>
        <pt x="259" y="812" on="0"/>
        <pt x="259" y="835" on="1"/>
        <pt x="259" y="851" on="0"/>
        <pt x="190" y="875" on="0"/>
        <pt x="107" y="889" on="1"/>
        <pt x="107" y="892" on="1"/>
        <pt x="151" y="926" on="1"/>
        <pt x="240" y="911" on="0"/>
        <pt x="319" y="871" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          12 11 13 192 5 4 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni030A" xMin="-21" yMin="536" xMax="265" yMax="772">
      <contour>
        <pt x="-21" y="633" on="1"/>
        <pt x="-21" y="693" on="0"/>
        <pt x="70" y="772" on="0"/>
        <pt x="141" y="772" on="1"/>
        <pt x="199" y="772" on="0"/>
        <pt x="265" y="721" on="0"/>
        <pt x="265" y="675" on="1"/>
        <pt x="265" y="615" on="0"/>
        <pt x="174" y="536" on="0"/>
        <pt x="103" y="536" on="1"/>
        <pt x="45" y="536" on="0"/>
        <pt x="-21" y="587" on="0"/>
      </contour>
      <contour>
        <pt x="27" y="634" on="1"/>
        <pt x="27" y="607" on="0"/>
        <pt x="70" y="580" on="0"/>
        <pt x="113" y="580" on="1"/>
        <pt x="157" y="580" on="0"/>
        <pt x="217" y="634" on="0"/>
        <pt x="217" y="674" on="1"/>
        <pt x="217" y="701" on="0"/>
        <pt x="174" y="728" on="0"/>
        <pt x="131" y="728" on="1"/>
        <pt x="87" y="728" on="0"/>
        <pt x="27" y="674" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 5 values pushed */
          21 3 192 15 9
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni030A.cap" xMin="24" yMin="731" xMax="328" yMax="956">
      <contour>
        <pt x="328" y="859" on="1"/>
        <pt x="328" y="802" on="0"/>
        <pt x="240" y="731" on="0"/>
        <pt x="162" y="731" on="1"/>
        <pt x="100" y="731" on="0"/>
        <pt x="24" y="783" on="0"/>
        <pt x="24" y="828" on="1"/>
        <pt x="24" y="885" on="0"/>
        <pt x="112" y="956" on="0"/>
        <pt x="190" y="956" on="1"/>
        <pt x="252" y="956" on="0"/>
        <pt x="328" y="904" on="0"/>
      </contour>
      <contour>
        <pt x="73" y="830" on="1"/>
        <pt x="73" y="803" on="0"/>
        <pt x="124" y="775" on="0"/>
        <pt x="172" y="775" on="1"/>
        <pt x="220" y="775" on="0"/>
        <pt x="279" y="822" on="0"/>
        <pt x="279" y="857" on="1"/>
        <pt x="279" y="884" on="0"/>
        <pt x="228" y="912" on="0"/>
        <pt x="180" y="912" on="1"/>
        <pt x="132" y="912" on="0"/>
        <pt x="73" y="865" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 5 values pushed */
          21 9 192 15 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni030B" xMin="-59" yMin="536" xMax="344" yMax="735">
      <contour>
        <pt x="-31" y="536" on="1"/>
        <pt x="-59" y="560" on="1"/>
        <pt x="79" y="735" on="1"/>
        <pt x="127" y="701" on="1"/>
      </contour>
      <contour>
        <pt x="187" y="536" on="1"/>
        <pt x="158" y="560" on="1"/>
        <pt x="296" y="735" on="1"/>
        <pt x="344" y="701" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          7 3 5 1 4 6 2 128 4 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni030B.cap" xMin="-2" yMin="731" xMax="442" yMax="922">
      <contour>
        <pt x="22" y="731" on="1"/>
        <pt x="-2" y="758" on="1"/>
        <pt x="151" y="922" on="1"/>
        <pt x="197" y="879" on="1"/>
      </contour>
      <contour>
        <pt x="267" y="731" on="1"/>
        <pt x="243" y="758" on="1"/>
        <pt x="396" y="922" on="1"/>
        <pt x="442" y="879" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          7 3 1 5 4 6 2 128 4 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni030C" xMin="-42" yMin="536" xMax="323" yMax="741">
      <contour>
        <pt x="75" y="536" on="1"/>
        <pt x="-42" y="719" on="1"/>
        <pt x="-7" y="741" on="1"/>
        <pt x="105" y="595" on="1"/>
        <pt x="299" y="741" on="1"/>
        <pt x="323" y="710" on="1"/>
        <pt x="111" y="536" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          3 5 1 3 4 2 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni030C.cap" xMin="0" yMin="731" xMax="364" yMax="920">
      <contour>
        <pt x="128" y="731" on="1"/>
        <pt x="0" y="895" on="1"/>
        <pt x="36" y="920" on="1"/>
        <pt x="151" y="789" on="1"/>
        <pt x="342" y="920" on="1"/>
        <pt x="364" y="890" on="1"/>
        <pt x="164" y="731" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          3 5 1 3 4 2 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0312" xMin="8" yMin="536" xMax="239" yMax="751">
      <contour>
        <pt x="8" y="625" on="1"/>
        <pt x="8" y="679" on="0"/>
        <pt x="123" y="743" on="0"/>
        <pt x="235" y="751" on="1"/>
        <pt x="239" y="713" on="1"/>
        <pt x="238" y="712" on="1"/>
        <pt x="153" y="703" on="0"/>
        <pt x="67" y="661" on="0"/>
        <pt x="67" y="629" on="1"/>
        <pt x="67" y="609" on="0"/>
        <pt x="129" y="582" on="0"/>
        <pt x="197" y="570" on="1"/>
        <pt x="197" y="567" on="1"/>
        <pt x="156" y="536" on="1"/>
        <pt x="79" y="549" on="0"/>
        <pt x="8" y="591" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          5 4 3 192 11 12 13
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0315" xMin="73" yMin="486" xMax="208" yMax="710">
      <contour>
        <pt x="112" y="486" on="1"/>
        <pt x="73" y="486" on="1"/>
        <pt x="138" y="710" on="1"/>
        <pt x="208" y="710" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0323" xMin="-165" yMin="-198" xMax="-51" yMax="-95">
      <contour>
        <pt x="-51" y="-131" on="1"/>
        <pt x="-51" y="-161" on="0"/>
        <pt x="-88" y="-198" on="0"/>
        <pt x="-118" y="-198" on="1"/>
        <pt x="-140" y="-198" on="0"/>
        <pt x="-165" y="-179" on="0"/>
        <pt x="-165" y="-162" on="1"/>
        <pt x="-165" y="-135" on="0"/>
        <pt x="-126" y="-95" on="0"/>
        <pt x="-98" y="-95" on="1"/>
        <pt x="-75" y="-95" on="0"/>
        <pt x="-51" y="-113" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          3 9
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0324" xMin="-275" yMin="-194" xMax="71" yMax="-95">
      <contour>
        <pt x="-165" y="-130" on="1"/>
        <pt x="-165" y="-158" on="0"/>
        <pt x="-200" y="-194" on="0"/>
        <pt x="-230" y="-194" on="1"/>
        <pt x="-252" y="-194" on="0"/>
        <pt x="-275" y="-176" on="0"/>
        <pt x="-275" y="-159" on="1"/>
        <pt x="-275" y="-133" on="0"/>
        <pt x="-237" y="-95" on="0"/>
        <pt x="-210" y="-95" on="1"/>
        <pt x="-188" y="-95" on="0"/>
        <pt x="-165" y="-113" on="0"/>
      </contour>
      <contour>
        <pt x="71" y="-130" on="1"/>
        <pt x="71" y="-159" on="0"/>
        <pt x="35" y="-194" on="0"/>
        <pt x="6" y="-194" on="1"/>
        <pt x="-15" y="-194" on="0"/>
        <pt x="-38" y="-176" on="0"/>
        <pt x="-38" y="-159" on="1"/>
        <pt x="-38" y="-133" on="0"/>
        <pt x="0" y="-95" on="0"/>
        <pt x="27" y="-95" on="1"/>
        <pt x="48" y="-95" on="0"/>
        <pt x="71" y="-114" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 5 values pushed */
          15 21 21 3 9
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0326" xMin="-243" yMin="-290" xMax="-12" yMax="-75">
      <contour>
        <pt x="-12" y="-164" on="1"/>
        <pt x="-12" y="-218" on="0"/>
        <pt x="-127" y="-282" on="0"/>
        <pt x="-239" y="-290" on="1"/>
        <pt x="-243" y="-252" on="1"/>
        <pt x="-242" y="-251" on="1"/>
        <pt x="-157" y="-242" on="0"/>
        <pt x="-71" y="-200" on="0"/>
        <pt x="-71" y="-168" on="1"/>
        <pt x="-71" y="-148" on="0"/>
        <pt x="-133" y="-121" on="0"/>
        <pt x="-201" y="-109" on="1"/>
        <pt x="-201" y="-106" on="1"/>
        <pt x="-160" y="-75" on="1"/>
        <pt x="-83" y="-88" on="0"/>
        <pt x="-12" y="-130" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          5 4 3 192 11 12 13
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0327" xMin="-239" yMin="-265" xMax="52" yMax="21">
      <contour>
        <pt x="-148" y="-93" on="1"/>
        <pt x="-74" y="21" on="1"/>
        <pt x="-31" y="21" on="1"/>
        <pt x="-82" y="-61" on="1"/>
        <pt x="-6" y="-73" on="0"/>
        <pt x="52" y="-107" on="0"/>
        <pt x="52" y="-146" on="1"/>
        <pt x="52" y="-187" on="0"/>
        <pt x="-4" y="-228" on="0"/>
        <pt x="-69" y="-242" on="1"/>
        <pt x="-101" y="-248" on="0"/>
        <pt x="-185" y="-260" on="0"/>
        <pt x="-239" y="-265" on="1"/>
        <pt x="-239" y="-216" on="1"/>
        <pt x="-200" y="-212" on="0"/>
        <pt x="-138" y="-205" on="0"/>
        <pt x="-114" y="-202" on="1"/>
        <pt x="-58" y="-193" on="0"/>
        <pt x="-12" y="-172" on="0"/>
        <pt x="-12" y="-150" on="1"/>
        <pt x="-12" y="-130" on="0"/>
        <pt x="-68" y="-111" on="0"/>
        <pt x="-145" y="-103" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          22 0 3 3 13 12 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0328" xMin="-217" yMin="-235" xMax="-34" yMax="26">
      <contour>
        <pt x="-217" y="-170" on="1"/>
        <pt x="-217" y="-134" on="0"/>
        <pt x="-149" y="-52" on="0"/>
        <pt x="-59" y="26" on="1"/>
        <pt x="-35" y="12" on="1"/>
        <pt x="-97" y="-50" on="0"/>
        <pt x="-155" y="-130" on="0"/>
        <pt x="-155" y="-158" on="1"/>
        <pt x="-155" y="-173" on="0"/>
        <pt x="-130" y="-186" on="0"/>
        <pt x="-99" y="-188" on="1"/>
        <pt x="-34" y="-192" on="1"/>
        <pt x="-50" y="-235" on="1"/>
        <pt x="-125" y="-231" on="1"/>
        <pt x="-175" y="-228" on="0"/>
        <pt x="-217" y="-201" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          11 12 4 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni032D" xMin="-327" yMin="-280" xMax="38" yMax="-75">
      <contour>
        <pt x="-79" y="-75" on="1"/>
        <pt x="38" y="-258" on="1"/>
        <pt x="3" y="-280" on="1"/>
        <pt x="-109" y="-134" on="1"/>
        <pt x="-303" y="-280" on="1"/>
        <pt x="-327" y="-249" on="1"/>
        <pt x="-115" y="-75" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          3 5 1 3 2 4 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni032E" xMin="-268" yMin="-270" xMax="91" yMax="-76">
      <contour>
        <pt x="-131" y="-220" on="1"/>
        <pt x="-84" y="-220" on="0"/>
        <pt x="-2" y="-154" on="0"/>
        <pt x="47" y="-76" on="1"/>
        <pt x="91" y="-90" on="1"/>
        <pt x="35" y="-189" on="0"/>
        <pt x="-67" y="-270" on="0"/>
        <pt x="-136" y="-270" on="1"/>
        <pt x="-207" y="-270" on="0"/>
        <pt x="-268" y="-185" on="0"/>
        <pt x="-268" y="-86" on="1"/>
        <pt x="-227" y="-76" on="1"/>
        <pt x="-222" y="-154" on="0"/>
        <pt x="-178" y="-220" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          0 7 4 3 3 10 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0331" xMin="-280" yMin="-166" xMax="63" yMax="-116">
      <contour>
        <pt x="48" y="-166" on="1"/>
        <pt x="-280" y="-166" on="1"/>
        <pt x="-265" y="-116" on="1"/>
        <pt x="63" y="-116" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          1 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0E3F" xMin="37" yMin="-142" xMax="617" yMax="797">
      <contour>
        <pt x="277" y="0" on="1"/>
        <pt x="236" y="-142" on="1"/>
        <pt x="179" y="-142" on="1"/>
        <pt x="220" y="0" on="1"/>
        <pt x="37" y="0" on="1"/>
        <pt x="225" y="655" on="1"/>
        <pt x="408" y="655" on="1"/>
        <pt x="449" y="797" on="1"/>
        <pt x="506" y="797" on="1"/>
        <pt x="465" y="654" on="1"/>
        <pt x="538" y="650" on="0"/>
        <pt x="617" y="585" on="0"/>
        <pt x="617" y="529" on="1"/>
        <pt x="617" y="457" on="0"/>
        <pt x="514" y="360" on="0"/>
        <pt x="413" y="338" on="1"/>
        <pt x="413" y="334" on="1"/>
        <pt x="479" y="321" on="0"/>
        <pt x="548" y="249" on="0"/>
        <pt x="548" y="194" on="1"/>
        <pt x="548" y="106" on="0"/>
        <pt x="405" y="0" on="0"/>
        <pt x="281" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="199" y="359" on="1"/>
        <pt x="317" y="364" on="1"/>
        <pt x="323" y="364" on="0"/>
        <pt x="328" y="364" on="0"/>
        <pt x="331" y="365" on="1"/>
        <pt x="400" y="606" on="1"/>
        <pt x="270" y="606" on="1"/>
      </contour>
      <contour>
        <pt x="551" y="519" on="1"/>
        <pt x="551" y="560" on="0"/>
        <pt x="497" y="604" on="0"/>
        <pt x="445" y="606" on="1"/>
        <pt x="378" y="371" on="1"/>
        <pt x="458" y="385" on="0"/>
        <pt x="551" y="467" on="0"/>
      </contour>
      <contour>
        <pt x="240" y="49" on="1"/>
        <pt x="315" y="310" on="1"/>
        <pt x="186" y="314" on="1"/>
        <pt x="110" y="49" on="1"/>
      </contour>
      <contour>
        <pt x="485" y="198" on="1"/>
        <pt x="485" y="242" on="0"/>
        <pt x="419" y="299" on="0"/>
        <pt x="359" y="307" on="1"/>
        <pt x="285" y="49" on="1"/>
        <pt x="297" y="49" on="1"/>
        <pt x="380" y="49" on="0"/>
        <pt x="485" y="135" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 31 values pushed */
          44 38 38 39 34 24 24 16 15 23 23 39 39 5 4 33 29 29 9 7 5 4 114 45 40
          40 2 0 4 12 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E06" xMin="22" yMin="-166" xMax="617" yMax="655">
      <component glyphName="B" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="302" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E07" xMin="27" yMin="-166" xMax="558" yMax="710">
      <component glyphName="b" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E0C" xMin="34" yMin="-198" xMax="604" yMax="655">
      <component glyphName="D" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="275" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E0D" xMin="56" yMin="-198" xMax="652" yMax="710">
      <component glyphName="d" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="301" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E0E" xMin="-5" yMin="-166" xMax="604" yMax="655">
      <component glyphName="D" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="275" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E0F" xMin="21" yMin="-166" xMax="652" yMax="710">
      <component glyphName="d" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="301" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E12" xMin="-52" yMin="-280" xMax="604" yMax="655">
      <component glyphName="D" x="0" y="0" flags="0x204"/>
      <component glyphName="uni032D" x="275" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E13" xMin="-26" yMin="-280" xMax="652" yMax="710">
      <component glyphName="d" x="0" y="0" flags="0x204"/>
      <component glyphName="uni032D" x="301" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E20" xMin="61" yMin="-15" xMax="686" yMax="826">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304.cap" x="353" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 37 33 1 1 110 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E21" xMin="17" yMin="-239" xMax="584" yMax="626">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 40 10 1 1 108 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E24" xMin="34" yMin="-193" xMax="636" yMax="655">
      <component glyphName="H" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="309" y="5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E25" xMin="37" yMin="-198" xMax="546" yMax="710">
      <component glyphName="h" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="312" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E28" xMin="-108" yMin="-265" xMax="636" yMax="655">
      <contour>
        <pt x="34" y="0" on="1"/>
        <pt x="222" y="655" on="1"/>
        <pt x="283" y="655" on="1"/>
        <pt x="197" y="356" on="1"/>
        <pt x="489" y="356" on="1"/>
        <pt x="575" y="655" on="1"/>
        <pt x="636" y="655" on="1"/>
        <pt x="448" y="0" on="1"/>
        <pt x="387" y="0" on="1"/>
        <pt x="475" y="305" on="1"/>
        <pt x="183" y="305" on="1"/>
        <pt x="95" y="0" on="1"/>
        <pt x="87" y="0" on="1"/>
        <pt x="49" y="-61" on="1"/>
        <pt x="125" y="-73" on="0"/>
        <pt x="183" y="-107" on="0"/>
        <pt x="183" y="-146" on="1"/>
        <pt x="183" y="-187" on="0"/>
        <pt x="127" y="-228" on="0"/>
        <pt x="62" y="-242" on="1"/>
        <pt x="30" y="-248" on="0"/>
        <pt x="-54" y="-260" on="0"/>
        <pt x="-108" y="-265" on="1"/>
        <pt x="-108" y="-216" on="1"/>
        <pt x="-69" y="-212" on="0"/>
        <pt x="-7" y="-205" on="0"/>
        <pt x="17" y="-202" on="1"/>
        <pt x="73" y="-193" on="0"/>
        <pt x="119" y="-172" on="0"/>
        <pt x="119" y="-150" on="1"/>
        <pt x="119" y="-130" on="0"/>
        <pt x="63" y="-111" on="0"/>
        <pt x="-14" y="-103" on="1"/>
        <pt x="-17" y="-93" on="1"/>
        <pt x="43" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          3 10 10 0 5 1 2 114 32 33 13 3 23 22 11 8 0 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E29" xMin="-106" yMin="-265" xMax="546" yMax="710">
      <contour>
        <pt x="241" y="710" on="1"/>
        <pt x="300" y="710" on="1"/>
        <pt x="183" y="304" on="1"/>
        <pt x="274" y="397" on="0"/>
        <pt x="378" y="465" on="0"/>
        <pt x="437" y="465" on="1"/>
        <pt x="486" y="465" on="0"/>
        <pt x="546" y="412" on="0"/>
        <pt x="546" y="369" on="1"/>
        <pt x="546" y="357" on="0"/>
        <pt x="538" y="316" on="0"/>
        <pt x="529" y="284" on="1"/>
        <pt x="447" y="0" on="1"/>
        <pt x="388" y="0" on="1"/>
        <pt x="472" y="292" on="1"/>
        <pt x="479" y="316" on="0"/>
        <pt x="485" y="348" on="0"/>
        <pt x="485" y="360" on="1"/>
        <pt x="485" y="385" on="0"/>
        <pt x="452" y="413" on="0"/>
        <pt x="422" y="413" on="1"/>
        <pt x="376" y="413" on="0"/>
        <pt x="272" y="335" on="0"/>
        <pt x="159" y="221" on="1"/>
        <pt x="96" y="0" on="1"/>
        <pt x="89" y="0" on="1"/>
        <pt x="51" y="-61" on="1"/>
        <pt x="127" y="-73" on="0"/>
        <pt x="185" y="-107" on="0"/>
        <pt x="185" y="-146" on="1"/>
        <pt x="185" y="-187" on="0"/>
        <pt x="129" y="-228" on="0"/>
        <pt x="64" y="-242" on="1"/>
        <pt x="32" y="-248" on="0"/>
        <pt x="-52" y="-260" on="0"/>
        <pt x="-106" y="-265" on="1"/>
        <pt x="-106" y="-216" on="1"/>
        <pt x="-67" y="-212" on="0"/>
        <pt x="-5" y="-205" on="0"/>
        <pt x="19" y="-202" on="1"/>
        <pt x="75" y="-193" on="0"/>
        <pt x="121" y="-172" on="0"/>
        <pt x="121" y="-150" on="1"/>
        <pt x="121" y="-130" on="0"/>
        <pt x="65" y="-111" on="0"/>
        <pt x="-12" y="-103" on="1"/>
        <pt x="-15" y="-93" on="1"/>
        <pt x="45" y="0" on="1"/>
        <pt x="37" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          45 46 26 3 36 35 25 13 48 10 23 2 2 20 20 5 7 114 0 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E2A" xMin="34" yMin="-270" xMax="636" yMax="655">
      <component glyphName="H" x="0" y="0" flags="0x204"/>
      <component glyphName="uni032E" x="308" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E2B" xMin="37" yMin="-270" xMax="546" yMax="710">
      <component glyphName="h" x="0" y="0" flags="0x204"/>
      <component glyphName="uni032E" x="312" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E32" xMin="37" yMin="-198" xMax="692" yMax="655">
      <component glyphName="K" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="352" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E33" xMin="58" yMin="-198" xMax="599" yMax="710">
      <component glyphName="k" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="301" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E34" xMin="37" yMin="-166" xMax="692" yMax="655">
      <component glyphName="K" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="352" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E35" xMin="21" yMin="-166" xMax="599" yMax="710">
      <component glyphName="k" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="301" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E36" xMin="37" yMin="-198" xMax="487" yMax="655">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="338" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E37" xMin="132" yMin="-198" xMax="468" yMax="710">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="297" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E38" xMin="37" yMin="-198" xMax="487" yMax="821">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304.cap" x="138" y="0" flags="0x4"/>
      <component glyphName="uni0323" x="338" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 7 1 1 1 116 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E39" xMin="132" yMin="-198" xMax="622" yMax="876">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304" x="344" y="250" flags="0x4"/>
      <component glyphName="uni0323" x="297" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 21 6 1 1 121 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E3A" xMin="37" yMin="-166" xMax="487" yMax="655">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="338" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E3B" xMin="17" yMin="-166" xMax="468" yMax="710">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="297" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E3C" xMin="11" yMin="-280" xMax="487" yMax="655">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="uni032D" x="338" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E3D" xMin="-30" yMin="-280" xMax="468" yMax="710">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="uni032D" x="297" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E3E" xMin="1" yMin="0" xMax="653" yMax="915">
      <component glyphName="M" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="299" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 13 0 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E3F" xMin="-8" yMin="0" xMax="602" yMax="741">
      <component glyphName="m" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="309" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 50 6 1 1 68 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E40" xMin="1" yMin="0" xMax="644" yMax="855">
      <component glyphName="M" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307.cap" x="299" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 16 0 1 1 93 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E41" xMin="-8" yMin="0" xMax="602" yMax="659">
      <component glyphName="m" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307" x="309" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 53 6 1 1 88 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E42" xMin="1" yMin="-198" xMax="644" yMax="655">
      <component glyphName="M" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="324" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E43" xMin="-8" yMin="-198" xMax="602" yMax="465">
      <component glyphName="m" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="310" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E44" xMin="31" yMin="0" xMax="639" yMax="855">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307.cap" x="311" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 13 6 1 1 91 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E45" xMin="37" yMin="0" xMax="546" yMax="659">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307" x="305" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 29 5 1 1 89 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E46" xMin="31" yMin="-193" xMax="639" yMax="655">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="309" y="5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E47" xMin="37" yMin="-198" xMax="546" yMax="465">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="315" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E48" xMin="28" yMin="-166" xMax="639" yMax="655">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="308" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E49" xMin="35" yMin="-166" xMax="546" yMax="465">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="315" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E4A" xMin="-18" yMin="-275" xMax="639" yMax="655">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="uni032D" x="309" y="5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E4B" xMin="-12" yMin="-280" xMax="546" yMax="465">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="uni032D" x="315" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E58" xMin="37" yMin="0" xMax="614" yMax="860">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307.cap" x="319" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 33 10 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E59" xMin="-13" yMin="0" xMax="593" yMax="659">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307" x="293" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 26 5 1 1 92 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E5A" xMin="37" yMin="-198" xMax="614" yMax="655">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="332" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E5B" xMin="-13" yMin="-198" xMax="593" yMax="463">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="236" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E5C" xMin="37" yMin="-198" xMax="652" yMax="821">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304.cap" x="319" y="0" flags="0x4"/>
      <component glyphName="uni0323" x="332" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 31 10 1 1 116 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E5D" xMin="-13" yMin="-198" xMax="593" yMax="626">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0304" x="293" y="0" flags="0x4"/>
      <component glyphName="uni0323" x="236" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 24 5 1 1 116 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E5E" xMin="37" yMin="-166" xMax="614" yMax="655">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="332" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E5F" xMin="-44" yMin="-166" xMax="593" yMax="463">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="236" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E62" xMin="33" yMin="-198" xMax="623" yMax="668">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="310" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E63" xMin="46" yMin="-203" xMax="554" yMax="468">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="297" y="-5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E6C" xMin="143" yMin="-198" xMax="677" yMax="655">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="308" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E6D" xMin="116" yMin="-198" xMax="565" yMax="637">
      <component glyphName="t" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="335" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E6E" xMin="28" yMin="-166" xMax="677" yMax="655">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="308" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E6F" xMin="55" yMin="-166" xMax="565" yMax="637">
      <component glyphName="t" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="335" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E70" xMin="-19" yMin="-280" xMax="677" yMax="655">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
      <component glyphName="uni032D" x="308" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E71" xMin="8" yMin="-280" xMax="565" yMax="637">
      <component glyphName="t" x="0" y="0" flags="0x204"/>
      <component glyphName="uni032D" x="335" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E7E" xMin="143" yMin="-198" xMax="690" yMax="655">
      <component glyphName="V" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="308" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E7F" xMin="131" yMin="-198" xMax="615" yMax="460">
      <component glyphName="v" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E8C" xMin="-8" yMin="0" xMax="663" yMax="856">
      <component glyphName="X" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 15 3 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E8D" xMin="18" yMin="0" xMax="586" yMax="655">
      <component glyphName="x" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 15 3 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E8E" xMin="175" yMin="0" xMax="683" yMax="855">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307.cap" x="290" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 0 1 1 91 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E8F" xMin="-77" yMin="-233" xMax="611" yMax="654">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307" x="311" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 19 15 1 1 93 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E90" xMin="16" yMin="0" xMax="639" yMax="921">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 6 1 1 77 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E91" xMin="33" yMin="0" xMax="585" yMax="741">
      <component glyphName="z" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="309" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 6 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E92" xMin="16" yMin="-198" xMax="637" yMax="655">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E93" xMin="33" yMin="-198" xMax="581" yMax="460">
      <component glyphName="z" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="325" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E94" xMin="16" yMin="-166" xMax="637" yMax="655">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E95" xMin="33" yMin="-166" xMax="581" yMax="460">
      <component glyphName="z" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="325" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E96" xMin="32" yMin="-166" xMax="546" yMax="710">
      <component glyphName="h" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0331" x="312" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E9E" xMin="31" yMin="-6" xMax="631" yMax="670">
      <contour>
        <pt x="478" y="178" on="1"/>
        <pt x="478" y="212" on="0"/>
        <pt x="424" y="282" on="0"/>
        <pt x="356" y="336" on="1"/>
        <pt x="362" y="356" on="1"/>
        <pt x="562" y="568" on="1"/>
        <pt x="525" y="595" on="0"/>
        <pt x="458" y="619" on="0"/>
        <pt x="419" y="619" on="1"/>
        <pt x="344" y="619" on="0"/>
        <pt x="242" y="526" on="0"/>
        <pt x="216" y="433" on="1"/>
        <pt x="92" y="0" on="1"/>
        <pt x="31" y="0" on="1"/>
        <pt x="155" y="434" on="1"/>
        <pt x="189" y="552" on="0"/>
        <pt x="322" y="670" on="0"/>
        <pt x="422" y="670" on="1"/>
        <pt x="478" y="670" on="0"/>
        <pt x="577" y="628" on="0"/>
        <pt x="630" y="583" on="1"/>
        <pt x="631" y="569" on="1"/>
        <pt x="426" y="351" on="1"/>
        <pt x="486" y="300" on="0"/>
        <pt x="541" y="216" on="0"/>
        <pt x="541" y="173" on="1"/>
        <pt x="541" y="94" on="0"/>
        <pt x="432" y="-6" on="0"/>
        <pt x="342" y="-6" on="1"/>
        <pt x="320" y="-6" on="0"/>
        <pt x="275" y="-1" on="0"/>
        <pt x="255" y="4" on="1"/>
        <pt x="269" y="55" on="1"/>
        <pt x="291" y="50" on="0"/>
        <pt x="329" y="45" on="0"/>
        <pt x="346" y="45" on="1"/>
        <pt x="403" y="45" on="0"/>
        <pt x="478" y="121" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          3 22 4 5 21 20 6 17 35 28 8 114 8 17 3 114 12 8 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EA0" xMin="-20" yMin="-193" xMax="502" yMax="655">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="339" y="5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1EA1" xMin="39" yMin="-198" xMax="523" yMax="465">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="304" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1EA2" xMin="-20" yMin="0" xMax="611" yMax="926">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 14 3 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EA3" xMin="39" yMin="-5" xMax="523" yMax="756">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 63 40 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EA4" xMin="-20" yMin="0" xMax="786" yMax="1023">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60301.cap" x="288" y="-10" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 15 3 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EA5" xMin="39" yMin="-5" xMax="741" yMax="861">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60301" x="298" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 64 40 1 1 68 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EA6" xMin="-20" yMin="0" xMax="712" yMax="1027">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60300.cap" x="288" y="-10" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 15 3 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EA7" xMin="39" yMin="-5" xMax="651" yMax="853">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60300" x="298" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 64 40 1 1 68 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EA8" xMin="-20" yMin="0" xMax="776" yMax="1056">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60309.cap" x="288" y="-10" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 27 3 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EA9" xMin="39" yMin="-5" xMax="756" yMax="897">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60309" x="298" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 76 40 1 1 68 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EAA" xMin="-20" yMin="0" xMax="726" yMax="1074">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60303.cap" x="288" y="-10" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 37 3 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EAB" xMin="39" yMin="-5" xMax="668" yMax="913">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60303" x="298" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 86 40 1 1 68 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EAC" xMin="-20" yMin="-193" xMax="621" yMax="911">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="288" y="-10" flags="0x4"/>
      <component glyphName="uni0323" x="339" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 11 3 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EAD" xMin="39" yMin="-198" xMax="574" yMax="741">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="298" y="0" flags="0x4"/>
      <component glyphName="uni0323" x="304" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 60 40 1 1 68 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EAE" xMin="-20" yMin="0" xMax="699" yMax="1068">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02D80301.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 22 3 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EAF" xMin="39" yMin="-5" xMax="659" yMax="914">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02D80301" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 71 40 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EB0" xMin="-20" yMin="0" xMax="662" yMax="1062">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02D80300.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 22 3 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EB1" xMin="39" yMin="-5" xMax="618" yMax="909">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02D80300" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 71 40 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EB2" xMin="-20" yMin="0" xMax="662" yMax="1066">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02D80309.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 34 3 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EB3" xMin="39" yMin="-5" xMax="618" yMax="924">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02D80309" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 83 40 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EB4" xMin="-20" yMin="0" xMax="711" yMax="1084">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02D80303.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 44 3 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EB5" xMin="39" yMin="-5" xMax="669" yMax="918">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02D80303" x="299" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 93 40 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EB6" xMin="-20" yMin="-193" xMax="666" yMax="909">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306.cap" x="292" y="0" flags="0x4"/>
      <component glyphName="uni0323" x="339" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 18 3 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EB7" xMin="39" yMin="-198" xMax="623" yMax="735">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0306" x="299" y="5" flags="0x4"/>
      <component glyphName="uni0323" x="304" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 67 40 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EB8" xMin="37" yMin="-198" xMax="655" yMax="655">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="336" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1EB9" xMin="74" yMin="-198" xMax="567" yMax="475">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="320" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1EBA" xMin="37" yMin="0" xMax="655" yMax="926">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 15 1 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EBB" xMin="74" yMin="-5" xMax="567" yMax="756">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309" x="319" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 39 13 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EBC" xMin="37" yMin="0" xMax="709" yMax="897">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 16 1 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EBD" xMin="74" yMin="-5" xMax="652" yMax="731">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303" x="319" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 36 13 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EBE" xMin="37" yMin="0" xMax="833" yMax="1033">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60301.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 16 1 1 1 77 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EBF" xMin="74" yMin="-5" xMax="761" yMax="861">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60301" x="318" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 40 13 1 1 60 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EC0" xMin="37" yMin="0" xMax="759" yMax="1037">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60300.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 16 1 1 1 77 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EC1" xMin="74" yMin="-5" xMax="671" yMax="853">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60300" x="318" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 40 13 1 1 60 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EC2" xMin="37" yMin="0" xMax="823" yMax="1066">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60309.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 28 1 1 1 77 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EC3" xMin="74" yMin="-5" xMax="776" yMax="897">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60309" x="318" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 52 13 1 1 60 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EC4" xMin="37" yMin="0" xMax="773" yMax="1084">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60303.cap" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 38 1 1 1 77 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EC5" xMin="74" yMin="-5" xMax="688" yMax="913">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60303" x="318" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 62 13 1 1 60 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EC6" xMin="37" yMin="-198" xMax="668" yMax="921">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="335" y="0" flags="0x4"/>
      <component glyphName="uni0323" x="336" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 1 1 1 77 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EC7" xMin="74" yMin="-198" xMax="594" yMax="741">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="318" y="0" flags="0x4"/>
      <component glyphName="uni0323" x="320" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 36 13 1 1 60 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EC8" xMin="73" yMin="0" xMax="626" yMax="926">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 15 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EC9" xMin="57" yMin="0" xMax="541" yMax="751">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309" x="317" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 13 5 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1ECA" xMin="73" yMin="-198" xMax="597" yMax="655">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="308" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1ECB" xMin="57" yMin="-198" xMax="478" yMax="721">
      <component glyphName="i" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="321" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1ECC" xMin="61" yMin="-203" xMax="606" yMax="670">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="324" y="-5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1ECD" xMin="58" yMin="-203" xMax="556" yMax="475">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="320" y="-5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1ECE" xMin="61" yMin="-15" xMax="613" yMax="931">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 39 3 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1ECF" xMin="58" yMin="-15" xMax="556" yMax="756">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 33 6 1 1 66 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1ED0" xMin="61" yMin="-15" xMax="790" yMax="1033">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60301.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 40 3 1 1 62 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1ED1" xMin="58" yMin="-15" xMax="740" yMax="861">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60301" x="297" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 34 6 1 1 61 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1ED2" xMin="61" yMin="-15" xMax="716" yMax="1037">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60300.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 40 3 1 1 62 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1ED3" xMin="58" yMin="-15" xMax="650" yMax="853">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60300" x="297" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 34 6 1 1 61 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1ED4" xMin="61" yMin="-15" xMax="780" yMax="1066">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60309.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 52 3 1 1 62 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1ED5" xMin="58" yMin="-15" xMax="755" yMax="897">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60309" x="297" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 46 6 1 1 61 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1ED6" xMin="61" yMin="-15" xMax="730" yMax="1084">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60303.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 62 3 1 1 62 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1ED7" xMin="58" yMin="-15" xMax="667" yMax="913">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni02C60303" x="297" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          3 2 56 6 1 1 61 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1ED8" xMin="61" yMin="-203" xMax="625" yMax="921">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302.cap" x="292" y="0" flags="0x4"/>
      <component glyphName="uni0323" x="324" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 36 3 1 1 62 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1ED9" xMin="58" yMin="-203" xMax="573" yMax="741">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="297" y="0" flags="0x4"/>
      <component glyphName="uni0323" x="320" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 30 6 1 1 61 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EDA" xMin="61" yMin="-15" xMax="746" yMax="925">
      <component glyphName="Ohorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 48 3 1 1 81 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EDB" xMin="58" yMin="-15" xMax="664" yMax="746">
      <component glyphName="ohorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 42 6 1 1 81 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EDC" xMin="61" yMin="-15" xMax="746" yMax="918">
      <component glyphName="Ohorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 50 3 1 1 81 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EDD" xMin="58" yMin="-15" xMax="664" yMax="739">
      <component glyphName="ohorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 44 6 1 1 81 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EDE" xMin="61" yMin="-15" xMax="746" yMax="931">
      <component glyphName="Ohorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 51 3 1 1 81 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EDF" xMin="58" yMin="-15" xMax="664" yMax="756">
      <component glyphName="ohorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 45 6 1 1 81 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EE0" xMin="61" yMin="-15" xMax="746" yMax="902">
      <component glyphName="Ohorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303.cap" x="294" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 52 3 1 1 81 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EE1" xMin="58" yMin="-15" xMax="664" yMax="731">
      <component glyphName="ohorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303" x="298" y="5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 42 6 1 1 81 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EE2" xMin="61" yMin="-203" xMax="746" yMax="768">
      <component glyphName="Ohorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="324" y="-5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1EE3" xMin="58" yMin="-203" xMax="664" yMax="572">
      <component glyphName="ohorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="320" y="-5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1EE4" xMin="74" yMin="-203" xMax="654" yMax="655">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="306" y="-5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1EE5" xMin="68" yMin="-198" xMax="577" yMax="460">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="297" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1EE6" xMin="74" yMin="-15" xMax="654" yMax="921">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309.cap" x="305" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 27 16 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EE7" xMin="68" yMin="-5" xMax="577" yMax="740">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309" x="304" y="-11" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 29 12 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EE8" xMin="74" yMin="-15" xMax="836" yMax="915">
      <component glyphName="Uhorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301.cap" x="305" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 31 23 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EE9" xMin="68" yMin="-5" xMax="737" yMax="730">
      <component glyphName="uhorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="304" y="-11" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 33 24 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EEA" xMin="74" yMin="-15" xMax="836" yMax="908">
      <component glyphName="Uhorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300.cap" x="305" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 33 23 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EEB" xMin="68" yMin="-5" xMax="737" yMax="723">
      <component glyphName="uhorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300" x="304" y="-11" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 35 12 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EEC" xMin="74" yMin="-15" xMax="836" yMax="921">
      <component glyphName="Uhorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309.cap" x="305" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 34 23 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EED" xMin="68" yMin="-5" xMax="737" yMax="740">
      <component glyphName="uhorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309" x="304" y="-11" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 36 12 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EEE" xMin="74" yMin="-15" xMax="836" yMax="897">
      <component glyphName="Uhorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303.cap" x="307" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 35 23 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EEF" xMin="68" yMin="-5" xMax="737" yMax="726">
      <component glyphName="uhorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 33 12 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EF0" xMin="74" yMin="-203" xMax="836" yMax="768">
      <component glyphName="Uhorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="306" y="-5" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1EF1" xMin="68" yMin="-198" xMax="737" yMax="572">
      <component glyphName="uhorn" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="297" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1EF4" xMin="143" yMin="-198" xMax="683" yMax="655">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="308" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1EF5" xMin="-77" yMin="-233" xMax="611" yMax="460">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0323" x="465" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1EF6" xMin="175" yMin="0" xMax="683" yMax="921">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309.cap" x="290" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 6 1 1 71 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EF7" xMin="-77" yMin="-233" xMax="611" yMax="751">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0309" x="312" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 19 12 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EF8" xMin="175" yMin="0" xMax="683" yMax="897">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303.cap" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 13 0 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1EF9" xMin="-77" yMin="-233" xMax="645" yMax="726">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303" x="312" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 16 15 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni2011" xMin="140" yMin="299" xMax="530" yMax="354">
      <component glyphName="hyphen" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="uni2015" xMin="70" yMin="299" xMax="600" yMax="354">
      <component glyphName="emdash" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="uni2025" xMin="34" yMin="-15" xMax="478" yMax="122">
      <contour>
        <pt x="171" y="76" on="1"/>
        <pt x="171" y="38" on="0"/>
        <pt x="125" y="-15" on="0"/>
        <pt x="90" y="-15" on="1"/>
        <pt x="62" y="-15" on="0"/>
        <pt x="34" y="8" on="0"/>
        <pt x="34" y="31" on="1"/>
        <pt x="34" y="68" on="0"/>
        <pt x="81" y="122" on="0"/>
        <pt x="115" y="122" on="1"/>
        <pt x="143" y="122" on="0"/>
        <pt x="171" y="99" on="0"/>
      </contour>
      <contour>
        <pt x="478" y="76" on="1"/>
        <pt x="478" y="38" on="0"/>
        <pt x="432" y="-15" on="0"/>
        <pt x="398" y="-15" on="1"/>
        <pt x="370" y="-15" on="0"/>
        <pt x="341" y="8" on="0"/>
        <pt x="341" y="31" on="1"/>
        <pt x="341" y="68" on="0"/>
        <pt x="388" y="122" on="0"/>
        <pt x="423" y="122" on="1"/>
        <pt x="450" y="122" on="0"/>
        <pt x="478" y="98" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          21 15 15 9 3 11 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni20A6" xMin="13" yMin="0" xMax="659" yMax="655">
      <contour>
        <pt x="170" y="237" on="1"/>
        <pt x="102" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="111" y="233" on="1"/>
        <pt x="13" y="233" on="1"/>
        <pt x="27" y="281" on="1"/>
        <pt x="125" y="281" on="1"/>
        <pt x="153" y="380" on="1"/>
        <pt x="55" y="380" on="1"/>
        <pt x="69" y="428" on="1"/>
        <pt x="167" y="428" on="1"/>
        <pt x="232" y="655" on="1"/>
        <pt x="329" y="655" on="1"/>
        <pt x="353" y="424" on="1"/>
        <pt x="502" y="424" on="1"/>
        <pt x="568" y="655" on="1"/>
        <pt x="626" y="655" on="1"/>
        <pt x="561" y="428" on="1"/>
        <pt x="659" y="428" on="1"/>
        <pt x="645" y="380" on="1"/>
        <pt x="547" y="380" on="1"/>
        <pt x="519" y="281" on="1"/>
        <pt x="617" y="281" on="1"/>
        <pt x="603" y="233" on="1"/>
        <pt x="505" y="233" on="1"/>
        <pt x="438" y="0" on="1"/>
        <pt x="344" y="0" on="1"/>
        <pt x="319" y="237" on="1"/>
      </contour>
      <contour>
        <pt x="280" y="604" on="1"/>
        <pt x="275" y="604" on="1"/>
        <pt x="181" y="277" on="1"/>
        <pt x="315" y="277" on="1"/>
      </contour>
      <contour>
        <pt x="358" y="384" on="1"/>
        <pt x="392" y="58" on="1"/>
        <pt x="397" y="58" on="1"/>
        <pt x="490" y="384" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 28 values pushed */
          32 13 17 10 10 20 7 30 0 6 24 3 3 21 28 11 33 6 6 2 15 11 4 114 26
          2 12 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni20A9" xMin="36" yMin="0" xMax="663" yMax="655">
      <contour>
        <pt x="376" y="455" on="1"/>
        <pt x="365" y="455" on="1"/>
        <pt x="154" y="0" on="1"/>
        <pt x="65" y="0" on="1"/>
        <pt x="126" y="306" on="1"/>
        <pt x="36" y="306" on="1"/>
        <pt x="50" y="356" on="1"/>
        <pt x="136" y="356" on="1"/>
        <pt x="195" y="655" on="1"/>
        <pt x="236" y="655" on="1"/>
        <pt x="175" y="352" on="1"/>
        <pt x="274" y="352" on="1"/>
        <pt x="336" y="485" on="1"/>
        <pt x="420" y="485" on="1"/>
        <pt x="406" y="352" on="1"/>
        <pt x="506" y="352" on="1"/>
        <pt x="619" y="655" on="1"/>
        <pt x="663" y="655" on="1"/>
        <pt x="550" y="356" on="1"/>
        <pt x="636" y="356" on="1"/>
        <pt x="622" y="306" on="1"/>
        <pt x="531" y="306" on="1"/>
        <pt x="416" y="0" on="1"/>
        <pt x="328" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="372" y="32" on="1"/>
        <pt x="386" y="32" on="1"/>
        <pt x="490" y="310" on="1"/>
        <pt x="401" y="310" on="1"/>
      </contour>
      <contour>
        <pt x="166" y="310" on="1"/>
        <pt x="110" y="32" on="1"/>
        <pt x="124" y="32" on="1"/>
        <pt x="254" y="310" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 31 values pushed */
          10 11 14 15 26 27 31 28 8 5 18 6 6 21 5 24 29 5 1 4 12 12 3 16 8
          4 114 23 3 12 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni20B1" xMin="44" yMin="0" xMax="672" yMax="655">
      <contour>
        <pt x="166" y="425" on="1"/>
        <pt x="69" y="425" on="1"/>
        <pt x="83" y="473" on="1"/>
        <pt x="180" y="473" on="1"/>
        <pt x="232" y="655" on="1"/>
        <pt x="396" y="655" on="1"/>
        <pt x="483" y="655" on="0"/>
        <pt x="586" y="570" on="0"/>
        <pt x="586" y="499" on="1"/>
        <pt x="586" y="488" on="0"/>
        <pt x="586" y="477" on="0"/>
        <pt x="585" y="473" on="1"/>
        <pt x="672" y="473" on="1"/>
        <pt x="658" y="425" on="1"/>
        <pt x="577" y="425" on="1"/>
        <pt x="553" y="335" on="0"/>
        <pt x="395" y="236" on="0"/>
        <pt x="277" y="236" on="1"/>
        <pt x="173" y="236" on="1"/>
        <pt x="105" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="520" y="498" on="1"/>
        <pt x="520" y="550" on="0"/>
        <pt x="450" y="604" on="0"/>
        <pt x="383" y="604" on="1"/>
        <pt x="279" y="604" on="1"/>
        <pt x="239" y="466" on="1"/>
        <pt x="518" y="466" on="1"/>
        <pt x="519" y="477" on="0"/>
        <pt x="520" y="492" on="0"/>
      </contour>
      <contour>
        <pt x="187" y="286" on="1"/>
        <pt x="272" y="286" on="1"/>
        <pt x="366" y="286" on="0"/>
        <pt x="490" y="362" on="0"/>
        <pt x="511" y="432" on="1"/>
        <pt x="229" y="432" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          26 11 3 3 35 14 0 0 30 30 18 18 4 19 12 114 25 4 4 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni20B9" xMin="68" yMin="0" xMax="672" yMax="655">
      <contour>
        <pt x="431" y="410" on="1"/>
        <pt x="122" y="410" on="1"/>
        <pt x="135" y="458" on="1"/>
        <pt x="445" y="458" on="1"/>
        <pt x="488" y="607" on="1"/>
        <pt x="178" y="607" on="1"/>
        <pt x="192" y="655" on="1"/>
        <pt x="672" y="655" on="1"/>
        <pt x="658" y="607" on="1"/>
        <pt x="551" y="607" on="1"/>
        <pt x="508" y="458" on="1"/>
        <pt x="615" y="458" on="1"/>
        <pt x="602" y="410" on="1"/>
        <pt x="494" y="410" on="1"/>
        <pt x="459" y="301" on="0"/>
        <pt x="340" y="219" on="0"/>
        <pt x="221" y="219" on="1"/>
        <pt x="168" y="219" on="1"/>
        <pt x="168" y="217" on="1"/>
        <pt x="452" y="2" on="1"/>
        <pt x="452" y="0" on="1"/>
        <pt x="357" y="0" on="1"/>
        <pt x="68" y="223" on="1"/>
        <pt x="81" y="268" on="1"/>
        <pt x="238" y="268" on="1"/>
        <pt x="314" y="268" on="0"/>
        <pt x="406" y="335" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          22 16 23 10 3 3 13 0 0 6 21 12 114 4 6 4 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni20BA" xMin="-7" yMin="0" xMax="591" yMax="655">
      <contour>
        <pt x="119" y="193" on="1"/>
        <pt x="-7" y="133" on="1"/>
        <pt x="9" y="190" on="1"/>
        <pt x="136" y="252" on="1"/>
        <pt x="165" y="351" on="1"/>
        <pt x="37" y="289" on="1"/>
        <pt x="55" y="349" on="1"/>
        <pt x="182" y="410" on="1"/>
        <pt x="252" y="655" on="1"/>
        <pt x="313" y="655" on="1"/>
        <pt x="251" y="437" on="1"/>
        <pt x="462" y="541" on="1"/>
        <pt x="444" y="481" on="1"/>
        <pt x="234" y="378" on="1"/>
        <pt x="205" y="279" on="1"/>
        <pt x="416" y="382" on="1"/>
        <pt x="399" y="322" on="1"/>
        <pt x="188" y="221" on="1"/>
        <pt x="139" y="50" on="1"/>
        <pt x="200" y="50" on="1"/>
        <pt x="333" y="50" on="0"/>
        <pt x="502" y="181" on="0"/>
        <pt x="531" y="308" on="1"/>
        <pt x="591" y="304" on="1"/>
        <pt x="557" y="155" on="0"/>
        <pt x="363" y="0" on="0"/>
        <pt x="209" y="0" on="1"/>
        <pt x="64" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          0 17 3 23 22 14 4 13 7 10 10 8 19 27 12 114 8 4 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni20BD" xMin="-5" yMin="0" xMax="648" yMax="655">
      <contour>
        <pt x="104" y="135" on="1"/>
        <pt x="-5" y="135" on="1"/>
        <pt x="9" y="183" on="1"/>
        <pt x="118" y="183" on="1"/>
        <pt x="147" y="285" on="1"/>
        <pt x="38" y="285" on="1"/>
        <pt x="52" y="333" on="1"/>
        <pt x="161" y="333" on="1"/>
        <pt x="253" y="655" on="1"/>
        <pt x="458" y="655" on="1"/>
        <pt x="545" y="655" on="0"/>
        <pt x="648" y="570" on="0"/>
        <pt x="648" y="499" on="1"/>
        <pt x="648" y="455" on="0"/>
        <pt x="621" y="386" on="0"/>
        <pt x="593" y="358" on="1"/>
        <pt x="556" y="321" on="0"/>
        <pt x="432" y="285" on="0"/>
        <pt x="343" y="285" on="1"/>
        <pt x="208" y="285" on="1"/>
        <pt x="179" y="183" on="1"/>
        <pt x="421" y="183" on="1"/>
        <pt x="407" y="135" on="1"/>
        <pt x="165" y="135" on="1"/>
        <pt x="126" y="0" on="1"/>
        <pt x="65" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="582" y="498" on="1"/>
        <pt x="582" y="550" on="0"/>
        <pt x="512" y="604" on="0"/>
        <pt x="445" y="604" on="1"/>
        <pt x="299" y="604" on="1"/>
        <pt x="222" y="333" on="1"/>
        <pt x="355" y="333" on="1"/>
        <pt x="461" y="333" on="0"/>
        <pt x="582" y="422" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          7 4 4 31 19 0 3 3 23 20 20 8 25 12 114 30 8 4 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni2117" xMin="48" yMin="-70" xMax="623" yMax="725">
      <contour>
        <pt x="623" y="546" on="1"/>
        <pt x="623" y="501" on="0"/>
        <pt x="602" y="382" on="0"/>
        <pt x="581" y="308" on="1"/>
        <pt x="525" y="114" on="0"/>
        <pt x="356" y="-70" on="0"/>
        <pt x="230" y="-70" on="1"/>
        <pt x="136" y="-70" on="0"/>
        <pt x="48" y="19" on="0"/>
        <pt x="48" y="112" on="1"/>
        <pt x="48" y="158" on="0"/>
        <pt x="69" y="276" on="0"/>
        <pt x="89" y="348" on="1"/>
        <pt x="145" y="541" on="0"/>
        <pt x="314" y="725" on="0"/>
        <pt x="440" y="725" on="1"/>
        <pt x="534" y="725" on="0"/>
        <pt x="623" y="638" on="0"/>
      </contour>
      <contour>
        <pt x="437" y="680" on="1"/>
        <pt x="329" y="680" on="0"/>
        <pt x="187" y="511" on="0"/>
        <pt x="134" y="328" on="1"/>
        <pt x="114" y="258" on="0"/>
        <pt x="95" y="152" on="0"/>
        <pt x="95" y="113" on="1"/>
        <pt x="95" y="42" on="0"/>
        <pt x="161" y="-25" on="0"/>
        <pt x="233" y="-25" on="1"/>
        <pt x="341" y="-25" on="0"/>
        <pt x="483" y="144" on="0"/>
        <pt x="536" y="328" on="1"/>
        <pt x="556" y="396" on="0"/>
        <pt x="575" y="505" on="0"/>
        <pt x="575" y="546" on="1"/>
        <pt x="575" y="615" on="0"/>
        <pt x="509" y="680" on="0"/>
      </contour>
      <contour>
        <pt x="173" y="105" on="1"/>
        <pt x="301" y="550" on="1"/>
        <pt x="402" y="550" on="1"/>
        <pt x="452" y="550" on="0"/>
        <pt x="499" y="508" on="0"/>
        <pt x="499" y="463" on="1"/>
        <pt x="499" y="424" on="0"/>
        <pt x="467" y="332" on="0"/>
        <pt x="443" y="308" on="1"/>
        <pt x="420" y="285" on="0"/>
        <pt x="354" y="263" on="0"/>
        <pt x="308" y="263" on="1"/>
        <pt x="271" y="263" on="1"/>
        <pt x="226" y="105" on="1"/>
      </contour>
      <contour>
        <pt x="447" y="460" on="1"/>
        <pt x="447" y="483" on="0"/>
        <pt x="419" y="504" on="0"/>
        <pt x="387" y="504" on="1"/>
        <pt x="341" y="504" on="1"/>
        <pt x="286" y="312" on="1"/>
        <pt x="327" y="312" on="1"/>
        <pt x="354" y="312" on="0"/>
        <pt x="391" y="324" on="0"/>
        <pt x="403" y="336" on="1"/>
        <pt x="420" y="353" on="0"/>
        <pt x="447" y="432" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          55 48 54 37 49 48 37 37 48 49 3 6 18 15 27 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni2120" xMin="88" yMin="396" xMax="684" yMax="716">
      <contour>
        <pt x="206" y="434" on="1"/>
        <pt x="239" y="434" on="0"/>
        <pt x="277" y="466" on="0"/>
        <pt x="277" y="493" on="1"/>
        <pt x="277" y="508" on="0"/>
        <pt x="261" y="529" on="0"/>
        <pt x="243" y="538" on="1"/>
        <pt x="197" y="562" on="1"/>
        <pt x="174" y="574" on="0"/>
        <pt x="152" y="608" on="0"/>
        <pt x="152" y="630" on="1"/>
        <pt x="152" y="667" on="0"/>
        <pt x="211" y="716" on="0"/>
        <pt x="259" y="716" on="1"/>
        <pt x="286" y="716" on="0"/>
        <pt x="330" y="708" on="0"/>
        <pt x="362" y="696" on="1"/>
        <pt x="347" y="660" on="1"/>
        <pt x="324" y="669" on="0"/>
        <pt x="281" y="678" on="0"/>
        <pt x="259" y="678" on="1"/>
        <pt x="230" y="678" on="0"/>
        <pt x="196" y="653" on="0"/>
        <pt x="196" y="632" on="1"/>
        <pt x="196" y="621" on="0"/>
        <pt x="207" y="606" on="0"/>
        <pt x="221" y="598" on="1"/>
        <pt x="267" y="574" on="1"/>
        <pt x="296" y="559" on="0"/>
        <pt x="320" y="523" on="0"/>
        <pt x="320" y="494" on="1"/>
        <pt x="320" y="448" on="0"/>
        <pt x="259" y="396" on="0"/>
        <pt x="206" y="396" on="1"/>
        <pt x="176" y="396" on="0"/>
        <pt x="122" y="412" on="0"/>
        <pt x="88" y="431" on="1"/>
        <pt x="108" y="465" on="1"/>
        <pt x="136" y="449" on="0"/>
        <pt x="184" y="434" on="0"/>
      </contour>
      <contour>
        <pt x="616" y="710" on="1"/>
        <pt x="684" y="710" on="1"/>
        <pt x="608" y="403" on="1"/>
        <pt x="566" y="403" on="1"/>
        <pt x="638" y="683" on="1"/>
        <pt x="511" y="490" on="1"/>
        <pt x="501" y="490" on="1"/>
        <pt x="483" y="674" on="1"/>
        <pt x="396" y="403" on="1"/>
        <pt x="354" y="403" on="1"/>
        <pt x="454" y="710" on="1"/>
        <pt x="517" y="710" on="1"/>
        <pt x="530" y="580" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 30 values pushed */
          46 52 47 44 4 50 49 3 30 6 7 27 26 10 23 8 13 0 33 33 43 49 50 20 13
          13 40 50 0 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniA788" xMin="-20" yMin="-280" xMax="345" yMax="-75">
      <component glyphName="uni032D" x="307" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uogonek" xMin="68" yMin="-235" xMax="577" yMax="460">
      <contour>
        <pt x="266" y="-170" on="1"/>
        <pt x="266" y="-136" on="0"/>
        <pt x="323" y="-64" on="0"/>
        <pt x="395" y="0" on="1"/>
        <pt x="386" y="0" on="1"/>
        <pt x="431" y="156" on="1"/>
        <pt x="339" y="62" on="0"/>
        <pt x="237" y="-5" on="0"/>
        <pt x="177" y="-5" on="1"/>
        <pt x="128" y="-5" on="0"/>
        <pt x="68" y="48" on="0"/>
        <pt x="68" y="91" on="1"/>
        <pt x="68" y="103" on="0"/>
        <pt x="76" y="144" on="0"/>
        <pt x="85" y="176" on="1"/>
        <pt x="167" y="460" on="1"/>
        <pt x="226" y="460" on="1"/>
        <pt x="142" y="168" on="1"/>
        <pt x="135" y="144" on="0"/>
        <pt x="129" y="112" on="0"/>
        <pt x="129" y="100" on="1"/>
        <pt x="129" y="75" on="0"/>
        <pt x="162" y="47" on="0"/>
        <pt x="192" y="47" on="1"/>
        <pt x="238" y="47" on="0"/>
        <pt x="342" y="126" on="0"/>
        <pt x="455" y="240" on="1"/>
        <pt x="518" y="460" on="1"/>
        <pt x="577" y="460" on="1"/>
        <pt x="445" y="0" on="1"/>
        <pt x="436" y="0" on="1"/>
        <pt x="380" y="-57" on="0"/>
        <pt x="328" y="-131" on="0"/>
        <pt x="328" y="-158" on="1"/>
        <pt x="328" y="-173" on="0"/>
        <pt x="353" y="-186" on="0"/>
        <pt x="384" y="-188" on="1"/>
        <pt x="449" y="-192" on="1"/>
        <pt x="433" y="-235" on="1"/>
        <pt x="358" y="-231" on="1"/>
        <pt x="308" y="-228" on="0"/>
        <pt x="266" y="-201" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          28 15 6 114 26 5 5 23 23 8 11 37 38 29 4 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uring" xMin="68" yMin="-5" xMax="577" yMax="761">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030A" x="304" y="-11" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 35 24 1 1 67 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="utilde" xMin="68" yMin="-5" xMax="639" yMax="726">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0303" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 26 24 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="v" xMin="131" yMin="0" xMax="615" yMax="460">
      <contour>
        <pt x="209" y="0" on="1"/>
        <pt x="131" y="460" on="1"/>
        <pt x="193" y="460" on="1"/>
        <pt x="254" y="59" on="1"/>
        <pt x="546" y="460" on="1"/>
        <pt x="615" y="460" on="1"/>
        <pt x="274" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          3 0 5 1 6 114 0 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="w" xMin="86" yMin="0" xMax="630" yMax="460">
      <contour>
        <pt x="630" y="460" on="1"/>
        <pt x="394" y="0" on="1"/>
        <pt x="329" y="0" on="1"/>
        <pt x="318" y="268" on="1"/>
        <pt x="151" y="0" on="1"/>
        <pt x="86" y="0" on="1"/>
        <pt x="116" y="460" on="1"/>
        <pt x="168" y="460" on="1"/>
        <pt x="135" y="54" on="1"/>
        <pt x="341" y="390" on="1"/>
        <pt x="359" y="390" on="1"/>
        <pt x="373" y="58" on="1"/>
        <pt x="571" y="460" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          8 11 3 9 4 5 12 6 6 114 2 5 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="wacute" xMin="86" yMin="0" xMax="630" yMax="731">
      <component glyphName="w" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="304" y="-10" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 13 12 1 1 68 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="wcircumflex" xMin="86" yMin="0" xMax="630" yMax="741">
      <component glyphName="w" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 13 6 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="wdieresis" xMin="86" yMin="0" xMax="630" yMax="655">
      <component glyphName="w" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308" x="306" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 16 6 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="wgrave" xMin="86" yMin="0" xMax="630" yMax="724">
      <component glyphName="w" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300" x="304" y="-10" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 15 12 1 1 68 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="x" xMin="18" yMin="0" xMax="580" yMax="460">
      <contour>
        <pt x="95" y="0" on="1"/>
        <pt x="18" y="0" on="1"/>
        <pt x="274" y="244" on="1"/>
        <pt x="149" y="460" on="1"/>
        <pt x="217" y="460" on="1"/>
        <pt x="314" y="278" on="1"/>
        <pt x="503" y="460" on="1"/>
        <pt x="580" y="460" on="1"/>
        <pt x="342" y="235" on="1"/>
        <pt x="481" y="0" on="1"/>
        <pt x="414" y="0" on="1"/>
        <pt x="302" y="201" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          11 8 2 5 4 1 7 3 6 114 10 1 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="y" xMin="-77" yMin="-233" xMax="611" yMax="460">
      <contour>
        <pt x="611" y="460" on="1"/>
        <pt x="195" y="-130" on="1"/>
        <pt x="145" y="-201" on="0"/>
        <pt x="94" y="-228" on="0"/>
        <pt x="19" y="-230" on="1"/>
        <pt x="-76" y="-233" on="1"/>
        <pt x="-77" y="-182" on="1"/>
        <pt x="18" y="-179" on="1"/>
        <pt x="71" y="-177" on="0"/>
        <pt x="109" y="-155" on="0"/>
        <pt x="147" y="-103" on="1"/>
        <pt x="209" y="-18" on="1"/>
        <pt x="127" y="460" on="1"/>
        <pt x="186" y="460" on="1"/>
        <pt x="251" y="42" on="1"/>
        <pt x="538" y="460" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          1 10 11 14 4 5 15 12 6 114 6 5 14 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="yacute" xMin="-77" yMin="-233" xMax="611" yMax="736">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="311" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 16 15 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ycircumflex" xMin="-77" yMin="-233" xMax="611" yMax="741">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0302" x="312" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 16 12 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ydieresis" xMin="-77" yMin="-233" xMax="611" yMax="655">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0308" x="312" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          2 1 19 12 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="yen" xMin="60" yMin="0" xMax="684" yMax="655">
      <contour>
        <pt x="252" y="140" on="1"/>
        <pt x="60" y="140" on="1"/>
        <pt x="73" y="188" on="1"/>
        <pt x="266" y="188" on="1"/>
        <pt x="290" y="274" on="1"/>
        <pt x="98" y="274" on="1"/>
        <pt x="111" y="322" on="1"/>
        <pt x="289" y="322" on="1"/>
        <pt x="174" y="655" on="1"/>
        <pt x="237" y="655" on="1"/>
        <pt x="332" y="340" on="1"/>
        <pt x="610" y="655" on="1"/>
        <pt x="684" y="655" on="1"/>
        <pt x="376" y="322" on="1"/>
        <pt x="553" y="322" on="1"/>
        <pt x="540" y="274" on="1"/>
        <pt x="345" y="274" on="1"/>
        <pt x="321" y="188" on="1"/>
        <pt x="515" y="188" on="1"/>
        <pt x="502" y="140" on="1"/>
        <pt x="307" y="140" on="1"/>
        <pt x="267" y="0" on="1"/>
        <pt x="212" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          13 10 7 7 4 20 0 0 17 3 16 4 4 8 22 12 114 11 8 4 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ygrave" xMin="-77" yMin="-233" xMax="611" yMax="729">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0300" x="311" y="-5" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 18 15 1 1 73 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="z" xMin="33" yMin="0" xMax="581" yMax="460">
      <contour>
        <pt x="473" y="0" on="1"/>
        <pt x="33" y="0" on="1"/>
        <pt x="33" y="29" on="1"/>
        <pt x="477" y="407" on="1"/>
        <pt x="477" y="410" on="1"/>
        <pt x="141" y="410" on="1"/>
        <pt x="155" y="460" on="1"/>
        <pt x="581" y="460" on="1"/>
        <pt x="581" y="431" on="1"/>
        <pt x="141" y="53" on="1"/>
        <pt x="141" y="51" on="1"/>
        <pt x="488" y="51" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          8 3 5 5 6 6 114 9 2 10 10 1 10 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="zacute" xMin="33" yMin="0" xMax="599" yMax="741">
      <component glyphName="z" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0301" x="309" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 6 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="zcaron" xMin="33" yMin="0" xMax="632" yMax="741">
      <component glyphName="z" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030C" x="309" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 12 6 1 1 76 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="zdotaccent" xMin="33" yMin="0" xMax="581" yMax="659">
      <component glyphName="z" x="0" y="0" flags="0x204"/>
      <component glyphName="uni0307" x="309" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 15 6 1 1 96 86
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="zero" xMin="70" yMin="-15" xMax="594" yMax="670">
      <contour>
        <pt x="228" y="592" on="1"/>
        <pt x="267" y="631" on="0"/>
        <pt x="360" y="670" on="0"/>
        <pt x="416" y="670" on="1"/>
        <pt x="501" y="670" on="0"/>
        <pt x="594" y="566" on="0"/>
        <pt x="594" y="469" on="1"/>
        <pt x="594" y="356" on="0"/>
        <pt x="508" y="135" on="0"/>
        <pt x="436" y="63" on="1"/>
        <pt x="397" y="24" on="0"/>
        <pt x="304" y="-15" on="0"/>
        <pt x="248" y="-15" on="1"/>
        <pt x="163" y="-15" on="0"/>
        <pt x="70" y="89" on="0"/>
        <pt x="70" y="186" on="1"/>
        <pt x="70" y="299" on="0"/>
        <pt x="156" y="520" on="0"/>
      </contour>
      <contour>
        <pt x="413" y="619" on="1"/>
        <pt x="375" y="619" on="0"/>
        <pt x="305" y="587" on="0"/>
        <pt x="273" y="555" on="1"/>
        <pt x="222" y="504" on="0"/>
        <pt x="150" y="345" on="0"/>
        <pt x="138" y="257" on="1"/>
        <pt x="531" y="454" on="1"/>
        <pt x="531" y="472" on="1"/>
        <pt x="531" y="543" on="0"/>
        <pt x="470" y="619" on="0"/>
      </contour>
      <contour>
        <pt x="133" y="183" on="1"/>
        <pt x="133" y="112" on="0"/>
        <pt x="194" y="36" on="0"/>
        <pt x="251" y="36" on="1"/>
        <pt x="289" y="36" on="0"/>
        <pt x="359" y="68" on="0"/>
        <pt x="391" y="100" on="1"/>
        <pt x="442" y="151" on="0"/>
        <pt x="513" y="310" on="0"/>
        <pt x="526" y="400" on="1"/>
        <pt x="133" y="202" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          39 24 38 25 4 3 32 12 13 114 18 3 5 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="zero.den" xMin="134" yMin="-15" xMax="464" yMax="395">
      <contour>
        <pt x="370" y="35" on="1"/>
        <pt x="344" y="10" on="0"/>
        <pt x="284" y="-15" on="0"/>
        <pt x="251" y="-15" on="1"/>
        <pt x="194" y="-15" on="0"/>
        <pt x="134" y="45" on="0"/>
        <pt x="134" y="102" on="1"/>
        <pt x="134" y="167" on="0"/>
        <pt x="187" y="304" on="0"/>
        <pt x="228" y="345" on="1"/>
        <pt x="254" y="370" on="0"/>
        <pt x="314" y="395" on="0"/>
        <pt x="347" y="395" on="1"/>
        <pt x="404" y="395" on="0"/>
        <pt x="464" y="335" on="0"/>
        <pt x="464" y="278" on="1"/>
        <pt x="464" y="213" on="0"/>
        <pt x="411" y="76" on="0"/>
      </contour>
      <contour>
        <pt x="344" y="352" on="1"/>
        <pt x="321" y="352" on="0"/>
        <pt x="279" y="333" on="0"/>
        <pt x="262" y="315" on="1"/>
        <pt x="236" y="288" on="0"/>
        <pt x="195" y="197" on="0"/>
        <pt x="188" y="149" on="1"/>
        <pt x="414" y="264" on="1"/>
        <pt x="414" y="310" on="0"/>
        <pt x="380" y="352" on="0"/>
      </contour>
      <contour>
        <pt x="254" y="28" on="1"/>
        <pt x="277" y="28" on="0"/>
        <pt x="319" y="47" on="0"/>
        <pt x="336" y="65" on="1"/>
        <pt x="361" y="91" on="0"/>
        <pt x="400" y="176" on="0"/>
        <pt x="409" y="222" on="1"/>
        <pt x="184" y="107" on="1"/>
        <pt x="184" y="68" on="0"/>
        <pt x="220" y="28" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          6 35 24 34 25 15 6 3 18 12 186 114 28 3 187 114
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="zero.inf" xMin="69" yMin="-245" xMax="399" yMax="165">
      <component glyphName="zero.den" x="-65" y="-230" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="zero.num" xMin="212" yMin="260" xMax="542" yMax="670">
      <component glyphName="zero.den" x="78" y="275" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="zero.sup" xMin="228" yMin="315" xMax="558" yMax="725">
      <component glyphName="zero.den" x="94" y="330" flags="0x4"/>
    </TTGlyph>

  </glyf>

  <name>
    <namerecord nameID="1" platformID="1" platEncID="0" langID="0x0" unicode="True">
      IntelMono Light Italic
    </namerecord>
    <namerecord nameID="2" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="1" platEncID="0" langID="0x0" unicode="True">
      1.000;FRJN;IntelMono-LightItalic
    </namerecord>
    <namerecord nameID="4" platformID="1" platEncID="0" langID="0x0" unicode="True">
      IntelMono Light Italic
    </namerecord>
    <namerecord nameID="5" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Version 1.000;hotconv 1.0.117;makeotfexe 2.5.65602
    </namerecord>
    <namerecord nameID="6" platformID="1" platEncID="0" langID="0x0" unicode="True">
      IntelMono-LightItalic
    </namerecord>
    <namerecord nameID="16" platformID="1" platEncID="0" langID="0x0" unicode="True">
      IntelMono
    </namerecord>
    <namerecord nameID="17" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Light Italic
    </namerecord>
    <namerecord nameID="256" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Figure Colon (Figures Only)
    </namerecord>
    <namerecord nameID="257" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Figure Colon (Global)
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      IntelMono Light Italic
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      1.000;FRJN;IntelMono-LightItalic
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      IntelMono Light Italic
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 1.000;hotconv 1.0.117;makeotfexe 2.5.65602
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      IntelMono-LightItalic
    </namerecord>
    <namerecord nameID="16" platformID="3" platEncID="1" langID="0x409">
      IntelMono
    </namerecord>
    <namerecord nameID="17" platformID="3" platEncID="1" langID="0x409">
      Light Italic
    </namerecord>
    <namerecord nameID="256" platformID="3" platEncID="1" langID="0x409">
      Figure Colon (Figures Only)
    </namerecord>
    <namerecord nameID="257" platformID="3" platEncID="1" langID="0x409">
      Figure Colon (Global)
    </namerecord>
  </name>

  <post>
    <formatType value="2.0"/>
    <italicAngle value="-16.0"/>
    <underlinePosition value="0"/>
    <underlineThickness value="0"/>
    <isFixedPitch value="1"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
    <psNames>
      <!-- This file uses unique glyph names based on the information
           found in the 'post' table. Since these names might not be unique,
           we have to invent artificial names in case of clashes. In order to
           be able to retain the original information, we need a name to
           ps name mapping for those cases where they differ. That's what
           you see below.
            -->
    </psNames>
    <extraNames>
      <!-- following are the name that are not taken from the standard Mac glyph order -->
      <psName name="uni2025"/>
      <psName name="uni00AB"/>
      <psName name="uni00BB"/>
      <psName name="uni2117"/>
      <psName name="uni2120"/>
      <psName name="colon.fig"/>
      <psName name="Euro"/>
      <psName name="uni20A6"/>
      <psName name="uni20B1"/>
      <psName name="uni20BA"/>
      <psName name="uni20BD"/>
      <psName name="uni20B9"/>
      <psName name="uni0E3F"/>
      <psName name="uni20A9"/>
      <psName name="dong"/>
      <psName name="onethird"/>
      <psName name="twothirds"/>
      <psName name="onefifth"/>
      <psName name="twofifths"/>
      <psName name="threefifths"/>
      <psName name="fourfifths"/>
      <psName name="onesixth"/>
      <psName name="fivesixths"/>
      <psName name="oneeighth"/>
      <psName name="threeeighths"/>
      <psName name="fiveeighths"/>
      <psName name="seveneighths"/>
      <psName name="zero.sup"/>
      <psName name="one.sup"/>
      <psName name="two.sup"/>
      <psName name="three.sup"/>
      <psName name="four.sup"/>
      <psName name="five.sup"/>
      <psName name="six.sup"/>
      <psName name="seven.sup"/>
      <psName name="eight.sup"/>
      <psName name="nine.sup"/>
      <psName name="zero.inf"/>
      <psName name="one.inf"/>
      <psName name="two.inf"/>
      <psName name="three.inf"/>
      <psName name="four.inf"/>
      <psName name="five.inf"/>
      <psName name="six.inf"/>
      <psName name="seven.inf"/>
      <psName name="eight.inf"/>
      <psName name="nine.inf"/>
      <psName name="uni02B9"/>
      <psName name="uni02BA"/>
      <psName name="uni02BB"/>
      <psName name="uni02BC"/>
      <psName name="uni02BF"/>
      <psName name="uni02BE"/>
      <psName name="uni02C8"/>
      <psName name="uni02CC"/>
      <psName name="uniA788"/>
      <psName name="uni02CD"/>
      <psName name="uni1EAC"/>
      <psName name="uni1EA4"/>
      <psName name="uni1EA6"/>
      <psName name="uni1EA8"/>
      <psName name="uni1EAA"/>
      <psName name="uni01CD"/>
      <psName name="Abreve"/>
      <psName name="uni1EB6"/>
      <psName name="uni1EAE"/>
      <psName name="uni1EB0"/>
      <psName name="uni1EB2"/>
      <psName name="uni1EB4"/>
      <psName name="Amacron"/>
      <psName name="uni0226"/>
      <psName name="uni1EA2"/>
      <psName name="uni1EA0"/>
      <psName name="Aogonek"/>
      <psName name="uni1E06"/>
      <psName name="Ccircumflex"/>
      <psName name="Cdotaccent"/>
      <psName name="Dcaron"/>
      <psName name="uni1E12"/>
      <psName name="uni1E0E"/>
      <psName name="uni1E0C"/>
      <psName name="Dcroat"/>
      <psName name="uni1EC6"/>
      <psName name="uni1EBE"/>
      <psName name="uni1EC0"/>
      <psName name="uni1EC2"/>
      <psName name="uni1EC4"/>
      <psName name="Ecaron"/>
      <psName name="Ebreve"/>
      <psName name="uni1EBC"/>
      <psName name="Emacron"/>
      <psName name="Edotaccent"/>
      <psName name="uni1EBA"/>
      <psName name="uni1EB8"/>
      <psName name="Eogonek"/>
      <psName name="Gcircumflex"/>
      <psName name="Gcaron"/>
      <psName name="uni1E20"/>
      <psName name="Gdotaccent"/>
      <psName name="uni0122"/>
      <psName name="Hcircumflex"/>
      <psName name="uni1E2A"/>
      <psName name="uni1E24"/>
      <psName name="uni1E28"/>
      <psName name="Hbar"/>
      <psName name="uni01CF"/>
      <psName name="Ibreve"/>
      <psName name="Itilde"/>
      <psName name="Imacron"/>
      <psName name="uni1EC8"/>
      <psName name="uni1ECA"/>
      <psName name="Iogonek"/>
      <psName name="Jcircumflex"/>
      <psName name="uni1E34"/>
      <psName name="uni0136"/>
      <psName name="uni1E32"/>
      <psName name="Lacute"/>
      <psName name="Lcaron"/>
      <psName name="uni013B"/>
      <psName name="uni1E3C"/>
      <psName name="uni1E3A"/>
      <psName name="uni1E38"/>
      <psName name="uni1E36"/>
      <psName name="Ldot"/>
      <psName name="uni1E3E"/>
      <psName name="uni1E40"/>
      <psName name="uni1E42"/>
      <psName name="Nacute"/>
      <psName name="uni01F8"/>
      <psName name="Ncaron"/>
      <psName name="uni1E44"/>
      <psName name="uni1E4A"/>
      <psName name="uni0145"/>
      <psName name="uni1E46"/>
      <psName name="uni1E48"/>
      <psName name="Eng"/>
      <psName name="Ohungarumlaut"/>
      <psName name="uni1ED8"/>
      <psName name="uni1ED0"/>
      <psName name="uni1ED2"/>
      <psName name="uni1ED4"/>
      <psName name="uni1ED6"/>
      <psName name="uni01D1"/>
      <psName name="Obreve"/>
      <psName name="Omacron"/>
      <psName name="uni022E"/>
      <psName name="uni1ECE"/>
      <psName name="uni1ECC"/>
      <psName name="uni01EA"/>
      <psName name="Ohorn"/>
      <psName name="uni1EDA"/>
      <psName name="uni1EDC"/>
      <psName name="uni1EE0"/>
      <psName name="uni1EDE"/>
      <psName name="uni1EE2"/>
      <psName name="Racute"/>
      <psName name="Rcaron"/>
      <psName name="uni1E58"/>
      <psName name="uni1E5C"/>
      <psName name="uni0156"/>
      <psName name="uni1E5A"/>
      <psName name="uni1E5E"/>
      <psName name="Sacute"/>
      <psName name="Scircumflex"/>
      <psName name="uni0218"/>
      <psName name="uni1E62"/>
      <psName name="uni015E"/>
      <psName name="uni1E9E"/>
      <psName name="Tcaron"/>
      <psName name="uni1E70"/>
      <psName name="uni021A"/>
      <psName name="uni1E6C"/>
      <psName name="uni1E6E"/>
      <psName name="uni0162"/>
      <psName name="Tbar"/>
      <psName name="Uhungarumlaut"/>
      <psName name="uni01D3"/>
      <psName name="Ubreve"/>
      <psName name="Utilde"/>
      <psName name="Umacron"/>
      <psName name="uni01D7"/>
      <psName name="uni01DB"/>
      <psName name="uni01D9"/>
      <psName name="uni01D5"/>
      <psName name="Uring"/>
      <psName name="uni1EE6"/>
      <psName name="uni1EE4"/>
      <psName name="Uogonek"/>
      <psName name="Uhorn"/>
      <psName name="uni1EE8"/>
      <psName name="uni1EEA"/>
      <psName name="uni1EEE"/>
      <psName name="uni1EEC"/>
      <psName name="uni1EF0"/>
      <psName name="uni1E7E"/>
      <psName name="Wacute"/>
      <psName name="Wgrave"/>
      <psName name="Wcircumflex"/>
      <psName name="Wdieresis"/>
      <psName name="uni1E8C"/>
      <psName name="Ygrave"/>
      <psName name="Ycircumflex"/>
      <psName name="uni1EF8"/>
      <psName name="uni0232"/>
      <psName name="uni1E8E"/>
      <psName name="uni1EF6"/>
      <psName name="uni1EF4"/>
      <psName name="Zacute"/>
      <psName name="uni1E90"/>
      <psName name="Zdotaccent"/>
      <psName name="uni1E92"/>
      <psName name="uni1E94"/>
      <psName name="uni018F"/>
      <psName name="uni1EAD"/>
      <psName name="uni1EA5"/>
      <psName name="uni1EA7"/>
      <psName name="uni1EA9"/>
      <psName name="uni1EAB"/>
      <psName name="uni01CE"/>
      <psName name="abreve"/>
      <psName name="uni1EB7"/>
      <psName name="uni1EAF"/>
      <psName name="uni1EB1"/>
      <psName name="uni1EB3"/>
      <psName name="uni1EB5"/>
      <psName name="amacron"/>
      <psName name="uni0227"/>
      <psName name="uni1EA3"/>
      <psName name="uni1EA1"/>
      <psName name="aogonek"/>
      <psName name="uni1E07"/>
      <psName name="ccircumflex"/>
      <psName name="cdotaccent"/>
      <psName name="dcaron"/>
      <psName name="uni1E13"/>
      <psName name="uni1E0F"/>
      <psName name="uni1E0D"/>
      <psName name="uni1EC7"/>
      <psName name="uni1EBF"/>
      <psName name="uni1EC1"/>
      <psName name="uni1EC3"/>
      <psName name="uni1EC5"/>
      <psName name="ecaron"/>
      <psName name="ebreve"/>
      <psName name="uni1EBD"/>
      <psName name="emacron"/>
      <psName name="edotaccent"/>
      <psName name="uni1EBB"/>
      <psName name="uni1EB9"/>
      <psName name="eogonek"/>
      <psName name="gcircumflex"/>
      <psName name="gcaron"/>
      <psName name="uni1E21"/>
      <psName name="gdotaccent"/>
      <psName name="uni0123"/>
      <psName name="hcircumflex"/>
      <psName name="uni1E2B"/>
      <psName name="uni1E96"/>
      <psName name="uni1E25"/>
      <psName name="uni1E29"/>
      <psName name="hbar"/>
      <psName name="uni01D0"/>
      <psName name="ibreve"/>
      <psName name="itilde"/>
      <psName name="imacron"/>
      <psName name="i.dot"/>
      <psName name="uni1EC9"/>
      <psName name="uni1ECB"/>
      <psName name="iogonek"/>
      <psName name="uni0237"/>
      <psName name="jcircumflex"/>
      <psName name="uni01F0"/>
      <psName name="uni1E35"/>
      <psName name="uni0137"/>
      <psName name="uni1E33"/>
      <psName name="lacute"/>
      <psName name="lcaron"/>
      <psName name="uni013C"/>
      <psName name="uni1E3D"/>
      <psName name="uni1E3B"/>
      <psName name="uni1E39"/>
      <psName name="uni1E37"/>
      <psName name="ldot"/>
      <psName name="uni1E3F"/>
      <psName name="uni1E41"/>
      <psName name="uni1E43"/>
      <psName name="nacute"/>
      <psName name="uni01F9"/>
      <psName name="ncaron"/>
      <psName name="uni1E45"/>
      <psName name="uni1E4B"/>
      <psName name="uni0146"/>
      <psName name="uni1E47"/>
      <psName name="uni1E49"/>
      <psName name="eng"/>
      <psName name="ohungarumlaut"/>
      <psName name="uni1ED9"/>
      <psName name="uni1ED1"/>
      <psName name="uni1ED3"/>
      <psName name="uni1ED5"/>
      <psName name="uni1ED7"/>
      <psName name="uni01D2"/>
      <psName name="obreve"/>
      <psName name="omacron"/>
      <psName name="uni022F"/>
      <psName name="uni1ECF"/>
      <psName name="uni1ECD"/>
      <psName name="uni01EB"/>
      <psName name="ohorn"/>
      <psName name="uni1EDB"/>
      <psName name="uni1EDD"/>
      <psName name="uni1EE1"/>
      <psName name="uni1EDF"/>
      <psName name="uni1EE3"/>
      <psName name="racute"/>
      <psName name="rcaron"/>
      <psName name="uni1E59"/>
      <psName name="uni1E5D"/>
      <psName name="uni0157"/>
      <psName name="uni1E5B"/>
      <psName name="uni1E5F"/>
      <psName name="sacute"/>
      <psName name="scircumflex"/>
      <psName name="uni0219"/>
      <psName name="uni1E63"/>
      <psName name="uni015F"/>
      <psName name="tcaron"/>
      <psName name="uni1E71"/>
      <psName name="uni021B"/>
      <psName name="uni1E6D"/>
      <psName name="uni1E6F"/>
      <psName name="uni0163"/>
      <psName name="tbar"/>
      <psName name="uhungarumlaut"/>
      <psName name="uni01D4"/>
      <psName name="ubreve"/>
      <psName name="utilde"/>
      <psName name="umacron"/>
      <psName name="uni01D8"/>
      <psName name="uni01DC"/>
      <psName name="uni01DA"/>
      <psName name="uni01D6"/>
      <psName name="uring"/>
      <psName name="uni1EE7"/>
      <psName name="uni1EE5"/>
      <psName name="uogonek"/>
      <psName name="uhorn"/>
      <psName name="uni1EE9"/>
      <psName name="uni1EEB"/>
      <psName name="uni1EEF"/>
      <psName name="uni1EED"/>
      <psName name="uni1EF1"/>
      <psName name="uni1E7F"/>
      <psName name="wacute"/>
      <psName name="wgrave"/>
      <psName name="wcircumflex"/>
      <psName name="wdieresis"/>
      <psName name="uni1E8D"/>
      <psName name="ygrave"/>
      <psName name="ycircumflex"/>
      <psName name="uni1EF9"/>
      <psName name="uni0233"/>
      <psName name="uni1E8F"/>
      <psName name="uni1EF7"/>
      <psName name="uni1EF5"/>
      <psName name="zacute"/>
      <psName name="uni1E91"/>
      <psName name="zdotaccent"/>
      <psName name="uni1E93"/>
      <psName name="uni1E95"/>
      <psName name="uni0259"/>
      <psName name="uni00A0"/>
      <psName name="zero.num"/>
      <psName name="one.num"/>
      <psName name="two.num"/>
      <psName name="three.num"/>
      <psName name="four.num"/>
      <psName name="five.num"/>
      <psName name="six.num"/>
      <psName name="seven.num"/>
      <psName name="eight.num"/>
      <psName name="nine.num"/>
      <psName name="fracbar"/>
      <psName name="zero.den"/>
      <psName name="one.den"/>
      <psName name="two.den"/>
      <psName name="three.den"/>
      <psName name="four.den"/>
      <psName name="five.den"/>
      <psName name="six.den"/>
      <psName name="seven.den"/>
      <psName name="eight.den"/>
      <psName name="nine.den"/>
      <psName name="uni2011"/>
      <psName name="uni2015"/>
      <psName name="middotcat"/>
      <psName name="middotcat.cap"/>
      <psName name="uni0301"/>
      <psName name="uni030B"/>
      <psName name="uni0300"/>
      <psName name="uni0315"/>
      <psName name="uni0302"/>
      <psName name="uni030C"/>
      <psName name="uni0306"/>
      <psName name="uni0303"/>
      <psName name="uni0304"/>
      <psName name="uni0308"/>
      <psName name="uni0307"/>
      <psName name="uni030A"/>
      <psName name="uni0312"/>
      <psName name="uni0309"/>
      <psName name="uni032D"/>
      <psName name="uni032E"/>
      <psName name="uni0331"/>
      <psName name="uni0324"/>
      <psName name="uni0323"/>
      <psName name="uni0326"/>
      <psName name="uni0327"/>
      <psName name="uni0328"/>
      <psName name="uni00A80301"/>
      <psName name="uni00A80300"/>
      <psName name="uni00A8030C"/>
      <psName name="uni00A80304"/>
      <psName name="uni02D80301"/>
      <psName name="uni02D80300"/>
      <psName name="uni02D80309"/>
      <psName name="uni02D80303"/>
      <psName name="uni02C60301"/>
      <psName name="uni02C60300"/>
      <psName name="uni02C60309"/>
      <psName name="uni02C60303"/>
      <psName name="uni0301.cap"/>
      <psName name="uni030B.cap"/>
      <psName name="uni0300.cap"/>
      <psName name="uni0302.cap"/>
      <psName name="uni030C.cap"/>
      <psName name="uni0306.cap"/>
      <psName name="uni0303.cap"/>
      <psName name="uni0304.cap"/>
      <psName name="uni0308.cap"/>
      <psName name="uni0307.cap"/>
      <psName name="uni030A.cap"/>
      <psName name="uni0309.cap"/>
      <psName name="uni00A80301.cap"/>
      <psName name="uni00A80300.cap"/>
      <psName name="uni00A8030C.cap"/>
      <psName name="uni00A80304.cap"/>
      <psName name="uni02D80301.cap"/>
      <psName name="uni02D80300.cap"/>
      <psName name="uni02D80309.cap"/>
      <psName name="uni02D80303.cap"/>
      <psName name="uni02C60301.cap"/>
      <psName name="uni02C60300.cap"/>
      <psName name="uni02C60309.cap"/>
      <psName name="uni02C60303.cap"/>
    </extraNames>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="8" rangeGaspBehavior="10"/>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="15"/>
  </gasp>

  <TSI0>
    <!-- This table will be calculated by the compiler -->
  </TSI0>

  <TSI1>

    <glyphProgram name=".notdef">
/* TT glyph 0, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
MDAP[R], 1
SHP[1], 15
SRP1[], 15
SHP[1], 10
SRP1[], 10
SHP[1], 9
MDAP[R], 2
SHP[1], 5
SRP1[], 5
SHP[1], 7
SHP[1], 12
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="A">
/* TT glyph 1, char 0x41 (A) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 2, 8, 114
SHP[2], 6
CALL[], 3, 2, 114
SRP1[], 2
IP[], 0
MDAP[R], 0
IP[], 8
SHP[1], 9
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="AE">
/* TT glyph 227, char 0xc6 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 2, 8, 114
SHP[2], 14
SRP1[], 14
SHP[1], 11
CALL[], 3, 2, 114
SHP[2], 6
SHP[2], 16
SRP1[], 2
IP[], 10
IP[], 0
MDAP[R], 10
MDAP[R], 0
SRP1[], 10
SHP[1], 7
SRP1[], 0
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Aacute">
/* VTTTalk Unicode 0xc1 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 660, 292, 0
SVTCA[Y]
CALL[], 11, 3, 1, 1, 76, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="Abreve">
/* VTTTalk Unicode 0x102 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 665, 292, 0
SVTCA[Y]
CALL[], 18, 3, 1, 1, 76, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Acircumflex">
/* VTTTalk Unicode 0xc2 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 663, 288, -10

SVTCA[Y]
CALL[], 11, 3, 1, 1, 67, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Adieresis">
/* VTTTalk Unicode 0xc4 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 668, 292, 0
SVTCA[Y]
CALL[], 14, 3, 1, 1, 96, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="Agrave">
/* VTTTalk Unicode 0xc0 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 662, 292, 0
SVTCA[Y]
CALL[], 13, 3, 1, 1, 76, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="Amacron">
/* VTTTalk Unicode 0x100 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 667, 292, 0
SVTCA[Y]
CALL[], 12, 3, 1, 1, 116, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="Aogonek">
/* TT glyph 226, char 0x104 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 2, 8, 114
MDRP[m&gt;RGr], 14
SHP[2], 13
SHP[1], 22
SRP1[], 22
SHP[1], 6
CALL[], 3, 2, 114
SRP1[], 14
IP[], 0
MDAP[R], 0
SHP[1], 25
SRP1[], 2
IP[], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Aring">
/* TT glyph 223, char 0xc5 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 8, 114
SHP[2], 17
CALL[], 28, 2, 114
SHP[2], 3
SHP[2], 15
SHP[2], 31
SRP2[], 1
IP[], 0
MDAP[R], 0
SHP[1], 32
SRP0[], 28
MDRP[m&gt;RGr], 9
SHP[2], 22
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Atilde">
/* VTTTalk Unicode 0xc3 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 666, 292, 0
SVTCA[Y]
CALL[], 15, 3, 1, 1, 76, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="B">
/* TT glyph 2, char 0x42 (B) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 30
CALL[], 1, 2, 114
SHP[2], 20
SRP1[], 0
IP[], 29
MDAP[R], 29
SHP[1], 28
SHP[1], 21
SRP1[], 21
SHP[1], 22
SRP2[], 29
IP[], 8
IP[], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="C">
/* TT glyph 3, char 0x43 (C) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 9, 114
CALL[], 9, 3, 114
SHP[2], 16
SRP1[], 0
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Cacute">
/* VTTTalk Unicode 0x106 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 3, 0, 0
OFFSET[R], 660, 330, 0
SVTCA[Y]
CALL[], 32, 9, 1, 1, 63, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ccaron">
/* VTTTalk Unicode 0x10c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 3, 0, 0
OFFSET[R], 664, 330, 0
SVTCA[Y]
CALL[], 32, 9, 1, 1, 63, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ccedilla">
/* TT glyph 233, char 0xc7 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 27, 3, 114
SHP[2], 34
CALL[], 50, 9, 114
SHP[2], 18
SHP[2], 43
MDRP[m&gt;RGr], 6
SHP[2], 7
SLOOP[], 3
IP[], 16, 17, 51
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ccircumflex">
/* VTTTalk Unicode 0x108 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 3, 0, 0
OFFSET[R], 663, 328, -5
SVTCA[Y]
CALL[], 32, 9, 1, 1, 59, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Cdotaccent">
/* VTTTalk Unicode 0x10a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 3, 0, 0
OFFSET[R], 669, 330, 0
SVTCA[Y]
CALL[], 35, 9, 1, 1, 83, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="D">
/* TT glyph 4, char 0x44 (D) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SHP[2], 19
SRP1[], 0
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Dcaron">
/* VTTTalk Unicode 0x10e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 4, 0, 0
OFFSET[R], 664, 273, 0
SVTCA[Y]
CALL[], 23, 1, 1, 1, 76, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Dcroat">
/* VTTTalk Unicode 0x110 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0



    </glyphProgram>

    <glyphProgram name="E">
/* TT glyph 5, char 0x45 (E) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SHP[2], 4
SRP1[], 0
IP[], 8
MDAP[R], 8
SHP[1], 5
SRP1[], 0
SHP[1], 9
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Eacute">
/* VTTTalk Unicode 0xc9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 660, 335, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Ebreve">
/* VTTTalk Unicode 0x114 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 665, 335, 0
SVTCA[Y]
CALL[], 19, 1, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ecaron">
/* VTTTalk Unicode 0x11a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 664, 335, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ecircumflex">
/* VTTTalk Unicode 0xca */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 663, 335, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 77, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Edieresis">
/* VTTTalk Unicode 0xcb */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 668, 335, 0
SVTCA[Y]
CALL[], 15, 1, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="Edotaccent">
/* VTTTalk Unicode 0x116 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 669, 335, 0
SVTCA[Y]
CALL[], 15, 1, 1, 1, 96, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Egrave">
/* VTTTalk Unicode 0xc8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 662, 335, 0
SVTCA[Y]
CALL[], 14, 1, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Emacron">
/* VTTTalk Unicode 0x112 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 667, 335, 0
SVTCA[Y]
CALL[], 13, 1, 1, 1, 116, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Eng">
/* TT glyph 304, char 0x14a */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 2, 8, 114
MDRP[m&gt;RWh], 12
SHP[2], 13
SHP[1], 17
SRP1[], 17
SHP[1], 8
CALL[], 3, 2, 114
SHP[2], 7
SRP2[], 2
IP[], 5
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eogonek">
/* TT glyph 255, char 0x118 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 4, 8, 114
SHP[2], 13
SHP[2], 16
SMD[], 128
MDRP[m&gt;RGr], 24
SHP[2], 23
CALL[], 5, 2, 114
SHP[2], 8
SRP1[], 24
IP[], 12
MDAP[R], 12
SHP[1], 9
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Eth">
/* TT glyph 396, char 0xd0 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 29
CALL[], 18, 8, 114
SHP[2], 22
SRP2[], 4
IP[], 21
MDAP[R], 21
SHP[1], 1
SHP[1], 30
SRP1[], 30
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Euro">
/* TT glyph 136, char 0x20ac */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 10, 5, 114
SHP[2], 17
CALL[], 40, 13, 114
SHP[2], 33
SRP1[], 10
IP[], 24
MDAP[R], 24
SHP[1], 3
MDRP[m&gt;RWh], 23
SHP[2], 4
SRP1[], 4
SHP[1], 7
SRP1[], 7
SHP[1], 20
SRP1[], 24
SHP[1], 27
SRP1[], 27
SHP[1], 0
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="F">
/* TT glyph 6, char 0x46 (F) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SHP[2], 4
SRP1[], 0
IP[], 8
MDAP[R], 8
SHP[1], 5
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="G">
/* TT glyph 7, char 0x47 (G) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 24, 9, 114
SHP[2], 13
CALL[], 33, 3, 114
SHP[2], 4
SRP1[], 24
IP[], 19
MDAP[R], 19
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Gbreve">
/* VTTTalk Unicode 0x11e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 7, 0, 0
OFFSET[R], 665, 353, 5
SVTCA[Y]
CALL[], 43, 33, 1, 1, 70, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Gcaron">
/* VTTTalk Unicode 0x1e6 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 7, 0, 0
OFFSET[R], 664, 353, 5
SVTCA[Y]
CALL[], 36, 33, 1, 1, 70, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Gcircumflex">
/* VTTTalk Unicode 0x11c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 7, 0, 0
OFFSET[R], 663, 351, 0
SVTCA[Y]
CALL[], 36, 33, 1, 1, 66, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Gdotaccent">
/* VTTTalk Unicode 0x120 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 7, 0, 0
OFFSET[R], 669, 353, 5
SVTCA[Y]
CALL[], 39, 33, 1, 1, 90, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="H">
/* TT glyph 8, char 0x48 (H) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 8
CALL[], 1, 2, 114
SHP[2], 6
SRP1[], 0
IP[], 10
MDAP[R], 10
SHP[1], 3
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Hbar">
/* TT glyph 266, char 0x126 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 9
CALL[], 19, 8, 114
SHP[2], 15
SRP2[], 4
IP[], 21
MDAP[R], 21
SHP[1], 17
MDRP[m&gt;RBl], 0
SHP[2], 3
SRP1[], 3
SHP[1], 6
SRP1[], 6
SHP[1], 10
SHP[2], 20
SRP1[], 20
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Hcircumflex">
/* VTTTalk Unicode 0x124 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 8, 0, 0
OFFSET[R], 663, 307, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 77, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="I">
/* TT glyph 9, char 0x49 (I) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 5, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Iacute">
/* VTTTalk Unicode 0xcd */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 9, 0, 0
OFFSET[R], 660, 307, 0
SVTCA[Y]
CALL[], 12, 5, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Ibreve">
/* VTTTalk Unicode 0x12c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 9, 0, 0
OFFSET[R], 665, 307, 0
SVTCA[Y]
CALL[], 19, 5, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Icircumflex">
/* VTTTalk Unicode 0xce */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 9, 0, 0
OFFSET[R], 663, 306, 0
SVTCA[Y]
CALL[], 12, 5, 1, 1, 77, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Idieresis">
/* VTTTalk Unicode 0xcf */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 9, 0, 0
OFFSET[R], 668, 307, 0
SVTCA[Y]
CALL[], 15, 5, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="Idotaccent">
/* VTTTalk Unicode 0x130 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 9, 0, 0
OFFSET[R], 669, 307, 0
SVTCA[Y]
CALL[], 15, 5, 1, 1, 96, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Igrave">
/* VTTTalk Unicode 0xcc */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 9, 0, 0
OFFSET[R], 662, 307, 0
SVTCA[Y]
CALL[], 14, 5, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Imacron">
/* VTTTalk Unicode 0x12a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 9, 0, 0
OFFSET[R], 667, 307, 0
SVTCA[Y]
CALL[], 13, 5, 1, 1, 116, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Iogonek">
/* TT glyph 278, char 0x12e */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 12
SHP[2], 2
SRP1[], 2
SHP[1], 9
MDRP[m&gt;RGr], 20
SHP[2], 19
CALL[], 5, 2, 114
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Itilde">
/* VTTTalk Unicode 0x128 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 9, 0, 0
OFFSET[R], 666, 307, 0
SVTCA[Y]
CALL[], 16, 5, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="J">
/* TT glyph 10, char 0x4a (J) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 9, 114
CALL[], 11, 2, 114
SRP1[], 0
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Jcircumflex">
/* VTTTalk Unicode 0x134 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 10, 0, 0
OFFSET[R], 663, 468, -10
SVTCA[Y]
CALL[], 16, 11, 1, 1, 67, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="K">
/* TT glyph 11, char 0x4b (K) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 4
CALL[], 12, 8, 114
SHP[2], 9
SRP1[], 0
SLOOP[], 3
IP[], 10, 6, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="L">
/* TT glyph 12, char 0x4c (L) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SRP1[], 0
SHP[1], 3
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Lacute">
/* VTTTalk Unicode 0x139 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 12, 0, 0
OFFSET[R], 660, 138, 0
SVTCA[Y]
CALL[], 6, 1, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Lcaron">
/* VTTTalk Unicode 0x13d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 12, 0, 0
OFFSET[R], 629, 327, -55
SVTCA[Y]
CALL[], 8, 1, 0, 0, 0, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Ldot">
/* VTTTalk Unicode 0x13f */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 625, 216, 0
USEMYMETRICS[]
OFFSET[R], 12, 0, 0



    </glyphProgram>

    <glyphProgram name="Lslash">
/* TT glyph 291, char 0x141 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 4, 2, 114
CALL[], 13, 8, 114
SHP[2], 10
SRP1[], 4
SLOOP[], 8
IP[], 1, 0, 2, 9, 3, 6, 8, 7
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="M">
/* TT glyph 13, char 0x4d (M) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 9, 8, 114
SHP[2], 3
CALL[], 10, 2, 114
SHP[2], 1
SRP2[], 3
SLOOP[], 5
IP[], 6, 5, 12, 7, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="N">
/* TT glyph 14, char 0x4e (N) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 2, 8, 114
SHP[2], 9
CALL[], 3, 2, 114
SHP[2], 7
SRP2[], 2
IP[], 5
IP[], 0
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Nacute">
/* VTTTalk Unicode 0x143 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 14, 0, 0
OFFSET[R], 660, 311, -5
SVTCA[Y]
CALL[], 10, 6, 1, 1, 71, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ncaron">
/* VTTTalk Unicode 0x147 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 14, 0, 0
OFFSET[R], 664, 311, -5
SVTCA[Y]
CALL[], 10, 6, 1, 1, 71, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ntilde">
/* VTTTalk Unicode 0xd1 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 14, 0, 0
OFFSET[R], 666, 313, 0
SVTCA[Y]
CALL[], 14, 6, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="O">
/* TT glyph 15, char 0x4f (O) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 12, 9, 114
CALL[], 3, 3, 114
SHP[2], 30
SRP1[], 12
SHP[1], 21
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="OE">
/* TT glyph 324, char 0x152 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 8, 114
SHP[2], 18
SRP1[], 18
SHP[1], 26
CALL[], 10, 2, 114
SHP[2], 13
SRP1[], 13
SHP[1], 28
SRP1[], 1
IP[], 17
MDAP[R], 17
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Oacute">
/* VTTTalk Unicode 0xd3 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 660, 294, 5
SVTCA[Y]
CALL[], 36, 3, 1, 1, 66, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Obreve">
/* VTTTalk Unicode 0x14e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 665, 294, 5
SVTCA[Y]
CALL[], 43, 3, 1, 1, 66, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="Ocircumflex">
/* VTTTalk Unicode 0xd4 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 663, 292, 0
SVTCA[Y]
CALL[], 36, 3, 1, 1, 62, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Odieresis">
/* VTTTalk Unicode 0xd6 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 668, 294, 5
SVTCA[Y]
CALL[], 39, 3, 1, 1, 86, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Ograve">
/* VTTTalk Unicode 0xd2 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 662, 294, 5
SVTCA[Y]
CALL[], 38, 3, 1, 1, 66, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ohorn">
/* TT glyph 325, char 0x1a0 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 2, 114
MDRP[m&gt;RWh], 7
SHP[1], 42
SRP1[], 42
SHP[1], 11
SHP[1], 15
CALL[], 24, 9, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ohungarumlaut">
/* VTTTalk Unicode 0x150 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 661, 294, 5
SVTCA[Y]
CALL[], 36, 3, 1, 1, 66, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="Omacron">
/* VTTTalk Unicode 0x14c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 667, 294, 5
SVTCA[Y]
CALL[], 37, 3, 1, 1, 106, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Oslash">
/* TT glyph 323, char 0xd8 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 7
SHP[1], 40
CALL[], 18, 9, 114
MDRP[m&gt;RWh], 22
SHP[1], 43
SRP2[], 3
SLOOP[], 7
IP[], 21, 24, 36, 52, 37, 9, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Otilde">
/* VTTTalk Unicode 0xd5 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 666, 294, 5
SVTCA[Y]
CALL[], 40, 3, 1, 1, 66, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="P">
/* TT glyph 16, char 0x50 (P) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SHP[2], 18
SRP1[], 0
IP[], 12
MDAP[R], 12
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Q">
/* TT glyph 17, char 0x51 (Q) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 6, 9, 114
MDRP[m&gt;RWh], 2
SHP[2], 1
SHP[1], 27
SRP1[], 27
SHP[1], 3
SRP1[], 3
SHP[1], 0
SRP1[], 27
SHP[1], 30
SRP1[], 30
SHP[1], 33
SRP1[], 33
SHP[1], 32
SRP1[], 32
SHP[1], 31
CALL[], 15, 3, 114
SHP[2], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="R">
/* TT glyph 18, char 0x52 (R) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 9, 8, 114
SHP[2], 3
CALL[], 10, 2, 114
SHP[2], 25
SRP1[], 9
IP[], 7
MDAP[R], 7
SHP[1], 26
SRP2[], 26
IP[], 17
IP[], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Racute">
/* VTTTalk Unicode 0x154 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 18, 0, 0
OFFSET[R], 660, 319, 0
SVTCA[Y]
CALL[], 30, 10, 1, 1, 76, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Rcaron">
/* VTTTalk Unicode 0x158 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 18, 0, 0
OFFSET[R], 664, 319, 0
SVTCA[Y]
CALL[], 30, 10, 1, 1, 76, 86
SHC[2], 2



    </glyphProgram>

    <glyphProgram name="S">
/* TT glyph 19, char 0x53 (S) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 13, 3, 114
SHP[2], 20
CALL[], 33, 9, 114
SHP[2], 0
SRP1[], 13
SLOOP[], 8
IP[], 3, 30, 6, 7, 27, 26, 10, 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Sacute">
/* VTTTalk Unicode 0x15a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 19, 0, 0
OFFSET[R], 660, 314, 5
SVTCA[Y]
CALL[], 40, 13, 1, 1, 69, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Scaron">
/* VTTTalk Unicode 0x160 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 19, 0, 0
OFFSET[R], 664, 314, 5
SVTCA[Y]
CALL[], 40, 13, 1, 1, 69, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Scircumflex">
/* VTTTalk Unicode 0x15c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 19, 0, 0
OFFSET[R], 663, 312, 0
SVTCA[Y]
CALL[], 40, 13, 1, 1, 65, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="T">
/* TT glyph 20, char 0x54 (T) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 6, 8, 114
CALL[], 2, 2, 114
SHP[2], 1
SRP1[], 1
SHP[1], 5
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Tbar">
/* TT glyph 351, char 0x166 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 6, 2, 114
SHP[2], 5
SRP1[], 5
SHP[1], 9
CALL[], 14, 8, 114
SRP2[], 6
IP[], 2
MDAP[R], 2
SHP[1], 1
SHP[1], 10
SRP1[], 1
SHP[1], 13
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Tcaron">
/* VTTTalk Unicode 0x164 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 20, 0, 0
OFFSET[R], 664, 297, 0
SVTCA[Y]
CALL[], 8, 2, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Thorn">
/* TT glyph 397, char 0xde */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SRP1[], 0
IP[], 3
IP[], 14
MDAP[R], 3
MDAP[R], 14
SRP1[], 3
SHP[1], 20
SRP1[], 14
SHP[1], 21
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="U">
/* TT glyph 21, char 0x55 (U) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 9, 9, 114
CALL[], 16, 2, 114
SRP1[], 9
SHP[1], 0
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Uacute">
/* VTTTalk Unicode 0xda */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 660, 305, -5
SVTCA[Y]
CALL[], 24, 4, 1, 1, 71, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Ubreve">
/* VTTTalk Unicode 0x16c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 665, 305, -5
SVTCA[Y]
CALL[], 31, 4, 1, 1, 71, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ucircumflex">
/* VTTTalk Unicode 0xdb */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 663, 307, 0
SVTCA[Y]
CALL[], 24, 16, 1, 1, 77, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Udieresis">
/* VTTTalk Unicode 0xdc */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 668, 307, 0
SVTCA[Y]
CALL[], 27, 16, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="Ugrave">
/* VTTTalk Unicode 0xd9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 662, 305, -5
SVTCA[Y]
CALL[], 26, 4, 1, 1, 71, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Uhorn">
/* TT glyph 369, char 0x1af */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 16, 9, 114
SHP[2], 0
CALL[], 23, 2, 114
SHP[2], 4
MDRP[m&gt;RWh], 8
SHP[1], 12
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Uhungarumlaut">
/* VTTTalk Unicode 0x170 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 661, 307, 0
SVTCA[Y]
CALL[], 24, 16, 1, 1, 76, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Umacron">
/* VTTTalk Unicode 0x16a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 667, 307, 0
SVTCA[Y]
CALL[], 25, 16, 1, 1, 116, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Uogonek">
/* TT glyph 368, char 0x172 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 10, 2, 114
SHP[2], 23
MIAP[R], 27, 9
SHP[1], 3
SHP[1], 18
MDRP[m&gt;RGr], 35
SHP[2], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Uring">
/* VTTTalk Unicode 0x16e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 670, 305, -5
SVTCA[Y]
CALL[], 27, 4, 1, 1, 71, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Utilde">
/* VTTTalk Unicode 0x168 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 666, 307, 0
SVTCA[Y]
CALL[], 28, 4, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="V">
/* TT glyph 22, char 0x56 (V) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SHP[2], 5
SRP1[], 0
IP[], 3
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="W">
/* TT glyph 23, char 0x57 (W) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 5, 8, 114
SHP[2], 2
CALL[], 6, 2, 114
SHP[2], 12
SRP2[], 5
IP[], 9
MDAP[R], 9
SLOOP[], 3
IP[], 11, 8, 3
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Wacute">
/* VTTTalk Unicode 0x1e82 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 23, 0, 0
OFFSET[R], 660, 303, -10
SVTCA[Y]
CALL[], 13, 12, 1, 1, 66, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Wcircumflex">
/* VTTTalk Unicode 0x174 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 23, 0, 0
OFFSET[R], 663, 307, 0
SVTCA[Y]
CALL[], 13, 6, 1, 1, 77, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Wdieresis">
/* VTTTalk Unicode 0x1e84 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 23, 0, 0
OFFSET[R], 668, 307, 0
SVTCA[Y]
CALL[], 16, 6, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Wgrave">
/* VTTTalk Unicode 0x1e80 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 23, 0, 0
OFFSET[R], 662, 303, -10
SVTCA[Y]
CALL[], 15, 12, 1, 1, 66, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="X">
/* TT glyph 24, char 0x58 (X) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 1, 8, 114
SHP[2], 10
CALL[], 3, 2, 114
SHP[2], 7
SRP1[], 1
SLOOP[], 4
IP[], 5, 2, 8, 11
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Y">
/* TT glyph 25, char 0x59 (Y) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 3, 8, 114
CALL[], 6, 2, 114
SHP[2], 1
SRP2[], 3
SLOOP[], 3
IP[], 2, 5, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Yacute">
/* VTTTalk Unicode 0xdd */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 660, 290, -5
SVTCA[Y]
CALL[], 9, 0, 1, 1, 71, 86
SHC[2], 1



    </glyphProgram>

    <glyphProgram name="Ycircumflex">
/* VTTTalk Unicode 0x176 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 663, 292, 0
SVTCA[Y]
CALL[], 9, 6, 1, 1, 77, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ydieresis">
/* VTTTalk Unicode 0x178 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 668, 292, 0
SVTCA[Y]
CALL[], 12, 6, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="Ygrave">
/* VTTTalk Unicode 0x1ef2 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 662, 290, -5
SVTCA[Y]
CALL[], 11, 0, 1, 1, 71, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Z">
/* TT glyph 26, char 0x5a (Z) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 1, 8, 114
SHP[2], 10
SRP1[], 10
SHP[1], 2
SHP[1], 9
CALL[], 6, 2, 114
SHP[2], 5
SRP1[], 5
SHP[1], 8
SHP[1], 3
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="Zacute">
/* VTTTalk Unicode 0x179 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 26, 0, 0
OFFSET[R], 660, 306, 0
SVTCA[Y]
CALL[], 12, 6, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Zcaron">
/* VTTTalk Unicode 0x17d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 26, 0, 0
OFFSET[R], 664, 306, 0
SVTCA[Y]
CALL[], 12, 6, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="Zdotaccent">
/* VTTTalk Unicode 0x17b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 26, 0, 0
OFFSET[R], 669, 306, 0
SVTCA[Y]
CALL[], 15, 6, 1, 1, 96, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="a">
/* TT glyph 27, char 0x61 (a) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 10, 10, 114
SHP[2], 8
CALL[], 17, 11, 114
SHP[2], 49
SRP1[], 49
SHP[1], 14
SRP1[], 14
SHP[1], 52
CALL[], 40, 7, 114
SHP[2], 33
SRP2[], 17
IP[], 53
MDAP[R], 53
SHP[1], 54
SHP[1], 27
SRP1[], 27
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aacute">
/* VTTTalk Unicode 0xe1 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 626, 299, 5
SVTCA[Y]
CALL[], 60, 40, 1, 1, 73, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="abreve">
/* VTTTalk Unicode 0x103 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 632, 299, 5
SVTCA[Y]
CALL[], 67, 40, 1, 1, 73, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="acircumflex">
/* VTTTalk Unicode 0xe2 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 630, 298, 0
SVTCA[Y]
CALL[], 60, 40, 1, 1, 68, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="acute">
/* VTTTalk Unicode 0xb4 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 626, 307, 0



    </glyphProgram>

    <glyphProgram name="adieresis">
/* VTTTalk Unicode 0xe4 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 635, 299, 5
SVTCA[Y]
CALL[], 63, 40, 1, 1, 93, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="ae">
/* TT glyph 422, char 0xe6 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 14, 11, 114
SHP[2], 7
SRP1[], 7
SHP[1], 6
SHP[2], 60
SRP1[], 60
SHP[1], 10
SHP[1], 63
CALL[], 36, 7, 114
SHP[2], 29
SRP1[], 29
SHP[1], 39
SRP1[], 14
IP[], 69
MDAP[R], 69
SHP[1], 0
SHP[1], 23
SRP1[], 23
SHP[1], 54
MIAP[R], 42, 7
SHP[1], 51
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="agrave">
/* VTTTalk Unicode 0xe0 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 628, 299, 5
SVTCA[Y]
CALL[], 62, 40, 1, 1, 73, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="amacron">
/* VTTTalk Unicode 0x101 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 634, 299, 5
SVTCA[Y]
CALL[], 61, 40, 1, 1, 113, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="ampersand">
/* TT glyph 88, char 0x26 (&amp;) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 25, 3, 114
SHP[2], 32
CALL[], 44, 8, 114
CALL[], 48, 9, 114
SHP[2], 9
SRP1[], 25
SLOOP[], 8
IP[], 12, 42, 39, 0, 19, 41, 38, 40
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="aogonek">
/* TT glyph 421, char 0x105 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 10, 10, 114
MDRP[m&gt;RGr], 60
SHP[2], 61
SHP[2], 59
SRP1[], 59
SHP[1], 58
SRP1[], 10
SHP[1], 67
SRP1[], 67
SHP[1], 7
SHP[1], 70
CALL[], 34, 7, 114
SHP[2], 27
SRP2[], 10
IP[], 71
MDAP[R], 71
SHP[1], 72
SHP[1], 20
SRP1[], 20
SHP[1], 19
CALL[], 49, 10, 114
SHP[2], 48
SHP[2], 52
SRP1[], 52
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="approxequal">
/* TT glyph 117, char 0x2248 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 39
DLTP1[(39 @3 8)]
DLTP1[(39 @6 -8)]
SHP[1], 32
SHP[1], 26
MDAP[R], 26
SHP[1], 45
SHP[1], 13
RUTG[]
MDAP[R], 13
DLTP1[(13 @6 -8)(13 @7 -8)(13 @9 -8)]
SHP[1], 6
SHP[1], 0
RTG[]
MDAP[R], 0
SHP[2], 19
SHP[2], 9
SRP1[], 9
SHP[1], 10
SRP1[], 13
SHP[1], 22
SRP1[], 22
SHP[1], 23
SRP1[], 26
SHP[1], 35
SRP1[], 35
SHP[1], 36
SRP1[], 39
SHP[1], 48
SRP1[], 48
SHP[1], 49
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="aring">
/* VTTTalk Unicode 0xe5 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 637, 299, 5
SVTCA[Y]
CALL[], 69, 40, 1, 1, 73, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="asciicircum">
/* TT glyph 124, char 0x5e (^) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 2, 4, 114
SHP[2], 0
MDAP[R], 0
SHP[1], 5
IP[], 6
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="asciitilde">
/* TT glyph 116, char 0x7e (~) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 13
DLTP1[(13 @2 -8)(13 @6 -8)]
SHP[1], 6
SMD[], 192
MDRP[m&gt;RBl], 0
SHP[2], 19
SHP[2], 9
SRP1[], 9
SHP[1], 10
SRP1[], 13
SHP[1], 22
SRP1[], 22
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="asterisk">
/* TT glyph 95, char 0x2a (*) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 26
DLTP1[(26 @1 8)]
MDRP[m&gt;RGr], 0
SHP[2], 53
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="at">
/* TT glyph 89, char 0x40 (@) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 1
SHP[1], 47
MDAP[R], 13
SHP[1], 38
SRP2[], 4
IP[], 31
IP[], 22
MDAP[R], 31
MDAP[R], 22
SRP1[], 31
SHP[1], 63
SRP1[], 22
SHP[1], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="atilde">
/* VTTTalk Unicode 0xe3 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 633, 299, 5
SVTCA[Y]
CALL[], 60, 40, 1, 1, 73, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="b">
/* TT glyph 28, char 0x62 (b) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 0, 114
CALL[], 5, 7, 114
SHP[2], 18
SRP1[], 18
SHP[1], 2
SRP1[], 2
SHP[1], 21
CALL[], 11, 11, 114
SHP[2], 25
SRP1[], 25
SHP[1], 22
IP[], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="backslash">
/* TT glyph 80, char 0x5c (\) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="bar">
/* TT glyph 81, char 0x7c (|) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 0
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="braceleft">
/* TT glyph 77, char 0x7b ({) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 29
SHP[1], 30
MDAP[R], 66
SHP[1], 65
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="braceright">
/* TT glyph 78, char 0x7d (}) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 5
MDAP[R], 41
SHP[1], 40
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="bracketleft">
/* TT glyph 75, char 0x5b ([) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 1
SHP[1], 6
MDAP[R], 2
SHP[1], 5
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="bracketright">
/* TT glyph 76, char 0x5d (]) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="breve">
/* VTTTalk Unicode 0x2d8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 632, 307, 0


    </glyphProgram>

    <glyphProgram name="bullet">
/* TT glyph 86, char 0x2022 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="c">
/* TT glyph 29, char 0x63 (c) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 16, 11, 114
SHP[2], 9
CALL[], 25, 7, 114
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cacute">
/* VTTTalk Unicode 0x107 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 29, 0, 0
OFFSET[R], 626, 331, 5
SVTCA[Y]
CALL[], 32, 25, 1, 1, 66, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="caron">
/* VTTTalk Unicode 0x2c7 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 631, 307, 0


    </glyphProgram>

    <glyphProgram name="ccaron">
/* VTTTalk Unicode 0x10d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 29, 0, 0
OFFSET[R], 631, 331, 5
SVTCA[Y]
CALL[], 32, 25, 1, 1, 66, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ccedilla">
/* TT glyph 428, char 0xe7 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 16, 11, 114
SHP[2], 9
SHP[2], 38
MDRP[m&gt;RGr], 26
SHP[2], 27
SLOOP[], 3
IP[], 36, 37, 17
CALL[], 47, 7, 114
SHP[2], 0
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="ccircumflex">
/* VTTTalk Unicode 0x109 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 29, 0, 0
OFFSET[R], 630, 330, 0
SVTCA[Y]
CALL[], 32, 25, 1, 1, 61, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="cdotaccent">
/* VTTTalk Unicode 0x10b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 29, 0, 0
OFFSET[R], 636, 331, 5
SVTCA[Y]
CALL[], 35, 25, 1, 1, 86, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="cedilla">
/* VTTTalk Unicode 0xb8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 646, 307, 0



    </glyphProgram>

    <glyphProgram name="cent">
/* TT glyph 144, char 0xa2 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 14
MDRP[m&gt;RBl], 15
SHP[1], 17
SHP[1], 40
SRP1[], 40
SHP[1], 24
MDAP[R], 32
MDRP[m&gt;RBl], 0
SHP[1], 2
SHP[1], 25
SRP1[], 25
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflex">
/* VTTTalk Unicode 0x2c6 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 630, 307, 0


    </glyphProgram>

    <glyphProgram name="colon">
/* TT glyph 55, char 0x3a (:) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 9, 7, 114
SHP[2], 3
CALL[], 15, 11, 114
SHP[2], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="colon.fig">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 55, 29, 99


    </glyphProgram>

    <glyphProgram name="comma">
/* TT glyph 54, char 0x2c (,) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RGr], 0
SHP[2], 2
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="copyright">
/* TT glyph 91, char 0xa9 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 6
SHP[1], 27
MDAP[R], 15
SHP[1], 18
SRP2[], 6
IP[], 45
IP[], 36
MDAP[R], 45
MDAP[R], 36
SRP1[], 45
SHP[1], 52
SRP1[], 36
SHP[1], 61
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="d">
/* TT glyph 30, char 0x64 (d) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 5, 11, 114
SHP[2], 23
SRP1[], 23
SHP[1], 2
SHP[1], 26
CALL[], 11, 7, 114
SHP[2], 17
SRP1[], 17
SHP[1], 27
IP[], 14
CALL[], 15, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dagger">
/* TT glyph 96, char 0x2020 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 14, 10, 114
CALL[], 39, 0, 114
SRP2[], 14
SLOOP[], 4
IP[], 7, 20, 33, 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="daggerdbl">
/* TT glyph 97, char 0x2021 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 14, 10, 114
CALL[], 53, 0, 114
SRP2[], 14
SLOOP[], 8
IP[], 7, 20, 74, 33, 73, 34, 47, 60
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dcaron">
/* VTTTalk Unicode 0x10f */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OFFSET[R], 629, 641, 77


    </glyphProgram>

    <glyphProgram name="dcroat">
/* TT glyph 433, char 0x111 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 10, 114
CALL[], 5, 11, 114
SHP[2], 31
SRP1[], 31
SHP[1], 2
SHP[1], 34
CALL[], 19, 0, 114
SRP2[], 5
IP[], 11
MDAP[R], 11
SHP[1], 14
MDRP[m&gt;RWh], 15
SHP[2], 24
SHP[2], 18
SRP1[], 18
SHP[1], 21
SRP1[], 11
SHP[1], 25
SRP1[], 25
SHP[1], 35
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="degree">
/* TT glyph 132, char 0xb0 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 9, 0, 114
SHP[2], 15
MDRP[m&gt;RGr], 3
SHP[2], 21
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="dieresis">
/* VTTTalk Unicode 0xa8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 635, 307, 0



    </glyphProgram>

    <glyphProgram name="divide">
/* TT glyph 112, char 0xf7 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MIAP[R], 13, 188
SHP[1], 14
SRP1[], 14
SHP[1], 3
MDAP[R], 3
DLTP1[(3 @0 8)]
SHP[1], 9
SRP1[], 13
SHP[1], 25
MDAP[R], 25
DLTP1[(25 @5 8)(25 @6 8)]
SHP[1], 19
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="dollar">
/* TT glyph 133, char 0x24 ($) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 20, 4, 114
MDRP[m&gt;RBl], 21
SHP[1], 23
SHP[1], 47
SRP1[], 47
SHP[1], 30
CALL[], 37, 12, 114
MDRP[m&gt;RWh], 1
SHP[1], 0
SRP1[], 0
SHP[1], 3
SRP1[], 37
SRP2[], 20
SLOOP[], 8
IP[], 53, 34, 56, 11, 31, 46, 14, 43
SHP[1], 50
SRP1[], 50
SHP[1], 57
SRP1[], 57
SHP[1], 10
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="dong">
/* TT glyph 145, char 0x20ab */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 12, 114
CALL[], 5, 13, 114
SHP[2], 31
SRP1[], 31
SHP[1], 2
SHP[1], 34
MDRP[m&gt;RWh], 40
SHP[2], 39
CALL[], 19, 4, 114
SRP2[], 5
IP[], 11
MDAP[R], 11
SHP[1], 14
MDRP[m&gt;RWh], 15
SHP[2], 24
SHP[2], 18
SRP1[], 18
SHP[1], 21
SRP1[], 11
SHP[1], 25
SRP1[], 25
SHP[1], 35
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="dotaccent">
/* VTTTalk Unicode 0x2d9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 636, 307, 0


    </glyphProgram>

    <glyphProgram name="dotlessi">
/* TT glyph 463, char 0x131 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 0, 10, 114
SHP[2], 1
SRP1[], 1
SHP[1], 7
CALL[], 5, 6, 114
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="e">
/* TT glyph 31, char 0x65 (e) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 1, 10, 114
SHP[2], 0
CALL[], 13, 7, 114
SHP[2], 29
SRP2[], 1
IP[], 20
MDAP[R], 20
IP[], 7
SHP[1], 19
SHP[1], 32
SRP1[], 32
SHP[1], 33
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="eacute">
/* VTTTalk Unicode 0xe9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 626, 319, 5
SVTCA[Y]
CALL[], 36, 13, 1, 1, 66, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="ebreve">
/* VTTTalk Unicode 0x115 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 632, 319, 5
SVTCA[Y]
CALL[], 43, 13, 1, 1, 66, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ecaron">
/* VTTTalk Unicode 0x11b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 631, 319, 5
SVTCA[Y]
CALL[], 36, 13, 1, 1, 66, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ecircumflex">
/* VTTTalk Unicode 0xea */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 630, 318, 0
SVTCA[Y]
CALL[], 36, 13, 1, 1, 60, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="edieresis">
/* VTTTalk Unicode 0xeb */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 635, 319, 5
SVTCA[Y]
CALL[], 39, 13, 1, 1, 86, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="edotaccent">
/* VTTTalk Unicode 0x117 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 636, 319, 5
SVTCA[Y]
CALL[], 39, 13, 1, 1, 86, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="egrave">
/* VTTTalk Unicode 0xe8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 628, 319, 5
SVTCA[Y]
CALL[], 38, 13, 1, 1, 66, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="eight">
/* TT glyph 108, char 0x38 (8) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 13, 114
SHP[2], 44
CALL[], 16, 5, 114
SHP[2], 26
SRP1[], 3
IP[], 38
MDAP[R], 38
SHP[1], 32
SRP2[], 32
SLOOP[], 4
IP[], 10, 9, 22, 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eight.den">
/* TT glyph 620, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
CALL[], 3, 187, 114
SHP[2], 44
CALL[], 16, 186, 114
SHP[2], 26
SRP2[], 3
SLOOP[], 6
IP[], 38, 22, 23, 9, 10, 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eight.inf">
/* VTTTalk Unicode 0x2088 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 620, -65, -230


    </glyphProgram>

    <glyphProgram name="eight.num">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 620, 78, 275


    </glyphProgram>

    <glyphProgram name="eight.sup">
/* VTTTalk Unicode 0x2078 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 620, 94, 330


    </glyphProgram>

    <glyphProgram name="ellipsis">
/* TT glyph 61, char 0x2026 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 6, 11, 114
SHP[2], 0
SHP[2], 18
SRP1[], 18
SHP[1], 12
SHP[1], 30
SRP1[], 30
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="emacron">
/* VTTTalk Unicode 0x113 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 634, 319, 5
SVTCA[Y]
CALL[], 37, 13, 1, 1, 106, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="emdash">
/* TT glyph 84, char 0x2014 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MIAP[R], 0, 188
SHP[2], 1
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="endash">
/* TT glyph 83, char 0x2013 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MIAP[R], 0, 188
SHP[2], 1
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="eng">
/* TT glyph 503, char 0x14b */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 8, 15, 114
SHP[2], 9
CALL[], 28, 10, 114
CALL[], 29, 6, 114
CALL[], 34, 7, 114
SHP[2], 23
SRP1[], 23
SHP[1], 31
SRP1[], 31
SHP[1], 26
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="eogonek">
/* TT glyph 450, char 0x119 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 13, 7, 114
SHP[2], 44
CALL[], 40, 10, 114
SHP[2], 0
SHP[2], 25
SRP1[], 13
IP[], 6
MDAP[R], 6
SHP[1], 7
SHP[1], 41
SRP1[], 41
SHP[1], 50
SRP0[], 40
MDRP[m&gt;RGr], 32
SHP[2], 33
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="equal">
/* TT glyph 114, char 0x3d (=) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 1
DLTP1[(1 @6 -8)]
DLTP2[(1 @0 -8)]
SHP[1], 2
MDRP[m&gt;RWh], 6
CALL[], 6, 64, 12, 15, 72
DLTP1[(6 @8 -8)(6 @9 -8)]
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eth">
/* TT glyph 595, char 0xf0 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 12, 11, 114
SHP[2], 43
CALL[], 34, 1, 114
SRP1[], 12
IP[], 18
MDAP[R], 18
SLOOP[], 6
IP[], 0, 3, 30, 27, 29, 28
SHP[1], 37
SRP1[], 37
SHP[1], 21
SRP1[], 21
SHP[1], 49
SHP[2], 1
SRP1[], 1
SHP[1], 2
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="exclam">
/* TT glyph 58, char 0x21 (!) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 2, 0, 114
CALL[], 13, 11, 114
SHP[2], 7
SRP1[], 7
SHP[1], 1
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="exclamdown">
/* TT glyph 60, char 0xa1 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 9, 1, 114
SHP[2], 3
SRP1[], 3
SHP[1], 12
CALL[], 15, 10, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="f">
/* TT glyph 32, char 0x66 (f) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 7, 0, 114
SHP[2], 8
SHP[2], 10
SRP1[], 10
SHP[1], 9
CALL[], 14, 6, 114
SHP[2], 2
SHP[2], 17
SRP1[], 17
SHP[1], 1
CALL[], 19, 10, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five">
/* TT glyph 105, char 0x35 (5) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 6, 12, 114
SHP[2], 7
SHP[2], 9
SRP1[], 9
SHP[1], 8
CALL[], 21, 4, 114
SHP[2], 24
SRP1[], 6
IP[], 0
MDAP[R], 0
SHP[1], 15
SRP1[], 15
SHP[1], 25
SHP[1], 18
SRP1[], 18
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five.den">
/* TT glyph 617, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
CALL[], 1, 184, 114
SHP[2], 4
CALL[], 15, 187, 114
SHP[2], 16
SRP1[], 1
IP[], 8
MDAP[R], 8
SHP[1], 5
SHP[1], 23
SRP1[], 23
SHP[1], 26
SRP1[], 26
SHP[1], 27
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five.inf">
/* VTTTalk Unicode 0x2085 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 617, -65, -230


    </glyphProgram>

    <glyphProgram name="five.num">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 617, 78, 275


    </glyphProgram>

    <glyphProgram name="five.sup">
/* VTTTalk Unicode 0x2075 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 617, 94, 330


    </glyphProgram>

    <glyphProgram name="fiveeighths">
/* VTTTalk Unicode 0x215d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 620, 124, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0
OFFSET[R], 617, -66, 275



    </glyphProgram>

    <glyphProgram name="fivesixths">
/* VTTTalk Unicode 0x215a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 617, -66, 275
OFFSET[R], 618, 94, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0


    </glyphProgram>

    <glyphProgram name="four">
/* TT glyph 104, char 0x34 (4) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 4, 114
CALL[], 9, 12, 114
SRP2[], 3
IP[], 8
MDAP[R], 8
IP[], 12
SHP[1], 1
SHP[1], 5
SRP1[], 5
SLOOP[], 3
SHP[1], 11, 13, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four.den">
/* TT glyph 616, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
CALL[], 3, 184, 114
SHP[2], 12
CALL[], 10, 185, 114
SRP1[], 3
IP[], 0
MDAP[R], 0
SHP[1], 8
SHP[1], 11
SRP1[], 11
SHP[1], 2
SHP[1], 13
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four.inf">
/* VTTTalk Unicode 0x2084 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 616, -65, -230


    </glyphProgram>

    <glyphProgram name="four.num">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 616, 78, 275


    </glyphProgram>

    <glyphProgram name="four.sup">
/* VTTTalk Unicode 0x2074 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 616, 94, 330


    </glyphProgram>

    <glyphProgram name="fourfifths">
/* VTTTalk Unicode 0x2158 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 616, -67, 275
OFFSET[R], 617, 134, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0



    </glyphProgram>

    <glyphProgram name="fracbar">
/* TT glyph 611, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
MDAP[R], 5
SHP[1], 0
SRP2[], 2
IP[], 1
IP[], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="fraction">
/* TT glyph 610, char 0x2044 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
CALL[], 2, 4, 114
CALL[], 5, 12, 114
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="g">
/* TT glyph 33, char 0x67 (g) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 10, 7, 114
SHP[2], 26
SRP1[], 26
SHP[1], 36
SRP1[], 36
SHP[1], 13
CALL[], 21, 15, 114
SHP[2], 22
SRP2[], 10
IP[], 4
MDAP[R], 4
SHP[1], 32
SRP1[], 32
SHP[1], 1
SHP[1], 35
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="gbreve">
/* VTTTalk Unicode 0x11f */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 33, 0, 0
OFFSET[R], 632, 306, 0
SVTCA[Y]
CALL[], 46, 10, 1, 1, 68, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="gcaron">
/* VTTTalk Unicode 0x1e7 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 33, 0, 0
OFFSET[R], 631, 306, 0
SVTCA[Y]
CALL[], 39, 10, 1, 1, 68, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="gcircumflex">
/* VTTTalk Unicode 0x11d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 33, 0, 0
OFFSET[R], 630, 305, -5
SVTCA[Y]
CALL[], 39, 10, 1, 1, 63, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="gdotaccent">
/* VTTTalk Unicode 0x121 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 33, 0, 0
OFFSET[R], 636, 306, 0
SVTCA[Y]
CALL[], 42, 10, 1, 1, 88, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="germandbls">
/* TT glyph 543, char 0xdf */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 22, 10, 114
SHP[2], 41
SRP1[], 41
SHP[1], 1
CALL[], 26, 1, 114
SHP[2], 17
SRP2[], 22
SLOOP[], 5
IP[], 7, 35, 8, 32, 11
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="grave">
/* TT glyph 191, char 0x60 (`) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 2, 0, 114
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="greater">
/* TT glyph 120, char 0x3e (&gt;) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 2
DLTP1[(2 @7 8)]
DLTP1[(2 @9 -8)]
DLTP1[(2 @13 8)]
SHP[1], 3
MDRP[m&gt;RGr], 6
SHP[2], 5
SLOOP[], 3
IP[], 0, 4, 1
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="greaterequal">
/* TT glyph 122, char 0x2265 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 8
SHP[1], 7
SRP1[], 7
SHP[1], 2
MDAP[R], 2
SHP[1], 3
MDRP[m&gt;RGr], 6
SHP[2], 5
SLOOP[], 3
IP[], 1, 4, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="guilsinglleft">
/* TT glyph 71, char 0x2039 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
MDRP[m&gt;RGr], 5
SHP[2], 6
SLOOP[], 3
IP[], 3, 0, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="guilsinglright">
/* TT glyph 72, char 0x203a */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
MDRP[m&gt;RGr], 6
SHP[2], 5
SLOOP[], 3
IP[], 1, 4, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="h">
/* TT glyph 34, char 0x68 (h) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 0, 114
CALL[], 5, 7, 114
SHP[2], 20
SRP1[], 20
SHP[1], 2
SRP1[], 2
SHP[1], 23
CALL[], 25, 10, 114
SHP[2], 13
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="hbar">
/* TT glyph 462, char 0x127 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 26, 10, 114
SHP[2], 14
CALL[], 31, 0, 114
SRP1[], 26
IP[], 6
MDAP[R], 6
MDRP[m&gt;RWh], 2
SHP[2], 27
SHP[2], 33
SRP1[], 33
SHP[1], 30
SRP1[], 6
SHP[1], 21
SRP1[], 21
SHP[1], 3
SRP1[], 3
SHP[1], 24
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="hcircumflex">
/* VTTTalk Unicode 0x125 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 34, 0, 0
OFFSET[R], 630, 193, 207
SVTCA[Y]
CALL[], 26, 0, 1, 1, 38, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="hungarumlaut">
/* VTTTalk Unicode 0x2dd */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 627, 307, 0


    </glyphProgram>

    <glyphProgram name="hyphen">
/* TT glyph 82, char 0x2d (-) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MIAP[R], 0, 188
SHP[2], 1
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="i">
/* TT glyph 35, char 0x69 (i) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 12, 10, 114
SHP[2], 13
SRP1[], 13
SHP[1], 19
CALL[], 17, 6, 114
SHP[2], 16
MDRP[m&lt;RWh], 3
SHP[2], 9
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="i.dot">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 636, 317, 0
SVTCA[Y]
CALL[], 13, 5, 1, 1, 96, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="iacute">
/* VTTTalk Unicode 0xed */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 626, 317, 0
SVTCA[Y]
CALL[], 10, 5, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="ibreve">
/* VTTTalk Unicode 0x12d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 632, 317, 0
SVTCA[Y]
CALL[], 17, 5, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="icircumflex">
/* VTTTalk Unicode 0xee */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 630, 317, 0
SVTCA[Y]
CALL[], 10, 5, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="idieresis">
/* VTTTalk Unicode 0xef */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 635, 317, 0
SVTCA[Y]
CALL[], 13, 5, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="igrave">
/* VTTTalk Unicode 0xec */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 628, 317, 0
SVTCA[Y]
CALL[], 12, 5, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="imacron">
/* VTTTalk Unicode 0x12b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 634, 317, 0
SVTCA[Y]
CALL[], 11, 5, 1, 1, 116, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="iogonek">
/* TT glyph 475, char 0x12f */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 17, 6, 114
SHP[2], 16
MDRP[m&gt;RWh], 3
SHP[2], 9
CALL[], 37, 10, 114
SHP[2], 22
SHP[2], 14
SRP1[], 14
SHP[1], 19
MDRP[m&gt;RGr], 31
SHP[2], 29
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="itilde">
/* VTTTalk Unicode 0x129 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 633, 317, 0
SVTCA[Y]
CALL[], 10, 5, 1, 1, 76, 86
SHC[2], 1



    </glyphProgram>

    <glyphProgram name="j">
/* TT glyph 36, char 0x6a (j) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 20, 15, 114
CALL[], 31, 6, 114
SHP[2], 30
MDRP[m&lt;RWh], 3
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="jcircumflex">
/* VTTTalk Unicode 0x135 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 476, 0, 0
OFFSET[R], 630, 367, 0
SVTCA[Y]
CALL[], 20, 19, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="k">
/* TT glyph 37, char 0x6b (k) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 0, 114
CALL[], 3, 6, 114
CALL[], 12, 10, 114
SHP[2], 9
SRP1[], 3
SLOOP[], 3
IP[], 10, 6, 2
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="l">
/* TT glyph 38, char 0x6c (l) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 6, 0, 114
SHP[2], 5
CALL[], 16, 11, 114
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lacute">
/* VTTTalk Unicode 0x13a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 626, 344, 250
SVTCA[Y]
CALL[], 20, 6, 1, 1, 81, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="lcaron">
/* VTTTalk Unicode 0x13e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 629, 495, 77
SVTCA[Y]
CALL[], 22, 6, 1, 1, 78, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ldot">
/* VTTTalk Unicode 0x140 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 624, 312, 0



    </glyphProgram>

    <glyphProgram name="less">
/* TT glyph 119, char 0x3c (&lt;) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 6
DLTP1[(6 @7 8)]
DLTP1[(6 @9 -8)]
DLTP1[(6 @13 8)]
SHP[1], 5
MDRP[m&gt;RGr], 2
SHP[2], 3
SLOOP[], 3
IP[], 0, 4, 1
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="lessequal">
/* TT glyph 121, char 0x2264 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 7
SHP[1], 10
SRP1[], 10
SHP[1], 6
MDAP[R], 6
SHP[1], 5
MDRP[m&gt;RGr], 2
SHP[2], 3
SLOOP[], 3
IP[], 0, 4, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lslash">
/* TT glyph 490, char 0x142 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 6, 0, 114
SHP[2], 5
CALL[], 20, 11, 114
SHP[2], 19
SRP1[], 6
SLOOP[], 8
IP[], 1, 2, 0, 11, 3, 8, 10, 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="m">
/* TT glyph 39, char 0x6d (m) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 6, 114
CALL[], 6, 7, 114
SHP[2], 17
SRP1[], 17
SHP[1], 32
SRP1[], 32
SHP[1], 14
SRP1[], 14
SHP[1], 35
SHP[2], 44
SRP1[], 44
SHP[1], 3
SRP1[], 3
SHP[1], 47
CALL[], 49, 10, 114
SHP[2], 25
SHP[2], 37
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="macron">
/* VTTTalk Unicode 0xaf */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 634, 307, 0



    </glyphProgram>

    <glyphProgram name="middotcat">
/* TT glyph 624, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="middotcat.cap">
/* TT glyph 625, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="minus">
/* TT glyph 113, char 0x2212 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MIAP[R], 1, 188
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="mu">
/* TT glyph 125, char 0xb5 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 3
SHP[2], 15
SRP1[], 15
SHP[1], 23
SRP1[], 23
SHP[1], 18
CALL[], 5, 14, 114
CALL[], 7, 6, 114
SHP[2], 19
CALL[], 22, 10, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="multiply">
/* TT glyph 118, char 0xd7 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 11
DLTP1[(11 @3 8)]
DLTP1[(11 @5 -8)(11 @6 -8)]
SHP[1], 1
SHP[1], 5
MDAP[R], 5
SHP[1], 7
SRP2[], 11
SLOOP[], 8
IP[], 10, 2, 0, 9, 3, 6, 8, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="n">
/* TT glyph 40, char 0x6e (n) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 6, 114
CALL[], 25, 10, 114
SHP[2], 13
CALL[], 5, 7, 114
SHP[2], 20
SRP1[], 20
SHP[1], 2
SRP1[], 2
SHP[1], 23
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="nacute">
/* VTTTalk Unicode 0x144 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 626, 305, 0
SVTCA[Y]
CALL[], 26, 5, 1, 1, 69, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="ncaron">
/* VTTTalk Unicode 0x148 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 631, 305, 0
SVTCA[Y]
CALL[], 26, 5, 1, 1, 69, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="nine">
/* TT glyph 109, char 0x39 (9) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 0, 12, 114
CALL[], 10, 5, 114
SHP[2], 19
SRP2[], 0
SLOOP[], 4
IP[], 16, 1, 4, 25
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="nine.den">
/* TT glyph 621, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MIAP[R], 10, 186
SHP[1], 19
MIAP[R], 17, 185
SRP2[], 10
SLOOP[], 8
IP[], 16, 1, 4, 25, 7, 22, 28, 13
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="nine.inf">
/* VTTTalk Unicode 0x2089 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 621, -65, -230


    </glyphProgram>

    <glyphProgram name="nine.num">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 621, 78, 275


    </glyphProgram>

    <glyphProgram name="nine.sup">
/* VTTTalk Unicode 0x2079 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 621, 94, 330


    </glyphProgram>

    <glyphProgram name="notequal">
/* TT glyph 115, char 0x2260 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 6
DLTP1[(6 @6 -8)]
DLTP2[(6 @0 -8)]
SHP[1], 14
MDRP[m&gt;RWh], 2
CALL[], 2, 64, 12, 15, 72
DLTP1[(2 @8 -8)(2 @9 -8)]
SHP[2], 16
SHP[2], 1
SRP1[], 1
SHP[1], 19
SHP[1], 21
MDAP[R], 21
SRP1[], 6
SHP[1], 7
SRP1[], 7
SHP[1], 9
MDAP[R], 9
DLTP1[(9 @4 -8)]
SRP1[], 7
SHP[1], 11
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="ntilde">
/* VTTTalk Unicode 0xf1 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 633, 305, 0
SVTCA[Y]
CALL[], 26, 5, 1, 1, 69, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="numbersign">
/* TT glyph 126, char 0x23 (#) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 8, 3, 114
SHP[2], 12
MDAP[R], 27
SHP[1], 23
IP[], 4
MDAP[R], 4
SHP[1], 17
SHP[1], 31
MDRP[m&gt;RWh], 3
SHP[2], 18
SHP[2], 28
SHP[2], 0
SRP1[], 0
SHP[1], 21
SHP[1], 25
SRP1[], 4
SHP[1], 7
SRP1[], 7
SHP[1], 10
SRP1[], 10
SHP[1], 14
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="o">
/* TT glyph 41, char 0x6f (o) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 27
CALL[], 15, 11, 114
SHP[2], 21
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="oacute">
/* VTTTalk Unicode 0xf3 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 626, 298, 5
SVTCA[Y]
CALL[], 30, 6, 1, 1, 66, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="obreve">
/* VTTTalk Unicode 0x14f */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 632, 298, 5
SVTCA[Y]
CALL[], 37, 6, 1, 1, 66, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="ocircumflex">
/* VTTTalk Unicode 0xf4 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 630, 297, 0
SVTCA[Y]
CALL[], 30, 6, 1, 1, 61, 86
SHC[2], 2



    </glyphProgram>

    <glyphProgram name="odieresis">
/* VTTTalk Unicode 0xf6 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 635, 298, 5
SVTCA[Y]
CALL[], 33, 6, 1, 1, 86, 86
SHC[2], 2
SHC[2], 3



    </glyphProgram>

    <glyphProgram name="oe">
/* TT glyph 523, char 0x153 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 11, 114
SHP[2], 49
SRP1[], 49
SHP[1], 0
CALL[], 12, 7, 114
SHP[2], 58
SRP1[], 58
SHP[1], 15
CALL[], 18, 7, 114
SHP[2], 37
SRP2[], 3
IP[], 24
MDAP[R], 24
SHP[1], 40
CALL[], 31, 10, 114
SHP[2], 30
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="ogonek">
/* VTTTalk Unicode 0x2db */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 647, 307, 0


    </glyphProgram>

    <glyphProgram name="ograve">
/* VTTTalk Unicode 0xf2 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 628, 298, 5
SVTCA[Y]
CALL[], 32, 6, 1, 1, 66, 86
SHC[2], 2



    </glyphProgram>

    <glyphProgram name="ohorn">
/* TT glyph 524, char 0x1a1 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 10
SHP[1], 39
SRP1[], 39
SHP[1], 18
SHP[1], 17
SRP1[], 17
SHP[1], 14
CALL[], 27, 11, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ohungarumlaut">
/* VTTTalk Unicode 0x151 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 627, 298, 5
SVTCA[Y]
CALL[], 30, 6, 1, 1, 66, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="omacron">
/* VTTTalk Unicode 0x14d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 634, 298, 5
SVTCA[Y]
CALL[], 31, 6, 1, 1, 106, 86
SHC[2], 2



    </glyphProgram>

    <glyphProgram name="one">
/* TT glyph 101, char 0x31 (1) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 12, 114
SHP[2], 2
SRP1[], 2
SHP[1], 9
CALL[], 7, 5, 114
SHP[2], 4
SRP1[], 4
SHP[1], 6
SRP1[], 6
SHP[1], 5
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="one.den">
/* TT glyph 613, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
CALL[], 1, 185, 114
SHP[2], 3
SRP1[], 3
SHP[1], 9
CALL[], 7, 184, 114
SRP2[], 1
SLOOP[], 3
IP[], 5, 4, 6
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="one.inf">
/* VTTTalk Unicode 0x2081 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 613, -65, -230


    </glyphProgram>

    <glyphProgram name="one.num">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 613, 78, 275


    </glyphProgram>

    <glyphProgram name="one.sup">
/* VTTTalk Unicode 0xb9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 613, 94, 330


    </glyphProgram>

    <glyphProgram name="oneeighth">
/* VTTTalk Unicode 0x215b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 620, 124, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0
OFFSET[R], 613, -95, 275

    </glyphProgram>

    <glyphProgram name="onefifth">
/* VTTTalk Unicode 0x2155 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 617, 134, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0
OFFSET[R], 613, -95, 275



    </glyphProgram>

    <glyphProgram name="onehalf">
/* VTTTalk Unicode 0xbd */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 613, -95, 275
OFFSET[R], 614, 114, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0

    </glyphProgram>

    <glyphProgram name="onequarter">
/* VTTTalk Unicode 0xbc */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 616, 84, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0
OFFSET[R], 613, -95, 275


    </glyphProgram>

    <glyphProgram name="onesixth">
/* VTTTalk Unicode 0x2159 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 618, 94, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0
OFFSET[R], 613, -95, 275


    </glyphProgram>

    <glyphProgram name="onethird">
/* VTTTalk Unicode 0x2153 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 615, 157, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0
OFFSET[R], 613, -95, 275



    </glyphProgram>

    <glyphProgram name="ordfeminine">
/* TT glyph 130, char 0xaa */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 40, 0, 114
SHP[2], 33
MDRP[M&gt;RGr], 17
DLTP1[(17 @0 -8)]
SHP[2], 9
SLOOP[], 4
IP[], 54, 53, 26, 27
SHP[2], 49
SRP1[], 49
SHP[1], 13
SHP[1], 52
MDRP[m&gt;RWh], 61
SHP[2], 60
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="ordmasculine">
/* TT glyph 131, char 0xba */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 0, 114
SHP[2], 21
MDRP[M&gt;RGr], 9
SHP[2], 15
MDRP[m&gt;RWh], 25
SHP[2], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oslash">
/* TT glyph 522, char 0xf8 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 7
SHP[1], 30
CALL[], 18, 11, 114
MDRP[m&gt;RWh], 22
SHP[1], 40
SRP2[], 3
SLOOP[], 8
IP[], 6, 9, 37, 46, 36, 47, 24, 21
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="otilde">
/* VTTTalk Unicode 0xf5 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 633, 298, 5
SVTCA[Y]
CALL[], 30, 6, 1, 1, 66, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="p">
/* TT glyph 42, char 0x70 (p) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 1, 14, 114
CALL[], 2, 6, 114
CALL[], 7, 7, 114
SHP[2], 20
SRP1[], 20
SHP[1], 4
SRP1[], 4
SHP[1], 23
CALL[], 13, 11, 114
SHP[2], 16
SHP[2], 27
SRP1[], 27
SHP[1], 24
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="paragraph">
/* TT glyph 99, char 0xb6 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 8, 3, 114
SHP[2], 0
MDRP[m&gt;RBl], 1
CALL[], 11, 8, 114
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="parenleft">
/* TT glyph 73, char 0x28 (() */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 11
MDAP[R], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenright">
/* TT glyph 74, char 0x29 ()) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="percent">
/* TT glyph 127, char 0x25 (%) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 9, 5, 114
SHP[2], 20
MDRP[m&gt;RGr], 3
SHP[2], 26
SHP[2], 42
CALL[], 15, 4, 114
CALL[], 32, 13, 114
SHP[2], 55
MDRP[m&gt;RGr], 38
SHP[2], 13
SHP[2], 49
CALL[], 44, 12, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="period">
/* TT glyph 53, char 0x2e (.) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 11, 114
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="periodcentered">
/* VTTTalk Unicode 0xb7 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 53, 81, 282



    </glyphProgram>

    <glyphProgram name="plus">
/* TT glyph 111, char 0x2b (+) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MIAP[R], 1, 188
SHP[1], 9
SHP[1], 11
MDAP[R], 11
SRP1[], 1
SHP[1], 2
SRP1[], 2
SHP[1], 4
MDAP[R], 4
DLTP1[(4 @0 8)]
DLTP1[(4 @3 6)]
DLTP1[(4 @4 8)(4 @8 8)]
DLTP2[(4 @0 -8)(4 @1 -8)]
SRP1[], 2
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="plusminus">
/* TT glyph 123, char 0xb1 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 13
SHP[1], 12
SRP1[], 12
SHP[1], 10
MDAP[R], 10
SHP[1], 9
MDAP[R], 9
SHP[1], 0
SHP[1], 6
SRP1[], 6
SHP[1], 3
SHP[1], 5
MDAP[R], 5
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="q">
/* TT glyph 43, char 0x71 (q) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 1, 14, 114
CALL[], 5, 11, 114
SHP[2], 21
SRP1[], 21
SHP[1], 24
SRP1[], 24
SHP[1], 2
CALL[], 11, 7, 114
SHP[2], 15
SRP1[], 15
SHP[1], 25
SRP1[], 25
SHP[1], 14
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="question">
/* TT glyph 57, char 0x3f (?) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 21, 1, 114
SHP[2], 14
CALL[], 40, 11, 114
SHP[2], 34
SRP1[], 34
SHP[1], 1
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="questiondown">
/* TT glyph 59, char 0xbf */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 9, 1, 114
SHP[2], 3
SRP1[], 3
SHP[1], 13
CALL[], 33, 11, 114
SHP[2], 26
SRP1[], 13
SLOOP[], 4
IP[], 20, 19, 39, 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotedbl">
/* TT glyph 128, char 0x22 (") */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 6, 0, 114
SHP[2], 2
MDRP[m&gt;RBl], 4
DLTP1[(4 @3 -8)]
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotedblbase">
/* VTTTalk Unicode 0x201e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 64, -168, -590


    </glyphProgram>

    <glyphProgram name="quotedblleft">
/* TT glyph 63, char 0x201c */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 0, 0, 114
SHP[2], 9
MDRP[m&gt;RGr], 5
SHP[2], 15
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="quotedblright">
/* TT glyph 64, char 0x201d */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 14, 0, 114
SHP[2], 5
MDRP[m&gt;RGr], 9
SHP[2], 0
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="quoteleft">
/* TT glyph 66, char 0x2018 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 0, 0, 114
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quoteright">
/* TT glyph 67, char 0x2019 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 5, 0, 114
MDRP[m&gt;RGr], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotesinglbase">
/* VTTTalk Unicode 0x201a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 67, -168, -590


    </glyphProgram>

    <glyphProgram name="quotesingle">
/* TT glyph 129, char 0x27 (') */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 2, 0, 114
MDRP[m&gt;RWh], 1
DLTP1[(1 @3 -8)]
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="r">
/* TT glyph 44, char 0x72 (r) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 0, 10, 114
SHP[2], 1
SRP1[], 1
SHP[1], 20
CALL[], 5, 6, 114
SHP[2], 4
SHP[2], 10
MDAP[R], 10
SHP[1], 13
SRP1[], 13
SHP[1], 7
SRP1[], 7
SHP[1], 19
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="racute">
/* VTTTalk Unicode 0x155 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 626, 293, 0
SVTCA[Y]
CALL[], 23, 5, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="rcaron">
/* VTTTalk Unicode 0x159 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 631, 293, 0
SVTCA[Y]
CALL[], 23, 5, 1, 1, 72, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="registered">
/* TT glyph 92, char 0xae */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 6
SHP[1], 30
CALL[], 15, 1, 114
SHP[2], 21
SRP1[], 6
IP[], 46
IP[], 45
MDAP[R], 46
MDAP[R], 45
SRP2[], 46
SLOOP[], 4
IP[], 63, 62, 53, 43
SHP[2], 61
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ring">
/* VTTTalk Unicode 0x2da */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 637, 307, 0


    </glyphProgram>

    <glyphProgram name="s">
/* TT glyph 45, char 0x73 (s) */
/* VTT 6.33 compiler Tue Aug  8 13:08:04 2023 */
SVTCA[Y]
CALL[], 3, 11, 114
SHP[2], 10
CALL[], 23, 7, 114
SHP[2], 30
SRP2[], 3
SLOOP[], 8
IP[], 13, 0, 16, 17, 37, 36, 20, 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="sacute">
/* VTTTalk Unicode 0x15b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 626, 326, 5
SVTCA[Y]
CALL[], 40, 23, 1, 1, 71, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="scaron">
/* VTTTalk Unicode 0x161 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 631, 326, 5
SVTCA[Y]
CALL[], 40, 23, 1, 1, 71, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="scircumflex">
/* VTTTalk Unicode 0x15d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 630, 325, 0
SVTCA[Y]
CALL[], 40, 23, 1, 1, 66, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="section">
/* TT glyph 98, char 0xa7 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 12, 3, 114
SHP[2], 19
MDAP[R], 41
SHP[1], 48
SLOOP[], 10
IP[], 54, 35, 55, 62, 61, 71, 72, 26, 6, 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="semicolon">
/* TT glyph 56, char 0x3b (;) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 9, 7, 114
SHP[2], 3
MDAP[R], 17
MDRP[m&gt;RGr], 12
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="seven">
/* TT glyph 107, char 0x37 (7) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 2, 12, 114
CALL[], 7, 4, 114
SHP[2], 6
SRP1[], 6
SHP[1], 0
SHP[1], 4
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="seven.den">
/* TT glyph 619, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
CALL[], 1, 185, 114
CALL[], 7, 184, 114
SLOOP[], 3
SHP[2], 6, 4, 0
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="seven.inf">
/* VTTTalk Unicode 0x2087 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 619, -65, -230


    </glyphProgram>

    <glyphProgram name="seven.num">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 619, 78, 275


    </glyphProgram>

    <glyphProgram name="seven.sup">
/* VTTTalk Unicode 0x2077 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 619, 94, 330


    </glyphProgram>

    <glyphProgram name="seveneighths">
/* VTTTalk Unicode 0x215e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 619, -29, 275
OFFSET[R], 620, 124, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0

    </glyphProgram>

    <glyphProgram name="six">
/* TT glyph 106, char 0x36 (6) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 10, 13, 114
SHP[2], 25
CALL[], 17, 4, 114
SHP[2], 0
SRP2[], 10
SLOOP[], 4
IP[], 19, 4, 1, 16
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="six.den">
/* TT glyph 618, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
CALL[], 10, 187, 114
SHP[2], 25
CALL[], 17, 184, 114
SRP2[], 10
SLOOP[], 8
IP[], 13, 22, 28, 7, 19, 4, 1, 16
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="six.inf">
/* VTTTalk Unicode 0x2086 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 618, -65, -230


    </glyphProgram>

    <glyphProgram name="six.num">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 618, 78, 275


    </glyphProgram>

    <glyphProgram name="six.sup">
/* VTTTalk Unicode 0x2076 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 618, 94, 330


    </glyphProgram>

    <glyphProgram name="slash">
/* TT glyph 79, char 0x2f (/) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 0
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="space">
/* TT glyph 598, char 0x20 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */


    </glyphProgram>

    <glyphProgram name="sterling">
/* TT glyph 134, char 0xa3 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 12, 114
SHP[2], 39
SRP1[], 39
SHP[1], 2
CALL[], 17, 5, 114
SHP[2], 24
SRP1[], 1
IP[], 36
MDAP[R], 36
DLTP1[(36 @0 8)(36 @4 8)(36 @5 8)(36 @9 8)]
SHP[1], 6
SHP[1], 33
SRP1[], 33
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="t">
/* TT glyph 46, char 0x74 (t) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 9, 10, 114
SHP[2], 8
CALL[], 19, 6, 114
MDRP[m&gt;RWh], 21
SHP[1], 23
SHP[1], 18
SRP1[], 18
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tbar">
/* TT glyph 550, char 0x167 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 8
SHP[1], 10
SHP[1], 5
SRP1[], 5
SHP[1], 13
SRP1[], 13
SHP[1], 14
MDAP[R], 14
SHP[1], 3
SRP1[], 3
SHP[1], 0
SRP1[], 0
SHP[1], 17
MIAP[R], 25, 10
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tcaron">
/* VTTTalk Unicode 0x165 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 629, 439, 77

SVTCA[Y]
CALL[], 27, 19, 1, 1, 99, 86
SHC[2], 1



    </glyphProgram>

    <glyphProgram name="thorn">
/* TT glyph 596, char 0xfe */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 14, 114
CALL[], 2, 0, 114
CALL[], 7, 7, 114
SHP[2], 20
SRP1[], 20
SHP[1], 4
SRP1[], 4
SHP[1], 23
CALL[], 13, 11, 114
SHP[2], 16
SHP[2], 27
SRP1[], 27
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three">
/* TT glyph 103, char 0x33 (3) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 2, 4, 114
SHP[2], 4
SHP[2], 1
SRP1[], 1
SHP[1], 26
CALL[], 12, 12, 114
SHP[2], 13
SHP[2], 15
SRP1[], 15
SHP[1], 14
SRP1[], 2
IP[], 21
MDAP[R], 21
SHP[1], 6
SHP[1], 5
SRP1[], 6
SHP[1], 25
SRP1[], 25
SHP[1], 24
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="three.den">
/* TT glyph 615, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
CALL[], 2, 184, 114
SHP[2], 1
SRP1[], 1
SHP[1], 4
SHP[1], 22
CALL[], 12, 187, 114
SHP[2], 13
SRP1[], 2
SLOOP[], 3
IP[], 20, 21, 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three.inf">
/* VTTTalk Unicode 0x2083 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 615, -65, -230


    </glyphProgram>

    <glyphProgram name="three.num">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 615, 78, 275


    </glyphProgram>

    <glyphProgram name="three.sup">
/* VTTTalk Unicode 0xb3 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 615, 94, 330


    </glyphProgram>

    <glyphProgram name="threeeighths">
/* VTTTalk Unicode 0x215c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 620, 124, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0
OFFSET[R], 615, -59, 275



    </glyphProgram>

    <glyphProgram name="threefifths">
/* VTTTalk Unicode 0x2157 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 617, 134, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0
OFFSET[R], 615, -59, 275

    </glyphProgram>

    <glyphProgram name="threequarters">
/* VTTTalk Unicode 0xbe */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 615, -59, 275
OFFSET[R], 616, 84, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0


    </glyphProgram>

    <glyphProgram name="tilde">
/* VTTTalk Unicode 0x2dc */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 633, 307, 0


    </glyphProgram>

    <glyphProgram name="trademark">
/* TT glyph 94, char 0x2122 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 2, 0, 114
SHP[2], 0
SRP1[], 0
SHP[1], 5
MDRP[m&gt;RGr], 7
SLOOP[], 4
IP[], 14, 20, 15, 12
SHP[2], 17
SRP1[], 17
SHP[1], 11
SRP1[], 2
SHP[1], 18
SRP1[], 18
SHP[1], 8
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="two">
/* TT glyph 102, char 0x32 (2) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 12, 114
SHP[2], 24
SRP1[], 24
SHP[1], 23
SHP[1], 2
CALL[], 16, 5, 114
SHP[2], 9
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="two.den">
/* TT glyph 614, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
CALL[], 1, 185, 114
SHP[2], 23
SHP[2], 24
SRP1[], 24
SHP[1], 2
CALL[], 16, 186, 114
SHP[2], 9
SRP1[], 1
SLOOP[], 4
IP[], 19, 6, 3, 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two.inf">
/* VTTTalk Unicode 0x2082 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 614, -65, -230


    </glyphProgram>

    <glyphProgram name="two.num">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 614, 78, 275


    </glyphProgram>

    <glyphProgram name="two.sup">
/* VTTTalk Unicode 0xb2 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 614, 94, 330


    </glyphProgram>

    <glyphProgram name="twofifths">
/* VTTTalk Unicode 0x2156 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 617, 134, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0
OFFSET[R], 614, -69, 275



    </glyphProgram>

    <glyphProgram name="twothirds">
/* VTTTalk Unicode 0x2154 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 614, -69, 275
OFFSET[R], 615, 157, -230
USEMYMETRICS[]
OFFSET[R], 611, 0, 0



    </glyphProgram>

    <glyphProgram name="u">
/* TT glyph 47, char 0x75 (u) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 10, 114
CALL[], 5, 11, 114
SHP[2], 20
SRP1[], 20
SHP[1], 2
SRP1[], 2
SHP[1], 23
CALL[], 12, 6, 114
SHP[2], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uacute">
/* VTTTalk Unicode 0xfa */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 626, 304, -11
SVTCA[Y]
CALL[], 26, 24, 1, 1, 67, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="ubreve">
/* VTTTalk Unicode 0x16d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 632, 306, 0
SVTCA[Y]
CALL[], 33, 24, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ucircumflex">
/* VTTTalk Unicode 0xfb */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 630, 306, 0
SVTCA[Y]
CALL[], 26, 12, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="udieresis">
/* VTTTalk Unicode 0xfc */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 635, 306, 0
SVTCA[Y]
CALL[], 29, 12, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="ugrave">
/* VTTTalk Unicode 0xf9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 628, 304, -11
SVTCA[Y]
CALL[], 28, 24, 1, 1, 67, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uhorn">
/* TT glyph 568, char 0x1b0 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 10, 114
CALL[], 5, 11, 114
SHP[2], 20
SRP1[], 20
SHP[1], 2
SRP1[], 2
SHP[1], 23
CALL[], 12, 6, 114
MDRP[m&gt;RWh], 28
SHP[1], 24
SRP1[], 24
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uhungarumlaut">
/* VTTTalk Unicode 0x171 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 627, 306, 0
SVTCA[Y]
CALL[], 26, 12, 1, 1, 76, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="umacron">
/* VTTTalk Unicode 0x16b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 634, 306, 0
SVTCA[Y]
CALL[], 27, 12, 1, 1, 116, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="underscore">
/* TT glyph 87, char 0x5f (_) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
RUTG[]
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni00A0">
/* TT glyph 599, char 0xa0 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */


    </glyphProgram>

    <glyphProgram name="uni00A80300">
/* TT glyph 649, char 0x1fed */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 13
SHP[1], 7
MDRP[M&gt;RWh], 2
MDRP[m&gt;RBl], 0
IP[], 3
IP[], 1
SRP1[], 13
SHP[1], 25
SRP1[], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni00A80300.cap">
/* TT glyph 673, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 13
SHP[1], 7
MDRP[M&gt;RWh], 2
SHP[2], 1
MDRP[m&gt;RBl], 0
SHP[2], 3
SRP1[], 13
SHP[1], 25
SRP1[], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni00A80301">
/* TT glyph 648, char 0x1fee */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 13
SHP[1], 7
MDRP[M&gt;RWh], 1
SHP[2], 2
MDRP[m&gt;RBl], 3
SHP[2], 0
SRP1[], 13
SHP[1], 25
SRP1[], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni00A80301.cap">
/* TT glyph 672, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 13
SHP[1], 7
MDRP[M&gt;RWh], 1
SHP[2], 2
MDRP[m&gt;RBl], 3
SHP[2], 0
SRP1[], 13
SHP[1], 25
SRP1[], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni00A80304">
/* TT glyph 651, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 13
SHP[1], 7
MDRP[m&gt;RWh], 1
SHP[2], 2
SHP[1], 25
SRP1[], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni00A80304.cap">
/* TT glyph 675, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 13
SHP[1], 7
MDRP[m&gt;RWh], 1
SHP[2], 2
SHP[1], 25
SRP1[], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni00A8030C">
/* TT glyph 650, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 16
SHP[1], 10
MDRP[M&gt;RWh], 0
MDRP[m&gt;RBl], 2
SHP[2], 4
SLOOP[], 3
IP[], 3, 5, 1
SRP1[], 16
SHP[1], 28
SRP1[], 28
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni00A8030C.cap">
/* TT glyph 674, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 16
SHP[1], 10
SHP[1], 28
SRP1[], 28
SHP[1], 22
MDRP[M&gt;RWh], 0
MDRP[m&gt;RBl], 2
SHP[2], 4
SLOOP[], 3
IP[], 1, 5, 3
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni00AB">
/* TT glyph 69, char 0xab */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDRP[m&gt;RGr], 4
SHP[2], 5
SLOOP[], 6
IP[], 9, 2, 13, 6, 10, 3
SHP[2], 11
SRP1[], 11
SHP[1], 12
SRP1[], 1
SHP[1], 8
SRP1[], 8
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni00BB">
/* TT glyph 70, char 0xbb */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 10
SHP[1], 2
SRP1[], 2
SHP[1], 3
MDRP[m&gt;RGr], 13
SHP[2], 12
SLOOP[], 6
IP[], 1, 8, 4, 11, 0, 7
SHP[2], 6
SRP1[], 6
SHP[1], 5
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0122">
/* VTTTalk Unicode 0x122 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 7, 0, 0
OFFSET[R], 645, 364, -5

    </glyphProgram>

    <glyphProgram name="uni0123">
/* VTTTalk Unicode 0x123 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 33, 0, 0
OFFSET[R], 638, 306, 0
SVTCA[Y]
CALL[], 52, 10, 1, 1, 68, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0136">
/* VTTTalk Unicode 0x136 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 11, 0, 0
OFFSET[R], 645, 352, 0

    </glyphProgram>

    <glyphProgram name="uni0137">
/* VTTTalk Unicode 0x137 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 645, 301, 0

    </glyphProgram>

    <glyphProgram name="uni013B">
/* VTTTalk Unicode 0x13b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 12, 0, 0
OFFSET[R], 645, 338, 0

    </glyphProgram>

    <glyphProgram name="uni013C">
/* VTTTalk Unicode 0x13c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 645, 297, 0

    </glyphProgram>

    <glyphProgram name="uni0145">
/* VTTTalk Unicode 0x145 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 14, 0, 0
OFFSET[R], 645, 309, 5

    </glyphProgram>

    <glyphProgram name="uni0146">
/* VTTTalk Unicode 0x146 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 645, 315, 0



    </glyphProgram>

    <glyphProgram name="uni0156">
/* VTTTalk Unicode 0x156 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 18, 0, 0
OFFSET[R], 645, 332, 0

    </glyphProgram>

    <glyphProgram name="uni0157">
/* VTTTalk Unicode 0x157 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 645, 236, 0

    </glyphProgram>

    <glyphProgram name="uni015E">
/* TT glyph 343, char 0x15e */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 13, 3, 114
SHP[2], 20
CALL[], 34, 9, 114
SHP[2], 0
SHP[2], 56
SRP2[], 13
SLOOP[], 8
IP[], 23, 10, 26, 27, 7, 6, 30, 3
MDRP[m&gt;RGr], 44
SHP[2], 45
SLOOP[], 3
IP[], 35, 55, 54
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni015F">
/* TT glyph 542, char 0x15f */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 11, 114
SHP[2], 35
SHP[2], 6
SRP1[], 6
SHP[1], 28
MDRP[m&gt;RGr], 16
SHP[2], 17
SLOOP[], 5
IP[], 23, 10, 26, 27, 7
CALL[], 48, 7, 114
SHP[2], 55
SRP2[], 3
SLOOP[], 8
IP[], 38, 0, 41, 42, 62, 61, 45, 58
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0162">
/* TT glyph 350, char 0x162 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 2, 2, 114
SHP[2], 1
SRP1[], 1
SHP[1], 5
CALL[], 30, 8, 114
SHP[2], 7
MDRP[m&gt;RGr], 17
SHP[2], 18
SLOOP[], 6
IP[], 14, 24, 11, 27, 28, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0163">
/* TT glyph 549, char 0x163 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 10, 6, 114
MDRP[m&gt;RWh], 12
SHP[1], 14
SHP[1], 9
SRP1[], 9
SHP[1], 17
CALL[], 26, 10, 114
SHP[2], 25
SHP[2], 27
SRP1[], 27
SHP[1], 30
SRP1[], 30
SHP[1], 1
MDRP[m&gt;RGr], 40
SHP[2], 41
SLOOP[], 3
IP[], 50, 0, 31
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni018F">
/* TT glyph 398, char 0x18f */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 6, 9, 114
SHP[2], 32
CALL[], 26, 3, 114
SHP[2], 19
SRP1[], 6
IP[], 36
MDAP[R], 36
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01CD">
/* VTTTalk Unicode 0x1cd */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 664, 292, 0
SVTCA[Y]
CALL[], 11, 3, 1, 1, 76, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni01CE">
/* VTTTalk Unicode 0x1ce */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 631, 299, 5
SVTCA[Y]
CALL[], 60, 40, 1, 1, 73, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni01CF">
/* VTTTalk Unicode 0x1cf */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 9, 0, 0
OFFSET[R], 664, 307, 0
SVTCA[Y]
CALL[], 12, 5, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni01D0">
/* VTTTalk Unicode 0x1d0 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 631, 317, 0
SVTCA[Y]
CALL[], 10, 5, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni01D1">
/* VTTTalk Unicode 0x1d1 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 664, 294, 5
SVTCA[Y]
CALL[], 36, 3, 1, 1, 66, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni01D2">
/* VTTTalk Unicode 0x1d2 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 631, 298, 5
SVTCA[Y]
CALL[], 30, 6, 1, 1, 66, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni01D3">
/* VTTTalk Unicode 0x1d3 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 664, 305, -5
SVTCA[Y]
CALL[], 24, 4, 1, 1, 71, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni01D4">
/* VTTTalk Unicode 0x1d4 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 631, 304, -11
SVTCA[Y]
CALL[], 26, 24, 1, 1, 67, 86
SHC[2], 1



    </glyphProgram>

    <glyphProgram name="uni01D5">
/* VTTTalk Unicode 0x1d5 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 675, 307, 0
SVTCA[Y]
CALL[], 31, 16, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3



    </glyphProgram>

    <glyphProgram name="uni01D6">
/* VTTTalk Unicode 0x1d6 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 651, 306, 0
SVTCA[Y]
CALL[], 33, 12, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01D7">
/* VTTTalk Unicode 0x1d7 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 672, 307, 0
SVTCA[Y]
CALL[], 31, 16, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01D8">
/* VTTTalk Unicode 0x1d8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 648, 306, 0
SVTCA[Y]
CALL[], 33, 12, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01D9">
/* VTTTalk Unicode 0x1d9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 674, 307, 0
SVTCA[Y]
CALL[], 34, 16, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01DA">
/* VTTTalk Unicode 0x1da */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 650, 306, 0
SVTCA[Y]
CALL[], 36, 12, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01DB">
/* VTTTalk Unicode 0x1db */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 673, 307, 0
SVTCA[Y]
CALL[], 31, 16, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01DC">
/* VTTTalk Unicode 0x1dc */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 649, 306, 0
SVTCA[Y]
CALL[], 33, 12, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01EA">
/* TT glyph 322, char 0x1ea */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 12, 3, 114
SHP[2], 45
CALL[], 21, 9, 114
SHP[2], 3
SHP[2], 36
MDRP[m&gt;RGr], 29
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01EB">
/* TT glyph 521, char 0x1eb */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 12, 7, 114
SHP[2], 42
CALL[], 21, 11, 114
SMD[], 128
MDRP[m&gt;RGr], 29
SHP[2], 28
SHP[1], 36
SRP1[], 36
SHP[1], 3
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni01F0">
/* VTTTalk Unicode 0x1f0 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 476, 0, 0
OFFSET[R], 631, 367, 0
SVTCA[Y]
CALL[], 20, 19, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni01F8">
/* VTTTalk Unicode 0x1f8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 14, 0, 0
OFFSET[R], 662, 311, -5
SVTCA[Y]
CALL[], 12, 6, 1, 1, 71, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni01F9">
/* VTTTalk Unicode 0x1f9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 628, 305, 0
SVTCA[Y]
CALL[], 28, 5, 1, 1, 69, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni0218">
/* VTTTalk Unicode 0x218 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 19, 0, 0
OFFSET[R], 645, 310, 0



    </glyphProgram>

    <glyphProgram name="uni0219">
/* VTTTalk Unicode 0x219 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 645, 297, -5


    </glyphProgram>

    <glyphProgram name="uni021A">
/* VTTTalk Unicode 0x21a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 20, 0, 0
OFFSET[R], 645, 308, 0

    </glyphProgram>

    <glyphProgram name="uni021B">
/* VTTTalk Unicode 0x21b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 645, 335, 0



    </glyphProgram>

    <glyphProgram name="uni0226">
/* VTTTalk Unicode 0x226 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 669, 292, 0
SVTCA[Y]
CALL[], 14, 3, 1, 1, 96, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0227">
/* VTTTalk Unicode 0x227 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 636, 299, 5
SVTCA[Y]
CALL[], 63, 40, 1, 1, 93, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni022E">
/* VTTTalk Unicode 0x22e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 669, 294, 5
SVTCA[Y]
CALL[], 39, 3, 1, 1, 86, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni022F">
/* VTTTalk Unicode 0x22f */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 636, 298, 5
SVTCA[Y]
CALL[], 33, 6, 1, 1, 86, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni0232">
/* VTTTalk Unicode 0x232 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 667, 292, 0
SVTCA[Y]
CALL[], 10, 6, 1, 1, 116, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0233">
/* VTTTalk Unicode 0x233 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 634, 312, 0
SVTCA[Y]
CALL[], 17, 12, 1, 1, 116, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni0237">
/* TT glyph 476, char 0x237 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 8, 15, 114
SHP[2], 9
CALL[], 19, 6, 114
SHP[2], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0259">
/* TT glyph 597, char 0x259 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 7, 114
SHP[2], 0
CALL[], 13, 11, 114
SHP[2], 30
SRP1[], 1
IP[], 33
SRP1[], 33
SHP[1], 34
SHP[1], 20
SRP1[], 20
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02B9">
/* VTTTalk Unicode 0x2b9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 129, 0, 0



    </glyphProgram>

    <glyphProgram name="uni02BA">
/* VTTTalk Unicode 0x2ba */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 128, 0, 0



    </glyphProgram>

    <glyphProgram name="uni02BB">
/* VTTTalk Unicode 0x2bb */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 66, 0, 0


    </glyphProgram>

    <glyphProgram name="uni02BC">
/* VTTTalk Unicode 0x2bc */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0


    </glyphProgram>

    <glyphProgram name="uni02BE">
/* TT glyph 186, char 0x2be */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 11
SHP[1], 10
MDRP[m&gt;RGr], 3
SHP[2], 4
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02BF">
/* TT glyph 185, char 0x2bf */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 4
MDRP[m&gt;RGr], 11
SHP[2], 10
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02C60300">
/* TT glyph 657, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 9
SMD[], 128
MDRP[m&gt;RBl], 6
SHP[2], 2
MDAP[R], 2
MDRP[m&gt;RBl], 0
SRP1[], 6
SRP2[], 4
SLOOP[], 3
IP[], 10, 5, 8
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02C60300.cap">
/* TT glyph 681, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 9
SMD[], 128
MDRP[m&gt;RBl], 6
SHP[2], 2
MDAP[R], 2
MDRP[m&gt;RBl], 0
IP[], 3
IP[], 1
SRP1[], 6
SRP2[], 4
SLOOP[], 3
IP[], 10, 5, 8
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02C60301">
/* TT glyph 656, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 9
MDRP[m&gt;RBl], 6
SHP[2], 0
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 2
IP[], 3
IP[], 1
SRP1[], 6
SRP2[], 4
SLOOP[], 3
IP[], 10, 5, 8
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02C60301.cap">
/* TT glyph 680, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 9
SMD[], 128
MDRP[m&gt;RBl], 6
SHP[2], 0
MDAP[R], 0
MDRP[m&gt;RBl], 2
IP[], 3
IP[], 1
SRP1[], 4
SRP2[], 6
SLOOP[], 3
IP[], 8, 5, 10
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02C60303">
/* TT glyph 659, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 26
SHP[1], 31
MDRP[m&gt;RBl], 28
SHP[2], 13
MDAP[R], 13
SHP[1], 6
SHP[1], 22
SMD[], 128
MDRP[m&gt;RBl], 0
SHP[2], 9
SHP[2], 19
SRP1[], 28
SRP2[], 26
SLOOP[], 3
IP[], 32, 27, 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02C60303.cap">
/* TT glyph 683, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 26
SHP[1], 31
MDRP[m&gt;RBl], 28
SHP[2], 13
MDAP[R], 13
DLTP1[(13 @6 8)(13 @7 8)(13 @8 8)]
SHP[1], 6
SMD[], 128
MDRP[m&gt;RBl], 0
SHP[2], 19
SHP[2], 9
SRP1[], 9
SHP[1], 10
SRP1[], 13
SHP[1], 22
SRP1[], 22
SHP[1], 23
SRP1[], 26
SRP2[], 28
SLOOP[], 3
IP[], 30, 27, 32
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02C60309">
/* TT glyph 658, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 16
SHP[1], 21
SMD[], 128
MDRP[m&gt;RBl], 18
SHP[2], 3
MDAP[R], 3
SHP[1], 4
SHP[1], 5
MDRP[m&gt;RGr], 13
SHP[2], 12
SHP[2], 11
SRP1[], 18
SRP2[], 16
SLOOP[], 3
IP[], 22, 17, 20
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02C60309.cap">
/* TT glyph 682, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 16
SHP[1], 21
MDRP[m&gt;RBl], 18
SHP[2], 3
MDAP[R], 3
SHP[1], 4
SHP[1], 5
MDRP[m&gt;RGr], 13
SHP[2], 11
SHP[2], 12
SRP1[], 18
SRP2[], 16
SLOOP[], 3
IP[], 22, 17, 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02C8">
/* TT glyph 187, char 0x2c8 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 0, 114
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02CC">
/* VTTTalk Unicode 0x2cc */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 187, 0, -553



    </glyphProgram>

    <glyphProgram name="uni02CD">
/* VTTTalk Unicode 0x2cd */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 642, 307, 0


    </glyphProgram>

    <glyphProgram name="uni02D80300">
/* TT glyph 653, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 11
SHP[1], 4
SMD[], 128
MDRP[M&gt;RGr], 2
SMD[], 64
MDRP[m&gt;RBl], 0
IP[], 1
IP[], 3
SRP0[], 11
MDRP[m&gt;RGr], 15
SHP[2], 14
SHP[2], 7
SRP1[], 7
SHP[1], 8
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02D80300.cap">
/* TT glyph 677, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 11
SHP[1], 4
SMD[], 128
MDRP[m&gt;RGr], 15
SHP[2], 14
SHP[2], 2
MDAP[R], 2
SHP[1], 1
SMD[], 64
MDRP[m&gt;RBl], 0
SHP[2], 3
SRP1[], 15
SHP[1], 7
SRP1[], 7
SHP[1], 8
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02D80301">
/* TT glyph 652, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 11
SHP[1], 4
SMD[], 128
MDRP[M&gt;RGr], 0
SMD[], 64
MDRP[m&gt;RBl], 2
SRP0[], 11
MDRP[m&gt;RGr], 15
SHP[2], 14
SHP[2], 7
SRP1[], 7
SHP[1], 8
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02D80301.cap">
/* TT glyph 676, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 11
SHP[1], 4
SMD[], 128
MDRP[M&gt;RGr], 1
SMD[], 64
MDRP[m&gt;RBl], 3
IP[], 0
IP[], 2
SMD[], 128
SRP0[], 11
MDRP[m&gt;RGr], 15
SHP[2], 14
SHP[2], 7
SRP1[], 7
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02D80303">
/* TT glyph 655, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 33
SHP[1], 26
MDRP[m&gt;RGr], 37
SHP[2], 36
SHP[2], 13
MDAP[R], 13
SHP[1], 6
SMD[], 128
MDRP[m&gt;RBl], 0
SHP[2], 19
SHP[2], 9
SRP1[], 9
SHP[1], 10
SRP1[], 13
SHP[1], 22
SRP1[], 22
SHP[1], 23
SRP1[], 37
SHP[1], 29
SRP1[], 29
SHP[1], 30
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02D80303.cap">
/* TT glyph 679, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 33
SHP[1], 26
SMD[], 128
MDRP[m&gt;RGr], 37
SHP[2], 36
SHP[2], 13
MDAP[R], 13
SHP[1], 6
MDRP[m&gt;RBl], 0
SHP[2], 19
SHP[2], 9
SRP1[], 9
SHP[1], 10
SRP1[], 13
SHP[1], 22
SRP1[], 22
SHP[1], 23
SRP1[], 37
SHP[1], 29
SRP1[], 29
SHP[1], 30
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02D80309">
/* TT glyph 654, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 23
SHP[1], 16
MDRP[M&gt;RGr], 3
SHP[2], 4
SHP[2], 5
MDRP[m&gt;RGr], 13
SHP[2], 11
SHP[2], 12
SRP0[], 23
MDRP[m&gt;RGr], 27
SHP[2], 26
SHP[2], 19
SRP1[], 19
SHP[1], 20
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni02D80309.cap">
/* TT glyph 678, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 23
SHP[1], 16
SMD[], 128
MDRP[m&gt;RGr], 27
SHP[2], 26
SHP[2], 3
MDAP[R], 3
SHP[1], 4
SHP[1], 5
SMD[], 64
MDRP[m&gt;RGr], 13
SHP[2], 11
SHP[2], 12
SRP1[], 27
SHP[1], 19
SRP1[], 19
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0300">
/* TT glyph 628, char 0x300 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 2
SMD[], 128
MDRP[m&gt;RBl], 0
IP[], 3
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0300.cap">
/* TT glyph 662, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 2
MDRP[m&gt;RBl], 0
IP[], 3
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0301">
/* TT glyph 626, char 0x301 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 2
IP[], 3
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0301.cap">
/* TT glyph 660, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 2
IP[], 3
IP[], 1
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0302">
/* TT glyph 630, char 0x302 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 5
MDRP[m&gt;RBl], 2
SLOOP[], 3
IP[], 4, 1, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0302.cap">
/* TT glyph 663, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 5
MDRP[m&gt;RBl], 2
SLOOP[], 3
IP[], 4, 1, 6
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0303">
/* TT glyph 633, char 0x303 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 19
SHP[2], 9
SRP1[], 9
SHP[1], 10
SMD[], 128
MDRP[m&gt;RBl], 13
SHP[2], 6
SHP[2], 22
SRP1[], 22
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0303.cap">
/* TT glyph 666, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 23
SHP[1], 13
SRP1[], 13
SHP[1], 14
MDRP[m&gt;RBl], 17
SHP[2], 10
SHP[2], 0
SRP1[], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0304">
/* TT glyph 634, char 0x304 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0304.cap">
/* TT glyph 667, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 1
SHP[1], 2
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0306">
/* TT glyph 632, char 0x306 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 7
SHP[1], 0
SMD[], 128
MDRP[m&gt;RGr], 11
SHP[2], 10
SHP[2], 3
SRP1[], 3
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0306.cap">
/* TT glyph 665, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 7
SHP[1], 0
MDRP[m&gt;RGr], 11
SHP[2], 10
SHP[2], 3
SRP1[], 3
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0307">
/* TT glyph 636, char 0x307 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0307.cap">
/* TT glyph 669, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0308">
/* TT glyph 635, char 0x308 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
SHP[1], 15
SRP1[], 15
SHP[1], 21
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0308.cap">
/* TT glyph 668, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
SHP[1], 15
SRP1[], 15
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0309">
/* TT glyph 639, char 0x309 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 4
SHP[1], 5
SMD[], 192
MDRP[m&gt;RGr], 13
SHP[2], 11
SHP[2], 12
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0309.cap">
/* TT glyph 671, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 4
SHP[1], 5
SMD[], 192
MDRP[m&gt;RGr], 13
SHP[2], 11
SHP[2], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030A">
/* TT glyph 637, char 0x30a */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 15
SMD[], 192
MDRP[m&gt;RGr], 3
SHP[2], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030A.cap">
/* TT glyph 670, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 15
SMD[], 192
MDRP[m&gt;RGr], 9
SHP[2], 21
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni030B">
/* TT glyph 627, char 0x30b */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
SMD[], 128
MDRP[m&gt;RBl], 2
SHP[2], 6
SLOOP[], 4
IP[], 7, 3, 5, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030B.cap">
/* TT glyph 661, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
SMD[], 128
MDRP[m&gt;RBl], 2
SHP[2], 6
SLOOP[], 4
IP[], 7, 3, 1, 5
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni030C">
/* TT glyph 631, char 0x30c */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
SHP[2], 4
SLOOP[], 3
IP[], 3, 5, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030C.cap">
/* TT glyph 664, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
SHP[2], 4
SLOOP[], 3
IP[], 3, 5, 1
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0312">
/* TT glyph 638, char 0x312 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 13
SHP[1], 12
SHP[1], 11
SMD[], 192
MDRP[m&gt;RGr], 3
SHP[2], 4
SHP[2], 5
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0315">
/* TT glyph 629, char 0x315 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 2
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0323">
/* TT glyph 644, char 0x323 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0324">
/* TT glyph 643, char 0x324 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
SHP[1], 21
SRP1[], 21
SHP[1], 15
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0326">
/* TT glyph 645, char 0x326 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 13
SHP[1], 12
SHP[1], 11
SMD[], 192
MDRP[m&gt;RGr], 3
SHP[2], 4
SHP[2], 5
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0327">
/* TT glyph 646, char 0x327 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RGr], 12
SHP[2], 13
SLOOP[], 3
IP[], 22, 0, 3
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0328">
/* TT glyph 647, char 0x328 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 4
MDRP[m&gt;RGr], 12
SHP[2], 11
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni032D">
/* TT glyph 640, char 0x32d */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RBl], 4
SHP[2], 2
SLOOP[], 3
IP[], 3, 5, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni032E">
/* TT glyph 641, char 0x32e */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 11
SHP[1], 10
SHP[1], 3
SRP1[], 3
SHP[1], 4
MDRP[m&gt;RGr], 7
SHP[2], 0
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni0331">
/* TT glyph 642, char 0x331 */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0E3F">
/* TT glyph 142, char 0xe3f */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 4, 12, 114
SHP[2], 0
MDRP[m&gt;RWh], 2
SHP[1], 40
SRP1[], 40
SHP[1], 45
CALL[], 5, 4, 114
MDRP[m&gt;RWh], 7
SHP[1], 9
SHP[1], 29
SRP1[], 29
SHP[1], 33
SRP1[], 4
SRP2[], 5
IP[], 39
MDAP[R], 39
SHP[1], 23
SRP2[], 23
IP[], 15
IP[], 16
SHP[2], 24
SRP1[], 24
SHP[1], 34
SRP1[], 39
SHP[1], 38
SRP1[], 38
SHP[1], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E06">
/* VTTTalk Unicode 0x1e06 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 2, 0, 0
OFFSET[R], 642, 302, 0

    </glyphProgram>

    <glyphProgram name="uni1E07">
/* VTTTalk Unicode 0x1e07 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 28, 0, 0
OFFSET[R], 642, 307, 0


    </glyphProgram>

    <glyphProgram name="uni1E0C">
/* VTTTalk Unicode 0x1e0c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 4, 0, 0
OFFSET[R], 644, 275, 0

    </glyphProgram>

    <glyphProgram name="uni1E0D">
/* VTTTalk Unicode 0x1e0d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OFFSET[R], 644, 301, 0


    </glyphProgram>

    <glyphProgram name="uni1E0E">
/* VTTTalk Unicode 0x1e0e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 4, 0, 0
OFFSET[R], 642, 275, 0

    </glyphProgram>

    <glyphProgram name="uni1E0F">
/* VTTTalk Unicode 0x1e0f */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OFFSET[R], 642, 301, 0


    </glyphProgram>

    <glyphProgram name="uni1E12">
/* VTTTalk Unicode 0x1e12 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 4, 0, 0
OFFSET[R], 640, 275, 0

    </glyphProgram>

    <glyphProgram name="uni1E13">
/* VTTTalk Unicode 0x1e13 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OFFSET[R], 640, 301, 0


    </glyphProgram>

    <glyphProgram name="uni1E20">
/* VTTTalk Unicode 0x1e20 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 7, 0, 0
OFFSET[R], 667, 353, 5
SVTCA[Y]
CALL[], 37, 33, 1, 1, 110, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1E21">
/* VTTTalk Unicode 0x1e21 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 33, 0, 0
OFFSET[R], 634, 306, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 108, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E24">
/* VTTTalk Unicode 0x1e24 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 8, 0, 0
OFFSET[R], 644, 309, 5



    </glyphProgram>

    <glyphProgram name="uni1E25">
/* VTTTalk Unicode 0x1e25 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 34, 0, 0
OFFSET[R], 644, 312, 0


    </glyphProgram>

    <glyphProgram name="uni1E28">
/* TT glyph 265, char 0x1e28 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 8
SHP[2], 11
MDRP[m&gt;RGr], 22
SHP[2], 23
SLOOP[], 3
IP[], 32, 33, 13
CALL[], 1, 2, 114
SHP[2], 5
SRP1[], 0
IP[], 10
MDAP[R], 10
SHP[1], 3
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni1E29">
/* TT glyph 461, char 0x1e29 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 0, 0, 114
CALL[], 5, 7, 114
SHP[2], 20
SRP1[], 20
SHP[1], 2
SRP1[], 2
SHP[1], 23
MIAP[R], 48, 10
SHP[1], 13
SHP[1], 25
MDRP[m&gt;RGr], 35
SHP[2], 36
SLOOP[], 3
IP[], 45, 46, 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E2A">
/* VTTTalk Unicode 0x1e2a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 8, 0, 0
OFFSET[R], 641, 308, 0

    </glyphProgram>

    <glyphProgram name="uni1E2B">
/* VTTTalk Unicode 0x1e2b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 34, 0, 0
OFFSET[R], 641, 312, 0


    </glyphProgram>

    <glyphProgram name="uni1E32">
/* VTTTalk Unicode 0x1e32 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 11, 0, 0
OFFSET[R], 644, 352, 0


    </glyphProgram>

    <glyphProgram name="uni1E33">
/* VTTTalk Unicode 0x1e33 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 644, 301, 0


    </glyphProgram>

    <glyphProgram name="uni1E34">
/* VTTTalk Unicode 0x1e34 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 11, 0, 0
OFFSET[R], 642, 352, 0


    </glyphProgram>

    <glyphProgram name="uni1E35">
/* VTTTalk Unicode 0x1e35 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 642, 301, 0


    </glyphProgram>

    <glyphProgram name="uni1E36">
/* VTTTalk Unicode 0x1e36 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 12, 0, 0
OFFSET[R], 644, 338, 0


    </glyphProgram>

    <glyphProgram name="uni1E37">
/* VTTTalk Unicode 0x1e37 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 644, 297, 0


    </glyphProgram>

    <glyphProgram name="uni1E38">
/* VTTTalk Unicode 0x1e38 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 12, 0, 0
OFFSET[R], 667, 138, 0
OFFSET[R], 644, 338, 0
SVTCA[Y]
CALL[], 7, 1, 1, 1, 116, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1E39">
/* VTTTalk Unicode 0x1e39 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 634, 344, 250
OFFSET[R], 644, 297, 0
SVTCA[Y]
CALL[], 21, 6, 1, 1, 121, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E3A">
/* VTTTalk Unicode 0x1e3a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 12, 0, 0
OFFSET[R], 642, 338, 0


    </glyphProgram>

    <glyphProgram name="uni1E3B">
/* VTTTalk Unicode 0x1e3b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 642, 297, 0


    </glyphProgram>

    <glyphProgram name="uni1E3C">
/* VTTTalk Unicode 0x1e3c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 12, 0, 0
OFFSET[R], 640, 338, 0


    </glyphProgram>

    <glyphProgram name="uni1E3D">
/* VTTTalk Unicode 0x1e3d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 640, 297, 0


    </glyphProgram>

    <glyphProgram name="uni1E3E">
/* VTTTalk Unicode 0x1e3e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 13, 0, 0
OFFSET[R], 660, 299, -5
SVTCA[Y]
CALL[], 13, 0, 1, 1, 73, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1E3F">
/* VTTTalk Unicode 0x1e3f */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 626, 309, 0
SVTCA[Y]
CALL[], 50, 6, 1, 1, 68, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E40">
/* VTTTalk Unicode 0x1e40 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 13, 0, 0
OFFSET[R], 669, 299, -5
SVTCA[Y]
CALL[], 16, 0, 1, 1, 93, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1E41">
/* VTTTalk Unicode 0x1e41 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 636, 309, 0
SVTCA[Y]
CALL[], 53, 6, 1, 1, 88, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E42">
/* VTTTalk Unicode 0x1e42 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 13, 0, 0
OFFSET[R], 644, 324, 0


    </glyphProgram>

    <glyphProgram name="uni1E43">
/* VTTTalk Unicode 0x1e43 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 644, 310, 0


    </glyphProgram>

    <glyphProgram name="uni1E44">
/* VTTTalk Unicode 0x1e44 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 14, 0, 0
OFFSET[R], 669, 311, -5
SVTCA[Y]
CALL[], 13, 6, 1, 1, 91, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1E45">
/* VTTTalk Unicode 0x1e45 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 636, 305, 0
SVTCA[Y]
CALL[], 29, 5, 1, 1, 89, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E46">
/* VTTTalk Unicode 0x1e46 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 14, 0, 0
OFFSET[R], 644, 309, 5


    </glyphProgram>

    <glyphProgram name="uni1E47">
/* VTTTalk Unicode 0x1e47 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 644, 315, 0


    </glyphProgram>

    <glyphProgram name="uni1E48">
/* VTTTalk Unicode 0x1e48 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 14, 0, 0
OFFSET[R], 642, 308, 0


    </glyphProgram>

    <glyphProgram name="uni1E49">
/* VTTTalk Unicode 0x1e49 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 642, 315, 0


    </glyphProgram>

    <glyphProgram name="uni1E4A">
/* VTTTalk Unicode 0x1e4a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 14, 0, 0
OFFSET[R], 640, 309, 5


    </glyphProgram>

    <glyphProgram name="uni1E4B">
/* VTTTalk Unicode 0x1e4b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 640, 315, 0


    </glyphProgram>

    <glyphProgram name="uni1E58">
/* VTTTalk Unicode 0x1e58 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 18, 0, 0
OFFSET[R], 669, 319, 0
SVTCA[Y]
CALL[], 33, 10, 1, 1, 96, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1E59">
/* VTTTalk Unicode 0x1e59 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 636, 293, 0
SVTCA[Y]
CALL[], 26, 5, 1, 1, 92, 86
SHC[2], 1



    </glyphProgram>

    <glyphProgram name="uni1E5A">
/* VTTTalk Unicode 0x1e5a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 18, 0, 0
OFFSET[R], 644, 332, 0


    </glyphProgram>

    <glyphProgram name="uni1E5B">
/* VTTTalk Unicode 0x1e5b */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 644, 236, 0


    </glyphProgram>

    <glyphProgram name="uni1E5C">
/* VTTTalk Unicode 0x1e5c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 18, 0, 0
OFFSET[R], 667, 319, 0
OFFSET[R], 644, 332, 0
SVTCA[Y]
CALL[], 31, 10, 1, 1, 116, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1E5D">
/* VTTTalk Unicode 0x1e5d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 634, 293, 0
OFFSET[R], 644, 236, 0
SVTCA[Y]
CALL[], 24, 5, 1, 1, 116, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E5E">
/* VTTTalk Unicode 0x1e5e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 18, 0, 0
OFFSET[R], 642, 332, 0


    </glyphProgram>

    <glyphProgram name="uni1E5F">
/* VTTTalk Unicode 0x1e5f */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 642, 236, 0


    </glyphProgram>

    <glyphProgram name="uni1E62">
/* VTTTalk Unicode 0x1e62 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 19, 0, 0
OFFSET[R], 644, 310, 0


    </glyphProgram>

    <glyphProgram name="uni1E63">
/* VTTTalk Unicode 0x1e63 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 644, 297, -5



    </glyphProgram>

    <glyphProgram name="uni1E6C">
/* VTTTalk Unicode 0x1e6c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 20, 0, 0
OFFSET[R], 644, 308, 0


    </glyphProgram>

    <glyphProgram name="uni1E6D">
/* VTTTalk Unicode 0x1e6d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 644, 335, 0


    </glyphProgram>

    <glyphProgram name="uni1E6E">
/* VTTTalk Unicode 0x1e6e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 20, 0, 0
OFFSET[R], 642, 308, 0


    </glyphProgram>

    <glyphProgram name="uni1E6F">
/* VTTTalk Unicode 0x1e6f */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 642, 335, 0


    </glyphProgram>

    <glyphProgram name="uni1E70">
/* VTTTalk Unicode 0x1e70 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 20, 0, 0
OFFSET[R], 640, 308, 0


    </glyphProgram>

    <glyphProgram name="uni1E71">
/* VTTTalk Unicode 0x1e71 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 640, 335, 0


    </glyphProgram>

    <glyphProgram name="uni1E7E">
/* VTTTalk Unicode 0x1e7e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 22, 0, 0
OFFSET[R], 644, 308, 0


    </glyphProgram>

    <glyphProgram name="uni1E7F">
/* VTTTalk Unicode 0x1e7f */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0
OFFSET[R], 644, 307, 0


    </glyphProgram>

    <glyphProgram name="uni1E8C">
/* VTTTalk Unicode 0x1e8c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 24, 0, 0
OFFSET[R], 668, 307, 0
SVTCA[Y]
CALL[], 15, 3, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E8D">
/* VTTTalk Unicode 0x1e8d */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 50, 0, 0
OFFSET[R], 635, 306, 0
SVTCA[Y]
CALL[], 15, 3, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E8E">
/* VTTTalk Unicode 0x1e8e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 669, 290, -5
SVTCA[Y]
CALL[], 12, 0, 1, 1, 91, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1E8F">
/* VTTTalk Unicode 0x1e8f */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 636, 311, -5
SVTCA[Y]
CALL[], 19, 15, 1, 1, 93, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E90">
/* VTTTalk Unicode 0x1e90 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 26, 0, 0
OFFSET[R], 663, 306, 0
SVTCA[Y]
CALL[], 12, 6, 1, 1, 77, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E91">
/* VTTTalk Unicode 0x1e91 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 630, 309, 0
SVTCA[Y]
CALL[], 12, 6, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E92">
/* VTTTalk Unicode 0x1e92 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 26, 0, 0
OFFSET[R], 644, 307, 0


    </glyphProgram>

    <glyphProgram name="uni1E93">
/* VTTTalk Unicode 0x1e93 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 644, 325, 0


    </glyphProgram>

    <glyphProgram name="uni1E94">
/* VTTTalk Unicode 0x1e94 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 26, 0, 0
OFFSET[R], 642, 307, 0


    </glyphProgram>

    <glyphProgram name="uni1E95">
/* VTTTalk Unicode 0x1e95 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 642, 325, 0


    </glyphProgram>

    <glyphProgram name="uni1E96">
/* VTTTalk Unicode 0x1e96 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 34, 0, 0
OFFSET[R], 642, 312, 0


    </glyphProgram>

    <glyphProgram name="uni1E9E">
/* TT glyph 344, char 0x1e9e */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 12, 8, 114
CALL[], 17, 3, 114
SHP[2], 8
CALL[], 28, 8, 114
SHP[2], 35
SRP1[], 17
SLOOP[], 6
IP[], 3, 22, 4, 5, 21, 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA0">
/* VTTTalk Unicode 0x1ea0 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 644, 339, 5



    </glyphProgram>

    <glyphProgram name="uni1EA1">
/* VTTTalk Unicode 0x1ea1 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 644, 304, 0


    </glyphProgram>

    <glyphProgram name="uni1EA2">
/* VTTTalk Unicode 0x1ea2 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 671, 292, 0
SVTCA[Y]
CALL[], 14, 3, 1, 1, 76, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EA3">
/* VTTTalk Unicode 0x1ea3 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 639, 299, 5
SVTCA[Y]
CALL[], 63, 40, 1, 1, 73, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EA4">
/* VTTTalk Unicode 0x1ea4 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 680, 288, -10

SVTCA[Y]
CALL[], 15, 3, 1, 1, 67, 86
SHC[2], 2
SHC[2], 3



    </glyphProgram>

    <glyphProgram name="uni1EA5">
/* VTTTalk Unicode 0x1ea5 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 656, 298, 0
SVTCA[Y]
CALL[], 64, 40, 1, 1, 68, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EA6">
/* VTTTalk Unicode 0x1ea6 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 681, 288, -10
SVTCA[Y]
CALL[], 15, 3, 1, 1, 67, 86
SHC[2], 2
SHC[2], 3
    </glyphProgram>

    <glyphProgram name="uni1EA7">
/* VTTTalk Unicode 0x1ea7 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 657, 298, 0
SVTCA[Y]
CALL[], 64, 40, 1, 1, 68, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EA8">
/* VTTTalk Unicode 0x1ea8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 682, 288, -10
SVTCA[Y]
CALL[], 27, 3, 1, 1, 67, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EA9">
/* VTTTalk Unicode 0x1ea9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 658, 298, 0
SVTCA[Y]
CALL[], 76, 40, 1, 1, 68, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EAA">
/* VTTTalk Unicode 0x1eaa */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 683, 288, -10
SVTCA[Y]
CALL[], 37, 3, 1, 1, 67, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EAB">
/* VTTTalk Unicode 0x1eab */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 659, 298, 0
SVTCA[Y]
CALL[], 86, 40, 1, 1, 68, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EAC">
/* VTTTalk Unicode 0x1eac */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 663, 288, -10
OFFSET[R], 644, 339, 5

SVTCA[Y]

CALL[], 11, 3, 1, 1, 67, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EAD">
/* VTTTalk Unicode 0x1ead */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 630, 298, 0
OFFSET[R], 644, 304, 0
SVTCA[Y]
CALL[], 60, 40, 1, 1, 68, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EAE">
/* VTTTalk Unicode 0x1eae */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 676, 292, 0
SVTCA[Y]
CALL[], 22, 3, 1, 1, 76, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EAF">
/* VTTTalk Unicode 0x1eaf */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 652, 299, 5
SVTCA[Y]
CALL[], 71, 40, 1, 1, 73, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EB0">
/* VTTTalk Unicode 0x1eb0 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 677, 292, 0
SVTCA[Y]
CALL[], 22, 3, 1, 1, 76, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EB1">
/* VTTTalk Unicode 0x1eb1 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 653, 299, 5
SVTCA[Y]
CALL[], 71, 40, 1, 1, 73, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EB2">
/* VTTTalk Unicode 0x1eb2 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 678, 292, 0
SVTCA[Y]
CALL[], 34, 3, 1, 1, 76, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EB3">
/* VTTTalk Unicode 0x1eb3 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 654, 299, 5
SVTCA[Y]
CALL[], 83, 40, 1, 1, 73, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EB4">
/* VTTTalk Unicode 0x1eb4 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 679, 292, 0
SVTCA[Y]
CALL[], 44, 3, 1, 1, 76, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EB5">
/* VTTTalk Unicode 0x1eb5 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 655, 299, 5
SVTCA[Y]
CALL[], 93, 40, 1, 1, 73, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EB6">
/* VTTTalk Unicode 0x1eb6 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 665, 292, 0
OFFSET[R], 644, 339, 5
SVTCA[Y]
CALL[], 18, 3, 1, 1, 76, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EB7">
/* VTTTalk Unicode 0x1eb7 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 632, 299, 5
OFFSET[R], 644, 304, 0
SVTCA[Y]
CALL[], 67, 40, 1, 1, 73, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EB8">
/* VTTTalk Unicode 0x1eb8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 644, 336, 0



    </glyphProgram>

    <glyphProgram name="uni1EB9">
/* VTTTalk Unicode 0x1eb9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 644, 320, 0


    </glyphProgram>

    <glyphProgram name="uni1EBA">
/* VTTTalk Unicode 0x1eba */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 671, 335, 0
SVTCA[Y]
CALL[], 15, 1, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1EBB">
/* VTTTalk Unicode 0x1ebb */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 639, 319, 5
SVTCA[Y]
CALL[], 39, 13, 1, 1, 66, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EBC">
/* VTTTalk Unicode 0x1ebc */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 666, 335, 0
SVTCA[Y]
CALL[], 16, 1, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1EBD">
/* VTTTalk Unicode 0x1ebd */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 633, 319, 5
SVTCA[Y]
CALL[], 36, 13, 1, 1, 66, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EBE">
/* VTTTalk Unicode 0x1ebe */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 680, 335, 0
SVTCA[Y]
CALL[], 16, 1, 1, 1, 77, 86
SHC[2], 1
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EBF">
/* VTTTalk Unicode 0x1ebf */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 656, 318, 0
SVTCA[Y]
CALL[], 40, 13, 1, 1, 60, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EC0">
/* VTTTalk Unicode 0x1ec0 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 681, 335, 0
SVTCA[Y]
CALL[], 16, 1, 1, 1, 77, 86
SHC[2], 1
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EC1">
/* VTTTalk Unicode 0x1ec1 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 657, 318, 0
SVTCA[Y]
CALL[], 40, 13, 1, 1, 60, 86
SHC[2], 2
SHC[2], 3




    </glyphProgram>

    <glyphProgram name="uni1EC2">
/* VTTTalk Unicode 0x1ec2 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 682, 335, 0
SVTCA[Y]
CALL[], 28, 1, 1, 1, 77, 86
SHC[2], 1
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EC3">
/* VTTTalk Unicode 0x1ec3 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 658, 318, 0
SVTCA[Y]
CALL[], 52, 13, 1, 1, 60, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EC4">
/* VTTTalk Unicode 0x1ec4 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 683, 335, 0
SVTCA[Y]
CALL[], 38, 1, 1, 1, 77, 86
SHC[2], 1
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EC5">
/* VTTTalk Unicode 0x1ec5 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 659, 318, 0
SVTCA[Y]
CALL[], 62, 13, 1, 1, 60, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1EC6">
/* VTTTalk Unicode 0x1ec6 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 5, 0, 0
OFFSET[R], 663, 335, 0
OFFSET[R], 644, 336, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 77, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EC7">
/* VTTTalk Unicode 0x1ec7 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 31, 0, 0
OFFSET[R], 630, 318, 0
OFFSET[R], 644, 320, 0
SVTCA[Y]
CALL[], 36, 13, 1, 1, 60, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EC8">
/* VTTTalk Unicode 0x1ec8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 9, 0, 0
OFFSET[R], 671, 307, 0
SVTCA[Y]
CALL[], 15, 5, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1EC9">
/* VTTTalk Unicode 0x1ec9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 639, 317, 0
SVTCA[Y]
CALL[], 13, 5, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1ECA">
/* VTTTalk Unicode 0x1eca */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 9, 0, 0
OFFSET[R], 644, 308, 0

    </glyphProgram>

    <glyphProgram name="uni1ECB">
/* VTTTalk Unicode 0x1ecb */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 644, 321, 0


    </glyphProgram>

    <glyphProgram name="uni1ECC">
/* VTTTalk Unicode 0x1ecc */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 644, 324, -5

    </glyphProgram>

    <glyphProgram name="uni1ECD">
/* VTTTalk Unicode 0x1ecd */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 644, 320, -5

    </glyphProgram>

    <glyphProgram name="uni1ECE">
/* VTTTalk Unicode 0x1ece */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 671, 294, 5
SVTCA[Y]
CALL[], 39, 3, 1, 1, 66, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1ECF">
/* VTTTalk Unicode 0x1ecf */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 639, 298, 5
SVTCA[Y]
CALL[], 33, 6, 1, 1, 66, 86
SHC[2], 2



    </glyphProgram>

    <glyphProgram name="uni1ED0">
/* VTTTalk Unicode 0x1ed0 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 680, 292, 0
SVTCA[Y]
CALL[], 40, 3, 1, 1, 62, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED1">
/* VTTTalk Unicode 0x1ed1 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 656, 297, 0
SVTCA[Y]
CALL[], 34, 6, 1, 1, 61, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED2">
/* VTTTalk Unicode 0x1ed2 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 681, 292, 0
SVTCA[Y]
CALL[], 40, 3, 1, 1, 62, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED3">
/* VTTTalk Unicode 0x1ed3 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 657, 297, 0
SVTCA[Y]
CALL[], 34, 6, 1, 1, 61, 86
SHC[2], 2
SHC[2], 3



    </glyphProgram>

    <glyphProgram name="uni1ED4">
/* VTTTalk Unicode 0x1ed4 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 682, 292, 0

SVTCA[Y]
CALL[], 52, 3, 1, 1, 62, 86
SHC[2], 2
SHC[2], 3


    </glyphProgram>

    <glyphProgram name="uni1ED5">
/* VTTTalk Unicode 0x1ed5 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 658, 297, 0
SVTCA[Y]
CALL[], 46, 6, 1, 1, 61, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED6">
/* VTTTalk Unicode 0x1ed6 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 683, 292, 0
SVTCA[Y]
CALL[], 62, 3, 1, 1, 62, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED7">
/* VTTTalk Unicode 0x1ed7 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 659, 297, 0
SVTCA[Y]
CALL[], 56, 6, 1, 1, 61, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED8">
/* VTTTalk Unicode 0x1ed8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OFFSET[R], 663, 292, 0
OFFSET[R], 644, 324, -5
SVTCA[Y]
CALL[], 36, 3, 1, 1, 62, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1ED9">
/* VTTTalk Unicode 0x1ed9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 630, 297, 0
OFFSET[R], 644, 320, -5
SVTCA[Y]
CALL[], 30, 6, 1, 1, 61, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EDA">
/* VTTTalk Unicode 0x1eda */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 325, 0, 0
OFFSET[R], 660, 294, 5
SVTCA[Y]
CALL[], 48, 3, 1, 1, 81, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EDB">
/* VTTTalk Unicode 0x1edb */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 524, 0, 0
OFFSET[R], 626, 298, 5
SVTCA[Y]
CALL[], 42, 6, 1, 1, 81, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EDC">
/* VTTTalk Unicode 0x1edc */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 325, 0, 0
OFFSET[R], 662, 294, 5
SVTCA[Y]
CALL[], 50, 3, 1, 1, 81, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EDD">
/* VTTTalk Unicode 0x1edd */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 524, 0, 0
OFFSET[R], 628, 298, 5
SVTCA[Y]
CALL[], 44, 6, 1, 1, 81, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EDE">
/* VTTTalk Unicode 0x1ede */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 325, 0, 0
OFFSET[R], 671, 294, 5
SVTCA[Y]
CALL[], 51, 3, 1, 1, 81, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EDF">
/* VTTTalk Unicode 0x1edf */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 524, 0, 0
OFFSET[R], 639, 298, 5
SVTCA[Y]
CALL[], 45, 6, 1, 1, 81, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EE0">
/* VTTTalk Unicode 0x1ee0 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 325, 0, 0
OFFSET[R], 666, 294, 5
SVTCA[Y]
CALL[], 52, 3, 1, 1, 81, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EE1">
/* VTTTalk Unicode 0x1ee1 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 524, 0, 0
OFFSET[R], 633, 298, 5
SVTCA[Y]
CALL[], 42, 6, 1, 1, 81, 86
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="uni1EE2">
/* VTTTalk Unicode 0x1ee2 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 325, 0, 0
OFFSET[R], 644, 324, -5


    </glyphProgram>

    <glyphProgram name="uni1EE3">
/* VTTTalk Unicode 0x1ee3 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 524, 0, 0
OFFSET[R], 644, 320, -5


    </glyphProgram>

    <glyphProgram name="uni1EE4">
/* VTTTalk Unicode 0x1ee4 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 644, 306, -5

    </glyphProgram>

    <glyphProgram name="uni1EE5">
/* VTTTalk Unicode 0x1ee5 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 644, 297, 0


    </glyphProgram>

    <glyphProgram name="uni1EE6">
/* VTTTalk Unicode 0x1ee6 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 671, 305, -5
SVTCA[Y]
CALL[], 27, 16, 1, 1, 71, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EE7">
/* VTTTalk Unicode 0x1ee7 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 639, 304, -11
SVTCA[Y]
CALL[], 29, 12, 1, 1, 67, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1EE8">
/* VTTTalk Unicode 0x1ee8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 369, 0, 0
OFFSET[R], 660, 305, -5
SVTCA[Y]
CALL[], 31, 23, 1, 1, 71, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1EE9">
/* VTTTalk Unicode 0x1ee9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 568, 0, 0
OFFSET[R], 626, 304, -11
SVTCA[Y]
CALL[], 33, 24, 1, 1, 67, 86
SHC[2], 1



    </glyphProgram>

    <glyphProgram name="uni1EEA">
/* VTTTalk Unicode 0x1eea */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 369, 0, 0
OFFSET[R], 662, 305, -5
SVTCA[Y]
CALL[], 33, 23, 1, 1, 71, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1EEB">
/* VTTTalk Unicode 0x1eeb */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 568, 0, 0
OFFSET[R], 628, 304, -11
SVTCA[Y]
CALL[], 35, 12, 1, 1, 67, 86
SHC[2], 1



    </glyphProgram>

    <glyphProgram name="uni1EEC">
/* VTTTalk Unicode 0x1eec */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 369, 0, 0
OFFSET[R], 671, 305, -5
SVTCA[Y]
CALL[], 34, 23, 1, 1, 71, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1EED">
/* VTTTalk Unicode 0x1eed */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 568, 0, 0
OFFSET[R], 639, 304, -11
SVTCA[Y]
CALL[], 36, 12, 1, 1, 67, 86
SHC[2], 1



    </glyphProgram>

    <glyphProgram name="uni1EEE">
/* VTTTalk Unicode 0x1eee */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 369, 0, 0
OFFSET[R], 666, 307, 0
SVTCA[Y]
CALL[], 35, 23, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EEF">
/* VTTTalk Unicode 0x1eef */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 568, 0, 0
OFFSET[R], 633, 306, 0
SVTCA[Y]
CALL[], 33, 12, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EF0">
/* VTTTalk Unicode 0x1ef0 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 369, 0, 0
OFFSET[R], 644, 306, -5


    </glyphProgram>

    <glyphProgram name="uni1EF1">
/* VTTTalk Unicode 0x1ef1 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 568, 0, 0
OFFSET[R], 644, 297, 0

    </glyphProgram>

    <glyphProgram name="uni1EF4">
/* VTTTalk Unicode 0x1ef4 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 644, 308, 0


    </glyphProgram>

    <glyphProgram name="uni1EF5">
/* VTTTalk Unicode 0x1ef5 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 644, 465, 0


    </glyphProgram>

    <glyphProgram name="uni1EF6">
/* VTTTalk Unicode 0x1ef6 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 671, 290, -5
SVTCA[Y]
CALL[], 12, 6, 1, 1, 71, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1EF7">
/* VTTTalk Unicode 0x1ef7 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 639, 312, 0
SVTCA[Y]
CALL[], 19, 12, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni1EF8">
/* VTTTalk Unicode 0x1ef8 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 666, 292, 0
SVTCA[Y]
CALL[], 13, 0, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EF9">
/* VTTTalk Unicode 0x1ef9 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 633, 312, 0
SVTCA[Y]
CALL[], 16, 15, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="uni2011">
/* VTTTalk Unicode 0x2011 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 82, 0, 0



    </glyphProgram>

    <glyphProgram name="uni2015">
/* VTTTalk Unicode 0x2015 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0



    </glyphProgram>

    <glyphProgram name="uni2025">
/* TT glyph 62, char 0x2025 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 11, 114
SHP[2], 9
SHP[2], 15
SRP1[], 15
SHP[1], 21
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni20A6">
/* TT glyph 137, char 0x20a6 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 2, 12, 114
SHP[2], 26
CALL[], 11, 4, 114
SHP[2], 15
SRP2[], 2
IP[], 6
MDAP[R], 6
IP[], 33
SRP2[], 11
IP[], 28
SHP[1], 21
SHP[1], 3
SRP1[], 3
SHP[1], 24
SRP2[], 6
IP[], 0
IP[], 30
MDRP[m&gt;RWh], 7
SHP[2], 20
SHP[2], 10
SRP1[], 10
SHP[1], 17
IP[], 13
IP[], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20A9">
/* TT glyph 143, char 0x20a9 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 12, 114
SHP[2], 23
CALL[], 8, 4, 114
SHP[2], 16
SRP2[], 3
IP[], 12
MDAP[R], 12
SLOOP[], 4
IP[], 24, 29, 5, 1
SRP1[], 5
SHP[1], 21
SHP[1], 6
SRP1[], 6
SHP[1], 18
SRP2[], 5
SLOOP[], 8
IP[], 10, 11, 14, 15, 26, 27, 31, 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B1">
/* TT glyph 138, char 0x20b1 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 4, 4, 114
SHP[2], 25
CALL[], 19, 12, 114
SRP1[], 4
IP[], 18
MDAP[R], 18
SHP[1], 30
SRP1[], 30
SHP[1], 0
MDAP[R], 0
SHP[1], 14
SHP[1], 35
SHP[1], 3
SRP1[], 3
SHP[1], 11
SHP[1], 26
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni20B9">
/* TT glyph 141, char 0x20b9 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 6, 4, 114
SHP[2], 4
CALL[], 21, 12, 114
SRP1[], 6
IP[], 0
MDAP[R], 0
SHP[1], 13
SHP[1], 3
SRP1[], 3
SHP[1], 10
MDRP[m&gt;RWh], 23
SHP[2], 16
SHP[2], 22
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="uni20BA">
/* TT glyph 139, char 0x20ba */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 8, 4, 114
CALL[], 27, 12, 114
SHP[2], 19
SRP1[], 8
SLOOP[], 10
IP[], 0, 17, 3, 23, 22, 14, 4, 13, 7, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20BD">
/* TT glyph 140, char 0x20bd */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 8, 4, 114
SHP[2], 30
CALL[], 25, 12, 114
SRP1[], 8
IP[], 20
MDAP[R], 20
SHP[1], 23
SHP[1], 3
SRP1[], 3
SHP[1], 0
MDRP[m&gt;RWh], 19
SHP[2], 31
SHP[2], 4
SRP1[], 4
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2117">
/* TT glyph 90, char 0x2117 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
MDAP[R], 6
SHP[1], 27
MDAP[R], 15
SHP[1], 18
SRP2[], 6
SLOOP[], 3
IP[], 37, 48, 49
MDAP[R], 37
MDAP[R], 48
MDAP[R], 49
SRP1[], 37
SHP[1], 54
SRP1[], 48
SHP[1], 55
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2120">
/* TT glyph 93, char 0x2120 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 50, 0, 114
SHP[2], 40
SHP[2], 13
MDAP[R], 13
SHP[1], 20
SRP0[], 50
MDRP[m&gt;RBl], 49
SHP[2], 43
SHP[2], 33
MDAP[R], 33
SHP[1], 0
SRP2[], 13
SLOOP[], 8
IP[], 3, 30, 6, 7, 27, 26, 10, 23
SRP1[], 49
SRP2[], 50
SLOOP[], 4
IP[], 46, 52, 47, 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA788">
/* VTTTalk Unicode 0xa788 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 640, 307, 0



    </glyphProgram>

    <glyphProgram name="uogonek">
/* TT glyph 567, char 0x173 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 4, 10, 114
SHP[2], 29
MDRP[m&gt;RGr], 38
SHP[2], 37
MIAP[R], 8, 11
SHP[1], 23
SRP1[], 23
SHP[1], 5
SRP1[], 5
SHP[1], 26
CALL[], 15, 6, 114
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uring">
/* VTTTalk Unicode 0x16f */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 637, 304, -11
SVTCA[Y]
CALL[], 35, 24, 1, 1, 67, 86
SHC[2], 1
SHC[2], 2



    </glyphProgram>

    <glyphProgram name="utilde">
/* VTTTalk Unicode 0x169 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 633, 306, 0
SVTCA[Y]
CALL[], 26, 24, 1, 1, 76, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="v">
/* TT glyph 48, char 0x76 (v) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 1, 6, 114
SHP[2], 5
SRP2[], 0
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="w">
/* TT glyph 49, char 0x77 (w) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 5, 10, 114
SHP[2], 2
CALL[], 6, 6, 114
SHP[2], 12
SRP2[], 5
SLOOP[], 4
IP[], 8, 11, 3, 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wacute">
/* VTTTalk Unicode 0x1e83 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 626, 304, -10
SVTCA[Y]
CALL[], 13, 12, 1, 1, 68, 86
SHC[2], 1




    </glyphProgram>

    <glyphProgram name="wcircumflex">
/* VTTTalk Unicode 0x175 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 630, 306, 0
SVTCA[Y]
CALL[], 13, 6, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="wdieresis">
/* VTTTalk Unicode 0x1e85 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 635, 306, 0
SVTCA[Y]
CALL[], 16, 6, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="wgrave">
/* VTTTalk Unicode 0x1e81 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 628, 304, -10
SVTCA[Y]
CALL[], 15, 12, 1, 1, 68, 86
SHC[2], 1




    </glyphProgram>

    <glyphProgram name="x">
/* TT glyph 50, char 0x78 (x) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 10, 114
SHP[2], 10
CALL[], 3, 6, 114
SHP[2], 7
SRP2[], 1
SLOOP[], 4
IP[], 11, 8, 2, 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="y">
/* TT glyph 51, char 0x79 (y) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 5, 14, 114
SHP[2], 6
CALL[], 12, 6, 114
SHP[2], 15
SRP2[], 5
SLOOP[], 4
IP[], 1, 10, 11, 14
IUP[Y]
IUP[X]


    </glyphProgram>

    <glyphProgram name="yacute">
/* VTTTalk Unicode 0xfd */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 626, 311, -5
SVTCA[Y]
CALL[], 16, 15, 1, 1, 73, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ycircumflex">
/* VTTTalk Unicode 0x177 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 630, 312, 0
SVTCA[Y]
CALL[], 16, 12, 1, 1, 76, 86
SHC[2], 1



    </glyphProgram>

    <glyphProgram name="ydieresis">
/* VTTTalk Unicode 0xff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 635, 312, 0
SVTCA[Y]
CALL[], 19, 12, 1, 1, 96, 86
SHC[2], 1
SHC[2], 2


    </glyphProgram>

    <glyphProgram name="yen">
/* TT glyph 135, char 0xa5 */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 8, 4, 114
SHP[2], 11
CALL[], 22, 12, 114
SRP1[], 8
IP[], 4
MDAP[R], 4
SHP[1], 16
MDRP[m&gt;RWh], 3
SHP[2], 17
SHP[2], 0
SRP1[], 0
SHP[1], 20
SRP1[], 4
SHP[1], 7
SRP1[], 7
SHP[1], 10
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ygrave">
/* VTTTalk Unicode 0x1ef3 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 628, 311, -5
SVTCA[Y]
CALL[], 18, 15, 1, 1, 73, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="z">
/* TT glyph 52, char 0x7a (z) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 1, 10, 114
SHP[2], 10
SRP1[], 10
SHP[1], 2
SHP[1], 9
CALL[], 6, 6, 114
SHP[2], 5
SRP1[], 5
SHP[1], 3
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zacute">
/* VTTTalk Unicode 0x17a */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 626, 309, 0
SVTCA[Y]
CALL[], 12, 6, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="zcaron">
/* VTTTalk Unicode 0x17e */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 631, 309, 0
SVTCA[Y]
CALL[], 12, 6, 1, 1, 76, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="zdotaccent">
/* VTTTalk Unicode 0x17c */
/* ACT generated Wed Nov 30 17:14:36 2022 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 636, 309, 0
SVTCA[Y]
CALL[], 15, 6, 1, 1, 96, 86
SHC[2], 1


    </glyphProgram>

    <glyphProgram name="zero">
/* TT glyph 100, char 0x30 (0) */
/* VTT 6.33 compiler Tue Aug  8 13:08:05 2023 */
SVTCA[Y]
CALL[], 3, 5, 114
SHP[2], 18
CALL[], 12, 13, 114
SHP[2], 32
SRP1[], 3
SLOOP[], 4
IP[], 39, 24, 38, 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero.den">
/* TT glyph 612, char 0xffff */
/* VTT 6.33 compiler Tue Aug  8 13:08:06 2023 */
SVTCA[Y]
CALL[], 3, 187, 114
SHP[2], 28
CALL[], 12, 186, 114
SHP[2], 18
SRP2[], 3
SLOOP[], 6
IP[], 6, 35, 24, 34, 25, 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero.inf">
/* VTTTalk Unicode 0x2080 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 612, -65, -230


    </glyphProgram>

    <glyphProgram name="zero.num">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 612, 78, 275


    </glyphProgram>

    <glyphProgram name="zero.sup">
/* VTTTalk Unicode 0x2070 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

OFFSET[R], 612, 94, 330


    </glyphProgram>

    <extraProgram name="cvt">
/* Control Program */
/* ACT generated Wed Nov 30 17:14:36 2022 */

CATEGORY Stroke
CATEGORY StrokeInheritance

InstructionsOn @9..2047

DropOutCtrlOff @144

CvtCutIn = 1, 0@144 /* 1 pixel cut-in for over- and undershoots */

ClearTypeCtrl = 1

ASM("WS[], 16, 0") /* &lt;== S[16] = threshold ppem that less than or equal is no RES */

LinearAdvanceWidths = 0

/***** Height CVTs *****/
UpperCase
  Grey
  Y
  SquareHeight
      2:   655 /* cap height */

Delta(1@16;19;22)

ASM("SVTCA[Y]")
ASM("CALL[], 2, 89")
      8:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 8, 89")
  RoundHeight
      3:    15 ~   2 @ 34 /* cap height overshoot */
      9:   -15 ~   8 @ 34 /* base line undershoot */

LowerCase
  SquareHeight
      0:   710 /* lc ascender */

Delta(1@9;13;16;19)

ASM("SVTCA[Y]")
ASM("CALL[], 0, 89")
      6:   465 /* x height */
Delta(1@9;16;18;20)

ASM("SVTCA[Y]")
ASM("CALL[], 6, 89")
     10:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 10, 89")
     14:  -230 /* lc descender */
ASM("SVTCA[Y]")
ASM("CALL[], 14, 89")
  RoundHeight
      1:     9 ~   0 @ 56 /* lc ascender overshoot */
      7:    15 ~   6 @ 55 /* x height overshoot */
     11:   -15 ~  10 @ 55 /* base line undershoot */
     15:    -9 ~  14 @ 55 /* lc descender undershoot */

Figure
  SquareHeight
      4:   655 /* figure height */

Delta(1@16;19;22)

ASM("SVTCA[Y]")
ASM("CALL[], 4, 89")
     12:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 12, 89")
  RoundHeight
      5:    15 ~   4 @ 34 /* figure height overshoot */
     13:   -15 ~  12 @ 34 /* base line undershoot */

Other
  SquareHeight
     16:   666 /* other height */
ASM("SVTCA[Y]")
ASM("CALL[], 16, 89")
     18:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 18, 89")
  RoundHeight
     17:     4 ~  16 @125 /* other height overshoot */
     19:   -15 ~  18 @ 34 /* base line undershoot */

/***** Reserved CVTs *****/
AnyGroup
  AnyColor
  AnyDirection
  AnyCategory
     20:     0 /* DO NOT USE!!! */

/***** Italic rise and run CVTs *****/
UpperCase
  Grey
  Y
  ItalicRise
     21:   655

  X
  ItalicRun
     22:   188

LowerCase
  Grey
  Y
  ItalicRise
     23:   465

  X
  ItalicRun
     24:   133

Figure
  Grey
  Y
  ItalicRise
     25:   655

  X
  ItalicRun
     26:   188

Other
  Grey
  Y
  ItalicRise
     27:   666

  X
  ItalicRun
     28:   191

/***** Grand-Parent CVT *****/
AnyGroup
  Black
  X
  StrokeInheritance
     29:    83 /* 86x */

/***** Parent CVTs *****/
UpperCase
  Black
  X
  StrokeInheritance
     30:    83 /* 44x */
LowerCase
  Black
  X
  StrokeInheritance
     33:    82 /* 42x */
ASM("SVTCA[X]")
ASM("CALL[], 29, 33, 63, 30, 255, 90")

UpperCase
  Black
  Y
  StrokeInheritance
     31:    71 /* 21x */
ASM("SVTCA[X]")
ASM("CALL[], 31, 54, 30, 43, 91")
LowerCase
  Black
  Y
  StrokeInheritance
     34:    72 /* 14x */
ASM("SVTCA[X]")
ASM("CALL[], 34, 56, 33, 55, 91")

UpperCase
  Black
  Diag
  StrokeInheritance
     32:    71 /* 21x */
ASM("SVTCA[X]")
ASM("CALL[], 32, 54, 30, 43, 91")
LowerCase
  Black
  Diag
  StrokeInheritance
     35:    72 /* 14x */
ASM("SVTCA[X]")
ASM("CALL[], 35, 56, 33, 55, 91")

/***** StrokeInheritance CVTs *****/
UpperCase
  Black
  X
  StrokeInheritance
     36:    50 =  30 @ 16 /* 1x */
     37:    84 =  30 @255 /* 58x */
     38:     5 ~  37 @ 84 /* 15x */
     39:    94 =  38 @100 /* 3x */
  Y
  StrokeInheritance
     40:    61 =  31 @ 50 /* 1x */
     41:    72 /* 32x */
ASM("SVTCA[Y]")
ASM("CALL[], 41, 5, 31, 30, 92")
  Diag
  StrokeInheritance
     42:    56 =  32 @ 34 /* 6x */
     43:    76 /* 40x */
ASM("SVTCA[X]")
ASM("CALL[], 43, 26, 32, 30, 92")
     44:    82 =  43 @ 72 /* 9x */
     45:    89 =  43 @ 39 /* 12x */

LowerCase
  Black
  X
  StrokeInheritance
     46:    63 =  33 @ 27 /* 2x */
     47:    82 =  33 @255 /* 61x */
     48:    76 =  47 @ 84 /* 10x */
     49:     6 ~  47 @ 84 /* 21x */
  Y
  StrokeInheritance
     50:    71 =  34 @255 /* 38x */
     51:    78 =  50 @ 72 /* 5x */
     52:   127 =  34 @ 10 /* 2x */
  Diag
  StrokeInheritance
     53:    54 =  35 @ 28 /* 14x */
     54:    60 =  53 @ 84 /* 4x */
     55:    72 =  35 @255 /* 38x */
     56:    77 =  55 @ 84 /* 10x */
     57:    85 =  55 @ 39 /* 8x */
     58:    87 =  57 @250 /* 4x */

Figure
  Black
  X
  StrokeInheritance
     59:    86 /* 23x */
     60:    59 =  59 @ 19 /* 2x */
     61:    74 =  59 @ 39 /* 3x */
     62:    82 =  59 @100 /* 4x */
     63:   189 /* 2x */
  Y
  StrokeInheritance
     64:    72 /* 17x */
  Diag
  StrokeInheritance
     65:    58 /* 4x */
     66:    75 /* 20x */
     67:    67 =  66 @ 63 /* 5x */

Other
  Black
  X
  StrokeInheritance
     68:    88 /* 28x */
     69:    64 =  68 @ 21 /* 7x */
     70:    91 =  68 @167 /* 21x */
     71:    85 =  70 @ 84 /* 8x */
     72:    93 =  70 @250 /* 7x */
     73:   184 /* 4x */
  Y
  StrokeInheritance
     74:    72 /* 24x */
     75:    57 =  74 @ 34 /* 10x */
     76:    84 =  74 @ 42 /* 4x */
     77:   157 /* 6x */
  Diag
  StrokeInheritance
     78:    57 /* 12x */
     79:    59 =  78 @250 /* 5x */
     80:    73 /* 52x */
     81:    69 =  80 @125 /* 20x */
     82:    84 =  80 @ 46 /* 7x */

/***** Stroke CVTs *****/
UpperCase
  Black
  X
  Stroke
     83:    50 =  36 @255 /* 1x */
     84:    73 =  37 @ 46 /* 4x */
     85:    77 =  37 @ 72 /* 3x */
     86:    80 =  37 @125 /* 3x */
     87:    84 =  37 @255 /* 32x */
     88:    89 =  38 @255 /* 13x */
     89:    92 =  39 @250 /* 1x */
     90:    94 =  39 @255 /* 2x */
  Y
  Stroke
     91:    61 =  40 @255 /* 1x */
     92:    66 =  41 @ 84 /* 1x */
     93:    68 =  41 @125 /* 2x */
     94:    72 =  41 @255 /* 27x */
     95:    77 =  41 @100 /* 2x */
  Diag
  Stroke
     96:    53 =  42 @167 /* 1x */
     97:    56 =  42 @255 /* 3x */
     98:    62 =  42 @ 84 /* 2x */
     99:    70 =  43 @100 /* 2x */
    100:    75 =  43 @255 /* 18x */
    101:    82 =  44 @255 /* 5x */
    102:    84 =  44 @250 /* 4x */
    103:    89 =  45 @255 /* 9x */
    104:    94 =  45 @100 /* 2x */

LowerCase
  Black
  X
  Stroke
    105:    61 =  46 @250 /* 1x */
    106:    65 =  46 @250 /* 1x */
    107:    72 =  48 @125 /* 3x */
    108:    75 =  48 @250 /* 3x */
    109:    77 =  48 @255 /* 5x */
    110:    82 =  47 @255 /* 29x */
    111:    88 =  49 @255 /* 10x */
    112:    90 =  49 @250 /* 7x */
    113:    92 =  49 @125 /* 4x */
  Y
  Stroke
    114:    66 =  50 @ 84 /* 1x */
    115:    72 =  50 @255 /* 30x */
    116:    78 =  51 @255 /* 4x */
    117:    81 =  51 @167 /* 1x */
    118:    84 =  50 @ 39 /* 2x */
    119:   127 =  52 @255 /* 2x */
  Diag
  Stroke
    120:    48 =  53 @ 84 /* 1x */
    121:    54 =  53 @255 /* 6x */
    122:    57 =  53 @167 /* 3x */
    123:    60 =  54 @255 /* 3x */
    124:    62 =  54 @250 /* 1x */
    125:    65 =  55 @100 /* 1x */
    126:    68 =  55 @250 /* 3x */
    127:    70 =  55 @255 /* 8x */
    128:    73 =  55 @250 /* 8x */
    129:    77 =  56 @255 /* 8x */
    130:    80 =  56 @167 /* 2x */
    131:    84 =  57 @255 /* 4x */
    132:    87 =  58 @255 /* 3x */
    133:    90 =  58 @167 /* 1x */

Figure
  Black
  X
  Stroke
    134:    50 =  60 @ 56 /* 1x */
    135:    60 =  60 @255 /* 1x */
    136:    72 =  61 @250 /* 1x */
    137:    74 =  61 @255 /* 2x */
    138:    79 =  62 @167 /* 1x */
    139:    82 =  62 @255 /* 3x */
    140:    87 =  59 @255 /* 11x */
    141:    92 =  59 @100 /* 3x */
    142:   189 =  63 @255 /* 2x */
  Y
  Stroke
    143:    64 =  64 @ 63 /* 2x */
    144:    72 =  64 @255 /* 11x */
    145:    74 =  64 @167 /* 4x */
  Diag
  Stroke
    146:    58 =  65 @255 /* 4x */
    147:    65 =  67 @250 /* 1x */
    148:    67 =  67 @255 /* 4x */
    149:    72 =  66 @167 /* 2x */
    150:    75 =  66 @255 /* 9x */
    151:    77 =  66 @250 /* 3x */
    152:    83 =  66 @ 63 /* 1x */

Other
  Black
  X
  Stroke
    153:    52 =  69 @ 42 /* 2x */
    154:    63 =  69 @255 /* 4x */
    155:    68 =  69 @100 /* 1x */
    156:    78 =  70 @ 39 /* 4x */
    157:    84 =  71 @255 /* 6x */
    158:    89 =  71 @125 /* 4x */
    159:    91 =  72 @250 /* 1x */
    160:    94 =  72 @255 /* 6x */
    161:   184 =  73 @255 /* 4x */
  Y
  Stroke
    162:    48 =  75 @ 56 /* 2x */
    163:    56 =  75 @255 /* 4x */
    164:    58 =  75 @250 /* 4x */
    165:    69 =  74 @167 /* 1x */
    166:    72 =  74 @255 /* 9x */
    167:    80 =  76 @125 /* 1x */
    168:    82 =  76 @250 /* 1x */
    169:    84 =  76 @255 /* 2x */
    170:   129 =  77 @ 18 /* 2x */
    171:   156 =  77 @255 /* 3x */
    172:   162 =  77 @ 84 /* 1x */
  Diag
  Stroke
    173:    50 =  78 @ 84 /* 1x */
    174:    52 =  78 @125 /* 1x */
    175:    56 =  78 @255 /* 5x */
    176:    59 =  79 @255 /* 4x */
    177:    61 =  79 @250 /* 1x */
    178:    65 =  81 @125 /* 2x */
    179:    68 =  81 @255 /* 18x */
    180:    74 =  80 @255 /* 12x */
    181:    76 =  80 @250 /* 13x */
    182:    84 =  82 @255 /* 6x */
    183:    87 =  82 @167 /* 1x */



/*Small figures*/
Figure
  SquareHeight
      184:   380 /* figure height */

ASM("SVTCA[Y]")
ASM("CALL[], 184, 89")
     185:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 185, 89")
  RoundHeight
      186:    15 ~   184 @ 34 /* figure height overshoot */
     187:   -15 ~  185 @ 34 /* base line undershoot */


188:    299 







    </extraProgram>

    <extraProgram name="fpgm">
/* Font-program */
/* ACT generated Wed Nov 30 17:14:36 2022 */

FDEF[], 9

/* Set fv to X
       pv perpendicular to italic angle

   CALL[], 9 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 10

/* Set fv to italic angle
       pv to Y

   CALL[], 10 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 16

/* Set fv to X
       pv perpendicular to adjusted italic angle

   CALL[], 16 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 6
RS[]
#PUSH, 7
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 31

/* fn 31 equalizes two cvts below a given ppem size

   CALL[], &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, 31 */

#BEGIN
#PUSHOFF

/* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel &lt;= 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[] /* #samples/pixel not involved */
    MPPEM[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;act ppem size&gt; */

    GT[]
    IF[]
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    POP[] /* ppem Size not involved */
    #PUSH, 64

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt; */

    #PUSH, 4 /* child cvt */
    CINDEX[]
    RCVT[]
    #PUSH, 4 /* parent cvt */
    CINDEX[]
    RCVT[]
    SUB[]
    ABS[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt;, &lt;|[child cvt] - [parent cvt]|&gt; */

    ROLL[]
    MUL[]
    GT[]
    IF[] /* 1 &gt; #samples/pixel * delta cvt */
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 40

/* Set fv to adjusted italic angle
       pv to Y

   CALL[], 40 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 7
RS[]
#PUSH, 6
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 70

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 70 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 71

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, 71 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 72

/* fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 72 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 73

/* fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, 73 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 74

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 74 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 70 */
    #PUSH, 70
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 75

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, &lt;flag&gt;, 75 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 71 */
    #PUSH, 71
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 76

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 76 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 72 */
    #PUSH, 72
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 77

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, &lt;flag&gt;, 77 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 73 */
    #PUSH, 73
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 78

/* apply minimum distance and round &lt;dist&gt; depending on s[2], &lt;code&gt;, and pv
   code = 0: position
   code = 1: distance
   code = 2: delta distance (for fractional inheritance)

   CALL[], &lt;dist&gt;, &lt;code&gt;, 78

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;dist&gt;, &lt;code&gt; */

SWAP[]
DUP[]
#PUSH, 0
LT[]
ROLL[]
ROLL[]
ABS[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

#PUSH, 0, 3 /* code */
CINDEX[]
EQ[]
IF[] /* position */

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 64

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

ELSE[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 1, 3 /* code */
    CINDEX[]
    EQ[]
    IF[] /* distance */
        #PUSH, 5 /* minimum distance */
        RS[]
        MAX[]
    EIF[]

    #PUSH, 79 /* #samples/pixel */
    CALL[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

EIF[]

SWAP[]
#PUSH, 98 /* round to virtual grid */
CALL[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;[|dist|]&gt; */

SWAP[]
POP[]

/* STACK: &lt;negDist&gt;, &lt;[|dist|]&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[dist]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 79

/* depending on rendering environment and pv determine #samples/pixel for rounding etc.

   notice that for PVs other than X or Y, this method will default to X, reflecting the
   bias inherent in the asymmetrical nature of ClearType

   CALL[], 79

   returns the #samples/pixel in 26.6 */

#BEGIN
#PUSHOFF

#PUSH, 8, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 80

/* depending on rendering environment and pv determine actual stroke optimization method

   CALL[], 80

   returns with method on stack (see fn 112 for definition of method) */

#BEGIN
#PUSHOFF

#PUSH, 12, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 81

   /* adjust advance width to compensate for rasterizer's rounding errors 

   CALL[], &lt;rsb&gt;, 81 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rsb&gt; */

SVTCA[X]
DUP[]
GC[O]

/* STACK: &lt;rsb&gt;, &lt;rsb.x&gt; */
#PUSH, 2
RS[]
DUP[]
#PUSH, 4096 /* fract AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* fract AW bit not set */
SWAP[]
#PUSH, 256 /* comp AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* comp AW bit not set */
AND[]
IF[]
    #PUSH, 32
    ADD[]
    FLOOR[]
EIF[]

SCFS[]

#PUSHON
#END
ENDF[]

FDEF[], 83

/* CALL[], &lt;radicand&gt;, 83

   returns with square root of radicand on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;radicand&gt; */

#PUSH, 0, 2
CINDEX[]

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

#WBeginLoop83:

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    GTEQ[]
    #PUSH, WOffset83a
    SWAP[]
    JROT[], (WOffset83a=#WEndLoop83) /* while low &lt;= high */

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    ADD[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

    DUP[]
    DUP[]
    #PUSH, 6 /* radicand */
    CINDEX[]
    SWAP[]
    DIV[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt;, &lt;mid&gt;, &lt;radicand/mid&gt; */

    LT[]
    IF[]

        /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

        ROLL[]
        POP[]
        #PUSH, 1
        ADD[]
        SWAP[]

        /* STACK: &lt;radicand&gt;, &lt;mid+1&gt;, &lt;high&gt; */

    ELSE[]

        DUP[]
        DUP[]
        #PUSH, 6 /* radicand */
        CINDEX[]
        SWAP[]
        DIV[]

        GT[]
        IF[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            SWAP[]
            POP[]
            #PUSH, 1
            SUB[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;mid-1&gt; */

        ELSE[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            ROLL[]
            POP[]
            SWAP[]
            POP[]
            DUP[]

            /* STACK: &lt;radicand&gt;, &lt;mid&gt;, &lt;mid&gt; */

        EIF[]

    EIF[]


    #PUSH, WOffset83b
    JMPR[], (WOffset83b=#WBeginLoop83)

#WEndLoop83:

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

ADD[]
#PUSH, 32
MUL[]
SWAP[]
POP[]

/* STACK: &lt;mid&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 84

/* fn determines current rasterizing environment and stores it in s[2] as follows:
     bit 0 (value   1) = Grey-Scaling
     bit 1 (value   2) = ClearType(tm)
     bit 2 (value   4) = Compatible Width ClearType
     bit 3 (value   8) = Vertical Direction (horizontally striped) ClearType
     bit 4 (value  16) = BGR as opposed to RGB Devices
     bit 5 (value  32) = ClearType on Rapier CE Devices
     bit 6 (value  64) = ClearType with fractional advance widths
     bit 7 (value 128) = ClearType with non-ClearType direction anti-aliasing
     bit 8 (value 256) = ClearType with gray full-pixel

   s[2] is used e.g. in fns 74 through 77

   To test against any combination of these flags, add up the respective values.

   specific to the current rasterizing environment fn stores the following parameters
     s[5] = minimum distance
     s[8] = #samples/pixel in x-direction
     s[9] = #samples/pixel in y-direction
     s[12] = stroke optimization method in x-direction
     s[13] = stroke optimization method in y-direction

   CALL[], 84 */
   /* Version 2.1 20120101 */

#BEGIN
#PUSHOFF
#PUSH,2,0
WS[]            /* s[2] = grey scaling: off (by default) */
#PUSH,35,1      /* 35 = MS Rasterizer version 1.7 */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
LTEQ[]          /* 35 &lt;= version ? */
#PUSH,64,1      /* 64 = highest rasterizer version assigned to MS */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
GTEQ[]          /* 64 &gt;= version ? */
AND[]           /* 35 &lt;= version &amp;&amp; version &lt;= 64 ? */
IF[]            /* if so, we're running MS rasterizer version 1.7 or higher */
  #PUSH,4096,32 /* 4096 = flag returned by GETINFO if grey scaling bit is on */
  GETINFO[]     /* 32 = tell GETINFO to give us the grey scaling bit */
  EQ[]          /* 4096 == flag ? */
  IF[]          /* if so, we're running under grey scaling */
    #PUSH,2,1,2
    RS[]
    ADD[]
    WS[]        /* s[2] += grey scaling: on (by now) */
  EIF[]
  #PUSH,36,1      /* 36 = MS Rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) */
  GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
  LTEQ[]          /* 36 &lt;= version ? (already tested version &lt;= 64) */
  IF[]            /* if so, we're running MS rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) or higher */
    #PUSH,8192,64 /* 8192 = flag returned by GETINFO if ClearTypeTM bit is on */
    GETINFO[]     /* 64 = tell GETINFO to give us the ClearTypeTM bit */
    EQ[]          /* 8192 == flag ? */
    IF[]          /* if so, we're running under ClearTypeTM */
      #PUSH,2,2,2
      RS[]
      ADD[]
      WS[]        /* s[2] += ClearTypeTM: on (by now) */

      #PUSH,36,1    /* 36 = MS Rasterizer version 1.6+ (WinCE) */
      GETINFO[]
      EQ[]
      IF[] /***** we're running Rasterizer v1.6+ for WinCE with ClearType *****/

        #PUSH,2,32,2
        RS[]
        ADD[]
        WS[]        /* s[2] += Rapier CE: on (by now) */
        SVTCA[Y]
        MPPEM[]
        SVTCA[X]
        MPPEM[]
        GT[]
        IF[]
          #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]
        EIF[]

      ELSE[] /***** we're running Rasterizer v1.8 (or higher) for WinXP with ClearType (or Win2k 2000 with ClearType patch) *****/

        #PUSH,16384,128 /* 16384 = flag returned by GETINFO if ClearTypeTM silly aw bit is on */
        GETINFO[]       /* 128 = tell GETINFO to give us the ClearTypeTM silly aw bit */
        EQ[]            /* 16384 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM silly aw */
          #PUSH,2,4,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM silly aw: on (by now) */
        EIF[]

        #PUSH,16384,128 /* 32768 = flag returned by GETINFO if ClearTypeTM in vertical direction bit is on */
        MUL[]           /* Assembler restriction: produce 32768 by multiplying 16384 by 2 (2 in F26.6 is 128) */
        #PUSH,256       /* 256 = tell GETINFO to give us the ClearTypeTM in vertical direction bit */
        GETINFO[]
        EQ[]            /* 32768 == flag ? */
        IF[]            /* if so, we're running ClearTypeTM in vertical direction */
        #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in vertical direction: on (by now) */
        EIF[]

        #PUSH,16384,256 /* 65536 = flag returned by GETINFO if ClearTypeTM in BGR order bit is on */
        MUL[]           /* Assembler restriction: produce 65536 by multiplying 16384 by 4 (4 in F26.6 is 256) */
        #PUSH,512       /* 512 = tell GETINFO to give us the ClearTypeTM in BGR order bit */
        GETINFO[]
        EQ[]            /* 65536 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM in BGR order */
          #PUSH,2,16,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in BGR order: on (by now) */
        EIF[]

        #PUSH,38,1      /* 38 = MS Rasterizer version 1.9 */
        GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
        LTEQ[]          /* 38 &lt;= version ? (already tested version &lt;= 64) */
        IF[]            /* if so, we're running MS rasterizer version 1.9 (Windows Longhorn) or higher */

          #PUSH,16384,512  /* 131072 = flag returned by GETINFO if ClearTypeTM fractional advance widths bit is on */
          MUL[]            /* Assembler restriction: produce 131072 by multiplying 16384 by 8 (8 in F26.6 is 512) */
          #PUSH,1024       /* 1024 = tell GETINFO to give us the ClearTypeTM fractional advance widths bit */
          GETINFO[]
          EQ[]             /* 131072 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM fractional advance widths */
            #PUSH,2,64,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM fractional advance widths: on (by now) */
          EIF[]

          #PUSH,16384,1024 /* 262144 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
          MUL[]            /* Assembler restriction: produce 262144 by multiplying 16384 by 16 (16 in F26.6 is 1024) */
          #PUSH,2048       /* 2048 = tell GETINFO to give us the ClearTypeTM non-ClearType direction anti-aliasing bit */
          GETINFO[]
          EQ[]             /* 262144 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM non-ClearType direction anti-aliasing */
            #PUSH,2,128,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM non-ClearType direction anti-aliasing: on (by now) */
          EIF[]

          #PUSH,40,1      /* 40 = Rasterizer v2.1 Windows 8, SubPixel */
          GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
          LTEQ[]          /* 40 &lt;= version ? (already tested version &lt;= 64) */
          IF[]            /* if so, we're running MS rasterizer version 2.1 (Windows 8) or higher */
            #PUSH,16384,2048 /* 524288 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
            MUL[]            /* Assembler restriction: produce 524288 by multiplying 16384 by 32 (32 in F26.6 is 2048) */
            #PUSH,4096       /* 4096 = tell GETINFO to give us the ClearTypeTM gray full-pixel rendering bit */
            GETINFO[]
            EQ[]             /* 524288 == flag ? */
            IF[]             /* if so, we're running under ClearTypeTM gray full-pixel rendering */
            #PUSH,2,256,2
              RS[]
              ADD[]
              WS[]           /* s[2] += ClearTypeTM gray full-pixel rendering: on (by now) */
            EIF[]
          EIF[]

        EIF[] /* Vista or greater rasterizer */

      EIF[] /* Windows ClearType (Platt) */

    EIF[] /* ClearType Enabled */
  EIF[] /* ClearType enabled rasterizer */
EIF[] /* Microsoft Rasterizer */

/* store rasterizing environment specific parameters */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* for b&amp;w */
  #PUSH, 5, 64, 8, 64, 9, 64, 12, 2, 13, 2
ELSE[]
  #PUSH, 1, 2
  RS[]
  EQ[]
  IF[] /* for grey-scaling */
    #PUSH, 5, 64, 8, 256, 9, 256, 12, 1, 13, 1
  ELSE[]
    #PUSH, 128, 2
    RS[]
    GT[]
    IF[] /* for ClearType */
      #PUSH, 5, 64, 8, 384, 9, 64
    ELSE[] /* for y-anti-aliased ClearType */
      #PUSH, 256, 2
      RS[]
      GT[]
      IF[] /* Gray ClearType */
        #PUSH, 5, 64, 8, 384, 9, 320
      ELSE[] /* Gray ClearType */
        #PUSH, 384, 2
        RS[]
        GT[]
        IF[] /* Gray ClearType */
          #PUSH, 5, 64, 8, 512, 9, 64
        ELSE[] /* Gray ClearType y-anti-aliased */
          #PUSH, 5, 64, 8, 256, 9, 256
        EIF[]
      EIF[]
    EIF[]

    #PUSH,16384,128 /* b&amp;w aw? */
    GETINFO[]
    NEQ[]
    #PUSH,16384,512 /* fract aw? */
    MUL[]
    #PUSH,1024
    GETINFO[]
    NEQ[]
    AND[]
    IF[] /* natural widths */
      #PUSH, 12, 0, 13, 1
    ELSE[] /* compatible or fractional widths */
      #PUSH, 12, 0, 13, 1
    EIF[]

  EIF[]
EIF[]

WS[]
WS[]
WS[]
WS[]
WS[]

#PUSHON
#END
ENDF[]

FDEF[], 85

/* fn 85 equalizes double specified heights below a given ppem size

   CALL[], &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt;, 85 */
   /* Version 2.0 20141201 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt; */

RCVT[] /* pick absolute (square) height */
#PUSH, 2, 78 /* 2 appears to work for heights and weights */
CALL[]
SWAP[]

/* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel = 1 (or less...) */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size ? */
    IF[]

        /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

        #PUSH, 2
        CINDEX[]
        RCVT[] /* pick relative height (overshoot) */
        #PUSH, 1, 78
        CALL[]
        ADD[] /* add overshoot to square height */

        /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size */
    IF[]

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;#samples/pixel&gt; */

      #PUSH, 3 /* rel cvt */
      CINDEX[]
      RCVT[]
      DUP[]
      ABS[]
      ROLL[]
      MUL[]
      #PUSH, 64

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt;, &lt;|[rel cvt]| * #samples/pixel&gt;, &lt;1&gt; */

      GTEQ[] /* #samples/pixel greater than or equal to 1 pixel */
      IF[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          #PUSH, 2, 78
          CALL[]
          ADD[] /* add overshoot to square height */

          /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

      ELSE[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          POP[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

      EIF[]
    ELSE[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;,&lt;#samples/pixel&gt;*/
          POP[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;*/
    EIF[]

EIF[]

/* STACK: &lt;rel cvt&gt;, &lt;[act cvt]&gt; */

WCVTP[] /* make this the round height */
#PUSHON
#END
ENDF[]

FDEF[], 86

/* function to naturally space an accent above or below a base character

   CALL[], &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt;, 86

   convert distance (fUnits) to pixels, round, and space child from parent by result
   this essentially implements the functionality of an MDRP[m&gt;RWh] instrunction for
   composites which lack a suitable implementation of "original" coordinates.
   roundMethod 0, 1, 2, and 3 round down to, to, up to, and to half virtual grid
   function assumes cvt #20 is reserved and can be used temporarily in here... 
   storage 16 contains a threshold ppem size. if zero, ignore the threshold, otherwise
   if less than or equal to threshold, use 64 (26.6) #samples/pixel. */

#BEGIN
#PUSHOFF

/* extract the sign from distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt; */

DUP[]
#PUSH, 0
LT[]
DUP[]
IF[]
    SWAP[]
    NEG[]
ELSE[]
    SWAP[]
EIF[]

/* scale distance using reserved cvt */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|&gt; */

#PUSH, 20, 20 /* reserved cvt */
ROLL[]
WCVTF[]
RCVT[]

/* determine if we are using a size threshold */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|'&gt; */

#PUSH, 16, 16 /* reserved storage for threshold */
RS[]
MPPEM[]
ROLL[]
RS[]
LTEQ[]
AND[] /* threshold must not be zero and &lt;= ppem */
IF[]
    #PUSH, 64 /* #samples/pixel = 1 */
ELSE[]
/* round per round method and #samples/pixel in current pv */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|'&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
EIF[]

SWAP[]
#PUSH, 97, 6 /* round to virtual grid, roundMethod */
MINDEX[]
ADD[]
CALL[] /* round to virtual grid */

/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;[|distance|']&gt; */

/* apply minimum distance, if applicable */
ROLL[]
IF[]
    #PUSH, 5 /* minimum distance */
    RS[]
    MAX[]
EIF[]

/* fold the sign back into distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;negDist?&gt; &lt;[|distance|']&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* move child by [distance'] */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;[distance']&gt; */

SWAP[]
SRP0[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 87

/* fn places an accent &lt;c0&gt; &lt;c1&gt; on top of a base character &lt;p0&gt; &lt;p1&gt;
   fn uses the same constraint model as fn 111 (interpolate median),
   except that for composites there is no concept of original coordinates,
   hence the respective values are provided by the caller as &lt;partialFactor&gt;

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;partialFactor&gt;, 87 */

#BEGIN
#PUSHOFF

/* partialFactor: ((c0 + c1)/2 - p0)/(p1 - p0)
   target median: ((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; + p0' = partialFactor*(p1' - p0')
   source median: (c0' + c1')/2
   primed coordinates are [N]ew, other coordinates are [O]riginal */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;partialFactor&gt;, &lt;p1&gt; */

#PUSH, 3 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; */

SWAP[] /* p0 */
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;targetMedian&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt; */

#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
MD[N]
#PUSH, 3 /* #samples/pixel */
CINDEX[]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt;, &lt;numVirtualPixels&gt; */

ODD[]
DUP[]
ADD[]
#PUSH, 98
ADD[]
CALL[] /* round to (half) virtual grid */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;[targetMedian]&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
DUP[]
SRP0[]
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;c0&gt;, &lt;targetMedian&gt;, &lt;sourceMedian&gt; */

SUB[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 88

/* set up storage locations with the x and y components
   of the italic and adjusted italic angles as follows:

     s[ 6] = adjusted italic angle y
     s[ 7] = adjusted italic angle x
     s[10] = italic angle y
     s[11] = italic angle x

   while rendering in b&amp;w, determines the optimal phase
   for positioning italic strokes

     s[ 4] = optimal phase

   CALL[], &lt;riseCvt&gt;, &lt;runCvt&gt;, 88 */

#BEGIN
#PUSHOFF

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0 /* Use twilight points to calculate stroke angles */
SZPS[]

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt;, &lt;2&gt;, &lt;riseCvt&gt;, &lt;1&gt;, &lt;runCvt&gt; */

SVTCA[X] /* Set twilight point 1 with italic run cvt in x */
MIAP[r]

SVTCA[Y] /* Set twilight point 2 with italic rise cvt in y */
MIAP[r]

#PUSH, 1, 2 /* and let the rasterizer do the math */
SPVTL[r]
GPV[]

#PUSH, 10 /* store the x and y components of the italic angle */
SWAP[]
NEG[]     /* notice that since we're essentially setting the pv to a line  */
WS[]      /* from (runCvt,0) to (0,riseCvt), the calculcated pv will be    */
#PUSH, 11 /* proportional to (runCvt,0) - (0,riseCvt) = (runCvt,-riseCvt). */
SWAP[]    /* Hence we have to mirror the result at the base line, which is */
WS[]      /* done by flipping (negating) the sign of the y component here. */

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

SVTCA[X] /* same for the adjusted italic angle */
MIAP[R]  /* except to round the twilight point in x... */

SVTCA[Y]
MIAP[R]  /* ...and in y */

#PUSH, 1, 2
SPVTL[r]
GPV[]

#PUSH, 6
SWAP[]
NEG[]    /* same neg as above */
WS[]
#PUSH, 7
SWAP[]
WS[]

#PUSH, 1 /* restore graphics state */
SZPS[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* running b&amp;w? */

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */
    /* determine adjusted run' = run*[rise]/rise */

    RCVT[]
    SWAP[]
    RCVT[]
    DUP[]
    RTG[]
    ROUND[Bl]
    ROLL[]
    MUL[]
    SWAP[]
    DIV[]

    /* STACK: &lt;run'&gt; */
    /* determine phase = (run' - [run'])/2 = half the rounding error */

    DUP[]
    DUP[]
    #PUSH, 64
    LT[]
    IF[]
        CEILING[] /* optimize for "minimum italic angle" */
    ELSE[]
        FLOOR[] /* optimize for minimal number of jaggies */
    EIF[]
    SUB[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;phase&gt; */
    /* for its use on bottom italic edge, determine complement to full pixel */

    #PUSH, 64
    SWAP[]
    SUB[]

    /* and store in s[4] */

    #PUSH, 4
    SWAP[]
    WS[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

    #PUSH, 4, 0
    WS[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]
SVTCA[X]

#PUSHON
#END
ENDF[]

FDEF[], 89

/* function rounds &lt;cvt&gt; depending on rendering environment and pv

   CALL[], &lt;cvt&gt;, 89 */

#BEGIN
#PUSHOFF

DUP[]
RCVT[]
#PUSH, 0, 78 /* roundDist */
CALL[]
WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 90

/* below &lt;ppem&gt;: make both children the same as the (averaged) parent cvt
   at and above: calculate child cvt &lt;ch0&gt; as &lt;fraction&gt; of child cvt &lt;ch1&gt;

   CALL[], &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt;, 90 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    DUP[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]
    DUP[]
    ROLL[]
    ROLL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt;, &lt;ch1&gt;, &lt;[ch1]&gt; */

    WCVTP[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt; */

    DUP[]
    #PUSH, 64, 4
    MINDEX[]
    SUB[]
    MUL[]
    SUB[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;[ch1] - [ch1]*(1-fraction)&gt; */

    WCVTP[]
    POP[] /* parent not involved */

    /* STACK: */

ELSE[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;ch1&gt; */

    ROLL[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;ch0&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    DUP[]
    ROLL[]
    SWAP[]

    /* STACK: &lt;ch0&gt;, &lt;[p]&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    WCVTP[]
    WCVTP[]

    /* STACK: */

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 91

/* below &lt;ppem&gt;: make child cvt &lt;ch&gt; the same as parent cvt &lt;p&gt;
   at and above: calculate child cvt &lt;ch&gt; as &lt;fraction&gt; of parent cvt &lt;p&gt;

   CALL[], &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt;, 91 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    RCVT[]
    DUP[]
    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p]&gt;, &lt;[p]&gt;, &lt;fraction&gt; */

    #PUSH, 64
    SUB[]
    MUL[]
    ADD[]

    /* STACK: &lt;ch&gt;, &lt;[p] + [p]*(fraction - 1)&gt; */

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    RCVT[]

    /* STACK: &lt;ch&gt;, [p] */

EIF[]

#PUSH, 1, 78 /* roundDist */
CALL[]
WCVTP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 92

/* function to calculate a child cvt &lt;ch&gt;
   as a &lt;blend&gt; of two parent cvts &lt;p0&gt;, &lt;p1&gt;

   CALL[], &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt;, 92 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt; */

SWAP[]
RCVT[]
DUP[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p1&gt;, &lt;[p0]&gt;, &lt;[p0]&gt; */

ROLL[]
RCVT[]

SWAP[]
SUB[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

DUP[]
ABS[]
#PUSH, 64
LTEQ[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s)?&gt; */

#PUSH, 4
CINDEX[]
DUP[]
#PUSH, 0
GTEQ[]
SWAP[]
#PUSH, 64
LTEQ[]
AND[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64?&gt; */

#PUSH, 64, 79 /* #samples/pixel */
CALL[]
EQ[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64 &amp;&amp; rounding to full pixel?&gt; */

IF[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

    ROLL[]
    GPV[]
    ABS[]
    SWAP[]
    ABS[]
    SWAP[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt;, &lt;|pv.x|&gt;, &lt;|pv.y|&gt; */

    GTEQ[] /* pv closer to x? */
    IF[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p1: blend' := 1 - (1 - blend)² */

        #PUSH, 64, 64
        ROLL[]
        SUB[]
        DUP[]
        MUL[]
        SUB[]

        /* &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;1 - (1 - blend)²&gt; */

    ELSE[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p0: blend' := blend² */

        DUP[]
        MUL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend²&gt; */

    EIF[]

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */
    /* use unbiased blend */

    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

EIF[]

/* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

MUL[]
#PUSH, 2, 78 /* roundDist */
CALL[]
ADD[]

/* STACK: &lt;ch&gt;, &lt;[ch]&gt; */

WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 93

/* fn sets vectors to X (used in calculated calls)

   CALL[], 93 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSHON
#END
ENDF[]

FDEF[], 94

/* fn sets vectors to Y (used in calculated calls)

   CALL[], 94 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 95

/* Set fv to X, pv perpendicular to italic angle (used in calculated calls)

   CALL[], 95 */

#BEGIN
#PUSHOFF
SFVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 96

/* Set fv to italic angle, pv to Y (used in calculated calls)

   CALL[], 96 */

#BEGIN
#PUSHOFF
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
SPVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 97

/* round down to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 97

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */
/* upscale argument by #samples/pixel */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[] /* round down to super grid */

/* Downscaling uses a DIV[] operation, which is implemented as floor(numerator/denominator).
   For round(numerator/denominator) instead, add ½ denominator to numerator before dividing.
   But since the division in 26.6 has to multiply the numerator by 2^6 (64) before dividing,
   we have to divide said ½ denominator by 64 before adding, hence the 8192 (= 128 in 26.6). */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 98

/* round to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 98

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

#PUSH, 32 /* round to super grid */
ADD[]
FLOOR[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 99

/* round up to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 99

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

CEILING[] /* round up to super grid */

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 100

/* round to half virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 100

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[]
#PUSH, 32 /* round to half super grid */
ADD[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 101

/* determine actual distance to be used for emulating MDRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 101

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 102

/* determine actual distance to be used for emulating MDRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 102

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 103

/* determine actual distance to be used for emulating MIRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 103

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 104

/* determine actual distance to be used for emulating MIRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 104

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 105

/* emulate MDRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 105 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 106

/* emulate MDRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 106 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 107

/* emulate MIRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 107 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 103 /* resActDist, cvt, noMinDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 108

/* emulate MIRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 108 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 104 /* resActDist, cvt, minDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 109

/* fn symmetrically constrains a stroke &lt;p&gt;, &lt;c&gt; with &lt;cvt&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 109 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */
/* determine old median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* lock parent */

#PUSH, 4 /* p */
CINDEX[]
MDAP[r]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* link child */

#PUSH, 4 /* p */
CINDEX[]
#PUSH, 4 /* c */
CINDEX[]
#PUSH, 4 /* cvt */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt; */
/* determine new median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt;, &lt;2*median'&gt; */

SUB[]
#PUSH, 128
DIV[] /* floor to 1/64 for now */

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;deltaMedian&gt; */

DUP[]
ROLL[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]
SWAP[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 110

/* calculate offset for emulation of interpolation of median of
   &lt;c0&gt; and &lt;c1&gt; between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 110

   returns with offset on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
GC[O]
#PUSH, 3 /* c1 */
CINDEX[]
GC[O]
ADD[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
GC[O]
#PUSH, 128
MUL[]
SUB[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1 - 2*p0&gt; */

#PUSH, 2 /* p1 */
CINDEX[]
#PUSH, 6 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')&gt; */

SWAP[] /* p1 */
#PUSH, 5 /* p0 */
CINDEX[]
MD[O]
#PUSH, 128
MUL[]

/* prevent inadvertent divide-by-zero e.g. on non-spacing glyphs */
DUP[]
IF[]
    DIV[]
ELSE[]
    POP[]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')/(2*(p1 - p0))&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;(c0'' + c1'')/2&gt; */

ROLL[] /* c0 */
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;(c0'' + c1'')/2&gt;, &lt;(c0' + c1')/2&gt; */

SUB[]

/* STACK: &lt;offset&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 111

/* emulate interpolation of median of &lt;c0&gt; and &lt;c1&gt;
   between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 111 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* p1 */
MINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt; */

DUP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt;, &lt;offset&gt; */

ROLL[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt;, &lt;c1&gt;, &lt;offset&gt; */

MSIRP[m]

SWAP[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 112


/* adjust (unrounded) stroke phase to target phase according to &lt;method&gt;

   method 0: round to nearest virtual pixel
   method 1: apply method 2 below 2 pixel wide strokes else method 0
   method 2: optimize for max #black pixels
   method 3: optimize for one edge aligned

   right?: boolean indicating a left (false) or right (true) stroke)

   CALL[], &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt;, 112

   returns with (rounded) adjusted phase on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt; */

SWAP[]

DUP[]
#PUSH, 1
EQ[]
IF[]

    /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;right?&gt;, &lt;method&gt; */
    /* replace method depending on stroke weight */

    POP[]
    #PUSH, 2 /* weight */
    CINDEX[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    #PUSH, 128
    LT[]
    DUP[]
    ADD[]
EIF[]

DUP[]
ADD[]
ADD[]

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method' = 2*method + right&gt; */

DUP[]
#PUSH, 1
LTEQ[]
IF[] /* just round to nearest virtual pixel */

    POP[]
    POP[]

    /* STACK: &lt;phase&gt; */

ELSE[]
    DUP[]
    #PUSH, 5
    LTEQ[]
    IF[] /* optimize for max #black pixels */

        POP[]

        /* STACK: &lt;phase&gt;, &lt;weight&gt; */

        DUP[]
        FLOOR[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

        #PUSH, 64
        SWAP[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

        #PUSH, 0, 3 /* phase */
        CINDEX[]
        LT[]
        #PUSH, 3 /* phase */
        CINDEX[]
        #PUSH, 3 /* 1-fractWeight */
        CINDEX[]
        LT[]
        AND[]
        IF[] /* if 0 &lt; phase &lt; 1-fractWeight then need to adjust phase */

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            DUP[]
            #PUSH, 3
            CINDEX[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt;, &lt;1-fractWeight-phase&gt; */

            ROLL[]
            GTEQ[]
            IF[] /* error from phase to 1-fractWeight &gt;= error from 0 to phase */
                POP[]
                #PUSH, 0 /* target 0 as phase */
            EIF[]
            /* else target 1-fractWeight as phase, which is what's left on stack */

        ELSE[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            POP[]

        EIF[]

    ELSE[] /* optimize for one edge aligned */

        /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method'&gt; */

        #PUSH, 7
        EQ[]
        IF[] /* right flush */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            DUP[]
            FLOOR[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

            NEG[]
            SWAP[]
            POP[]

        ELSE[] /* left flush (and default) */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            POP[]
            POP[]
            #PUSH, 0

        EIF[]

    EIF[]

EIF[]

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: phase */

#PUSHON
#END
ENDF[]

FDEF[], 113

/* fn calculates delta phase for optimal position of
   stroke bordered by &lt;p&gt; and &lt;c&gt; according to &lt;method&gt;
   (see fn 112 for definition of method)

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, 113

   returns with delta phase in interval ]-½,+½] on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt; */

    /* use sequence of parameters &lt;p&gt; and &lt;c&gt; to determine if this is
       a "left" stroke (in which case we may add grey to the right), or
       a "right" stroke (in which case we may add grey to the left) */

#PUSH, 2 /* c */
CINDEX[]
#PUSH, 4 /* p */
CINDEX[]
MD[O]
#PUSH, 0
GTEQ[]
IF[]
    #PUSH, 0 /* "left" stroke */
ELSE[]
    ROLL[]
    ROLL[]
    SWAP[]
    ROLL[]
    #PUSH, 1 /* "right" stroke */
EIF[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt; */

#PUSH, 4 /* p */
CINDEX[]
GC[N]
DUP[]
FLOOR[]
SUB[]
DUP[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt; */

#PUSH, 5 /* c */
MINDEX[]
#PUSH, 6 /* p */
MINDEX[]
MD[N]

/* STACK: &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt;, &lt;weight&gt; */

#PUSH, 5 /* method */
MINDEX[]
#PUSH, 5 /* right? */
MINDEX[]
#PUSH, 112 /* adjust to target stroke phase */
CALL[]

/* STACK: &lt;source phase&gt;, &lt;target phase&gt; */

SWAP[]
SUB[]

/* STACK: &lt;delta phase&gt; */
/* minimze phase into interval ]-½,+½] */

NEG[]
#PUSH, 32
ADD[]
DUP[]
FLOOR[]
SUB[]
#PUSH, 32
SUB[]
NEG[]

#PUSHON
#END
ENDF[]

FDEF[], 114

/* emulate MIAP instruction with rendering environment specific rounding

   CALL[], &lt;c&gt;, &lt;cvt&gt;, 114 */

#BEGIN
#PUSHOFF

/* STACK: &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 2 /* c */
CINDEX[]
GC[N]
DUP[]

/* STACK: &lt;c&gt;, &lt;cvt&gt;, &lt;wNat&gt;, &lt;wNat&gt; */

ROLL[]
DUP[]
#PUSH, 0
LT[]
IF[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;cvt&gt; */

    POP[]

    /* cvt &lt; 0 (no cvt used) =&gt; w = wNat */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

    #PUSH, 2, 78 /* roundDist */
    CALL[]

ELSE[]

    RCVT[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;wCvt&gt; */
    /* no cvt cut-in test (for eventual support of automatic small caps, superiors, and inferiors), pop wNat to use wCvt */

    SWAP[]
    POP[]

    /* leave value as rounded by cpgm */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

EIF[]

SUB[]
NEG[]

/* STACK: &lt;c&gt;, &lt;wDelta&gt; */

#PUSH, 2
CINDEX[]
SRP0[]

MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 115

/* interpolates a point &lt;p&gt; in &lt;dirFlag&gt; between points &lt;lsb&gt; and &lt;rsb&gt;
   dirFlag: postRoundFlag*8 + dir
   dir: X = 0, Y = 1, X/ = 2, Y/ = 3, ...

   depending on rendering environment and pv may optimise point position

   CALL[], &lt;dirFlag&gt;, &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 115 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dirFlag&gt;, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt; */
/* separate postRoundFlag from dir */

#PUSH, 4 /* dirFlag */
MINDEX[]
DUP[]
#PUSH, 512
DIV[]
DUP[]
#PUSH, 512
MUL[]
ROLL[]
SWAP[]
SUB[]

/* STACK:, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

DUP[]
#PUSH, 93 /* setV */
ADD[]
CALL[]

/* STACK: &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
SRP1[]
ROLL[] /* p1 */
SRP2[]
ROLL[] /* p */
DUP[]
IP[]

/* STACK: &lt;p0&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt;, &lt;p&gt; */

ROLL[] /* postRoundFlag */
IF[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    #PUSH, 93, 4096, 4 /* setV, 64, dir */
    MINDEX[]
    MUL[]
    ODD[]
    ADD[]
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    SWAP[]
    POP[]
    DUP[] /* p */
    SRP0[]
    DUP[]
    GC[N]
    DUP[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    SWAP[]
    SUB[]

    /* STACK: &lt;p&gt;, &lt;[p.c]-p.c&gt; */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    SWAP[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    DUP[]
    ROLL[]
    DUP[] /* p0 */
    SRP0[]
    MD[N]

    #PUSH, 2, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;[p.dist]&gt; */

EIF[]

MSIRP[M]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 116

/* constrains a stroke in &lt;dir&gt;, defined by parent &lt;p&gt; and child &lt;c&gt;,
   and by cvt &lt;cvt&gt;, and interpolates it between points &lt;gp0&gt; and &lt;gp1&gt;
   dir: X = 0, Y = 1, X/ = 2
   sof: (stroke optimization flags ||, |&lt;, and &gt;| ) don't = 0, do = 1, leftBias = 2, rightBias = 3

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt;, 116 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 9 /* setV, 64, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* constrain stroke */

#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* cvt */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 7 /* setV, dir */
CINDEX[]
ADD[]
CALL[]

#PUSH, 5 /* gp0 */
CINDEX[]
#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* gp1 */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 8 /* setV, 64, dir */
MINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

DUP[]
#PUSH, 0
GT[]
IF[] /* optimize stroke position */

    #PUSH, 80
    CALL[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 5 /* p */
    CINDEX[]
    #PUSH, 5 /* c */
    CINDEX[]
    #PUSH, 7 /* p */
    CINDEX[]
    #PUSH, 7 /* c */
    CINDEX[]
    #PUSH, 5 /* som */
    CINDEX[]
    #PUSH, 113 /* get delta phase for optimal stroke position */
    CALL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 0
    GT[]
    #PUSH, 2 /* sof */
    CINDEX[]
    #PUSH, 1
    GT[]
    AND[]
    IF[]

        /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
        /* determine total side-bearing space to see if we need to bias the black body */

        #PUSH, 4 /* p */
        CINDEX[]
        #PUSH, 6 /* gp0 */
        CINDEX[]
        MD[N]
        #PUSH, 3 /* gp1 */
        CINDEX[]
        #PUSH, 5 /* c */
        CINDEX[]
        MD[N]
        ADD[]
        DUP[]
        #PUSH, 64
        GT[]
        IF[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* enough total side-bearing space left, leave it alone */
            POP[]

        ELSE[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* 1 pixel or less total side-bearing space left */

            #PUSH, 0
            GT[]
            IF[]

                /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                /* any total side-bearing space left at all */

                DUP[]
                #PUSH, 2
                EQ[]
                IF[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 7 /* gp0 */
                    CINDEX[]
                    #PUSH, 7 /* p */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                ELSE[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 4 /* gp1 */
                    CINDEX[]
                    #PUSH, 6 /* c */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                EIF[]

            EIF[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 117

/* fn tries to place and constrain two strokes &lt;p0,c0,cvt0&gt; and &lt;p1,c1,cvt1&gt;
   between grandparents &lt;gp0&gt; and &lt;gp1&gt; in direction &lt;dir&gt;
   dir: X = 0, Y = 1, X/ = 2
   X/ (italic) is not yet implemented; to do so properly will need to factor
   the italic phase optimization part out of fn 131 and make it available to
   this fn.   

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, 117 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */

#PUSH, 93, 4096, 11 /* setV, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* interpolate black body */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 12 /* gp0 */
CINDEX[]
#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 8 /* gp1 */
CINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]
#PUSH, 4
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke0 */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke1 */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt; */

#PUSH, 80
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
/* determine phase0 for optimal position of stroke0 */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 3 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* forward to stroke1 position */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 3 /* phase0 */
CINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* determine phase1 for optimal position of stroke1 */

DUP[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 5 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* undo forwarding to stroke1 position */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 4 /* phase0 */
CINDEX[]
NEG[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* determine double average phase error */

#PUSH, 2 /* phase0 */
CINDEX[]
#PUSH, 2 /* phase1 */
CINDEX[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

DUP[]
#PUSH, 64
GTEQ[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
    /* double average phase error &gt;= 1 pixel, correct to the left */

    POP[]
    #PUSH, 64
    SUB[]
    SWAP[]
    #PUSH, 64
    SUB[]
    SWAP[]

ELSE[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

    #PUSH, -64
    LT[]
    IF[]

        /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
        /* double average phase error &lt; -1 pixel, correct to the right */

        #PUSH, 64
        ADD[]
        SWAP[]
        #PUSH, 64
        ADD[]
        SWAP[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase0 to stroke0 */

#PUSH, 8 /* p0 */
CINDEX[]
#PUSH, 8 /* c0 */
CINDEX[]
#PUSH, 4 /* phase0 */
MINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase1 to stroke1 */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
ROLL[] /* phase1 */
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

DUP[]
#PUSH, 0
GT[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
    /* determine total side-bearing space to see if we need to bias the black body */

    #PUSH, 6 /* p0 */
    CINDEX[]
    #PUSH, 8 /* gp0 */
    CINDEX[]
    MD[N]
    #PUSH, 3 /* gp1 */
    CINDEX[]
    #PUSH, 5 /* c1 */
    CINDEX[]
    MD[N]
    ADD[]
    DUP[]
    #PUSH, 64
    GT[]
    IF[]

        /* enough total side-bearing space left, leave it alone */
        POP[]

    ELSE[]

        /* 1 pixel or less total side-bearing space left */
        #PUSH, 0
        GT[]
        IF[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* any total side-bearing space left at all, move black-body flush left and start over */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 11 /* gp0 */
            CINDEX[]
            #PUSH, 11 /* p0 */
            CINDEX[]
            MD[N]
            #PUSH, 4
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke0 forwarding phase0 to stroke1 */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 10 /* p0 */
            CINDEX[]
            #PUSH, 10 /* c0 */
            CINDEX[]
            #PUSH, 7 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 4 /* apply to both strokes */
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke1 */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, 5 /* c1 */
            CINDEX[]
            #PUSH, 7 /* p1 */
            CINDEX[]
            #PUSH, 5 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 2 /* apply to second stroke only */
            SLOOP[]
            SHPIX[]

        ELSE[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* no total side-bearing space left, move stroke1 left by 1 pixel */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, -64, 2
            SLOOP[]
            SHPIX[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 118

/* fn to set pv perpendicular to p1 and c0' such that distance
   c0'&lt;---p0 measures cvt or natural distance if cvt = -1.
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt;, 118 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
SDPVTL[R]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
ROLL[] /* cvt */
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 101 /* resActDist, noCvt, noMinDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]
ABS[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
SPVTL[r]
#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
MD[N]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
/* test if solution exists at all */

DUP[]
DUP[]
MUL[]
#PUSH, 3 /* w */
CINDEX[]
DUP[]
MUL[]
LTEQ[]
#PUSH, 0, 3 /* d */
CINDEX[]
EQ[]
OR[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt;, &lt;d² &lt;= w² or d = 0?&gt; */

IF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution doesn't exist, hence prepare to bail out */

    POP[]
    POP[]
    SWAP[]
    POP[]
    SPVTL[R]

ELSE[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution exists, hence continue computation */

    DUP[]
    MUL[]
    #PUSH, 2 /* w */
    CINDEX[]
    DUP[]
    MUL[]
    SUB[]
    DUP[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d² - w²&gt;, &lt;d² - w²&gt; */

    #PUSH, 83 /* sqrt */
    CALL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d² - w²&gt;, &lt;sqrt(d² - w²)&gt; */

    ROLL[] /* w */
    MUL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;d² - w² =: dx&gt;, &lt;w·sqrt(d² - w²) =: dy&gt; */

    #PUSH, 5 /* p1 */
    CINDEX[]
    #PUSH, 5 /* p0 */
    CINDEX[]
    SDPVTL[R]
    #PUSH, 4 /* p0 */
    CINDEX[]
    #PUSH, 4 /* c0 */
    MINDEX[]
    MD[O]

    #PUSH, 0
    LT[]
    IF[]
        NEG[] /* dy */
    EIF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt; */

    #PUSH, 4 /* p1 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    #PUSH, 5 /* p0 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt;, &lt;p0.x&gt;, &lt;p0.y&gt; */

    #PUSH, 0 /* enter twilight zone */
    SZPS[]

    SVTCA[Y]
    #PUSH, 0
    SWAP[]
    SCFS[]
    SVTCA[X]
    #PUSH, 0
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    SVTCA[Y]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]
    SVTCA[X]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt; */

    SWAP[]

    /* STACK: &lt;dy&gt;, &lt;dx&gt; */

    #PUSH, 2, 0, 1
    SFVTL[r]
    SWAP[]
    SHPIX[]

    /* STACK: &lt;dy&gt; */

    #PUSH, 2, 0, 1
    SFVTL[R]
    SWAP[]
    SHPIX[]

    /* STACK: */

    #PUSH, 2, 1
    SPVTL[R]

    #PUSH, 1 /* leave twilight zone */
    SZPS[]

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 119

/* align c with p unless fv is perpendicular to pv
   fv and pv assumed to be set prior to calling fn 119
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p&gt;, &lt;c&gt;, 119 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
SRP0[]

/* STACK: &lt;c&gt; */

GFV[]
GPV[]

/* STACK: &lt;c&gt;, &lt;fv.x&gt;, &lt;fv.y&gt;, &lt;pv.x&gt;, &lt;pv.y&gt; */

ROLL[]
MUL[]
SWAP[]
ROLL[]
MUL[]
ADD[]
ABS[]

/* STACK: &lt;c&gt;, &lt;|pv.y*fv.y + pv.x*fv.x|&gt; */

#PUSH, 16384, 1024
MUL[]

/* the above dot product multiplies two 2.14 numbers in 26.6 arithmetic yielding a 2.22 number (2^14 * 2^14 / 2^6 = 2^22)
   like the rasterizer, we're comparing this number to 1/16: |fv1·pv| &lt; 1/16 means fv1 is within ±arcsin(1/16) or ±3.5833° perpendicular to pv
   in 2.22 format 1/16 is 2^18, but since the assembler won't allow us to push 2^18 = 262144, we make up this number as a multiplication
   the multiplication, in turn, is again done in 26.6 format, hence we multiply 16384 with 1024 (2^14 * 2^10 / 2^6 = 2^18) */

LT[]
IF[]

    /* fv is approximately perpendicular to pv which by itself is perpendicular
       to a line from p to c' (with c' the twilight point 2 computed in fn 118),
       i.e. fv is approximately parallel to line from p to c'. Given the usage
       of fn 119 this means that fv is approximately coincident with said line,
       or c is approximately aligned already, hence simply touch the point, but
       without involving the pv */

    /* STACK: &lt;c&gt; */

    #PUSH, 0
    SHPIX[]

ELSE[]

    /* STACK: &lt;c&gt; */

    ALIGNRP[]

EIF[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 120

/* support to ResX|YDDist and ResX|YDLink where fv0 and fv1 are x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 120 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 9 /* p0 */
CINDEX[]
#PUSH, 9 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 121

/* support to ResX|YDDist and ResX|YDLink where fv0 is x or y while fv1 is to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 121 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

ROLL[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 122

/* support to ResX|YDDist and ResX|YDLink where fv0 is to-line while fv1 is x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt;, 122 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

ROLL[]
ROLL[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 123

/* support to ResX|YDDist and ResX|YDLink where both fv0 and fv1 are to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 123 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 8 /* p1 */
CINDEX[]
#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 11 /* c0 */
CINDEX[]
#PUSH, 9 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 4 /* fv0.p0 */
MINDEX[]
#PUSH, 4 /* fv0.p1 */
MINDEX[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 124

/* determine on which side of edge p0-&gt;p1 is c
   by calculating vector product (c - p0) ^ (p1 - p0)

   CALL[], &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 124

   returns with vector product on stack
   if vector product &lt; 0 then c is on the left of p0-&gt;p1
   if vector product &gt; 0 then c is on the right of p0-&gt;p1
   else c is exactly on p0-&gt;p1 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt; */

SPVTCA[X]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
MD[O]
#PUSH, 4 /* p0 */
CINDEX[]
#PUSH, 3 /* p1 */
CINDEX[]
MD[O]

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, &lt;a.x&gt;, &lt;b.x&gt; */

SPVTCA[Y]
#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* c */
MINDEX[]
MD[O]
#PUSH, 5 /* p0 */
MINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
MD[O]

/* STACK: &lt;a.x&gt;, &lt;b.x&gt;, &lt;a.y&gt;, &lt;b.y&gt; */

#PUSH, 4 /* a.x */
MINDEX[]
MUL[]

ROLL[] /* b.x */
ROLL[] /* a.y */
MUL[]

SUB[]

/* STACK: &lt;b.y*a.x - b.x*a.y&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 125

/* fn interpolates a pair of diagonal links between grand-parents gp0 and gp1 along pv
   pv: X = 0, Y = 1, X/ = 2; fv0 and fv1: x and y components in 2.14

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, 125 */

#BEGIN
#PUSHOFF

/* interpolate parents between grand-parents along pv */
/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 93, 14 /* pv */
CINDEX[]
ADD[]
CALL[]

#PUSH, 12 /* gp0 */
MINDEX[]
SRP1[]
#PUSH, 5 /* gp1 */
MINDEX[]
SRP2[]

#PUSH, 10 /* p0 */
CINDEX[]
IP[]
#PUSH, 7 /* p1 */
CINDEX[]
IP[]

/* determine if this is a crisscrossed stroke */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 124 /* c0 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 8 /* c1 */
CINDEX[]
#PUSH, 10 /* p1 */
CINDEX[]
#PUSH, 124 /* c1 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

EQ[]
IF[]

    /* both childern on same side of parent edge p0&gt;-&gt;p1
       hence re-align children with parents perp to dpv. */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    SDPVTL[R]

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 10 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 9 /* c0 */
    CINDEX[]
    MDRP[m&lt;rBl]

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 7 /* p1 */
    CINDEX[]
    SRP0[]
    #PUSH, 6 /* c1 */
    CINDEX[]
    MDRP[m&lt;rBl]

ELSE[]

    /* childern on opposite sides of "parent edge" p0&gt;-&gt;p1
       hence re-align children with parents per method for crisscrossed strokes */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    #PUSH, 11 /* c0 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt0, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 10 /* c0 */
    CINDEX[]
    #PUSH, 119
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 8 /* p1 */
    CINDEX[]
    #PUSH, 8 /* c1 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt1, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;p0&gt;, &lt;c1&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 7 /* c1 */
    CINDEX[]
    #PUSH, 119
    CALL[]

EIF[]

/* determine pre-link medians, measuring perpendicularly to p0-&gt;p1 */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

/* links */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 6 /* fv0.x */
CINDEX[]
#PUSH, 6 /* fv0.y */
CINDEX[]
SFVFS[]

#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 12 /* c0 */
CINDEX[]
#PUSH, 12 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 4 /* fv1.x */
CINDEX[]
#PUSH, 4 /* fv1.y */
CINDEX[]
SFVFS[]

#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 9 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* subtract post-link medians from pre-link ones */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

SWAP[]

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

SWAP[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

/* finally move points by respective deltas */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta0&gt;, &lt;delta1&gt; */

#PUSH, 1, 12 /* pv */
CINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 10 /* p0 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 3 /* delta0 */
CINDEX[]
MSIRP[m]

#PUSH, 6 /* fv0.x */
MINDEX[]
#PUSH, 6 /* fv0.y */
MINDEX[]
SFVFS[]

#PUSH, 7 /* c0 */
MINDEX[]
DUP[]
SRP0[]
ROLL[] /* delta0 */
MSIRP[m]

/* STACK: &lt;pv&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta1&gt; */

#PUSH, 1, 7 /* pv */
MINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 5 /* p1 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 2 /* delta1 */
CINDEX[]
MSIRP[m]

ROLL[] /* fv0.x */
ROLL[] /* fv0.y */
SFVFS[]

SWAP[] /* c1 */
DUP[]
SRP0[]
SWAP[] /* delta1 */
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 126

/* glue code to fn 125 where both fv0 and fv1 are x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 126 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[] /* fv0 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 127

/* glue code to fn 125 where fv0 is to line and fv1 is x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt;, 127 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt; */

ROLL[] /* fv0.0 */
ROLL[] /* fv0.1 */
SFVTL[r]
GFV[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 128

/* glue code to fn 125 where fv0 is x or y and fv1 is to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 128 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

SFVTL[r]

#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

GFV[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 129

/* glue code to fn 125 where both fv0 and fv1 are to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 129 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

#PUSH, 4 /* fv0.0 */
MINDEX[]
#PUSH, 4 /* fv0.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 4 /* fv1.0 */
MINDEX[]
#PUSH, 4 /* fv1.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 130

/* extrapolate x-coordinate of &lt;p&gt; to base line along italic angle
   returns with extrapolated x-coordinate on stack

   CALL[], &lt;p&gt;, 130 */

#BEGIN
#PUSHOFF

DUP[]
SVTCA[X]
GC[N]
SWAP[]
SVTCA[Y]
GC[N]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt; */

#PUSH, 10 /* rise */
RS[]
#PUSH, 11 /* run */
RS[]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt;, &lt;rise&gt;, &lt;run&gt; */

ROLL[]
MUL[]
SWAP[]
DIV[]
SUB[]

/* STACK: &lt;p.x - p.y*run/rise&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 131

/* constrains an italic stroke, defined by parents &lt;p0&gt; and &lt;p1&gt;, by
   children &lt;c0&gt; and &lt;c1&gt;, and by cvts &lt;cvt0&gt; and &lt;cvt1&gt;, and inter-
   polates it between points &lt;lsb&gt; and &lt;rsb&gt;

   for b&amp;w stroke additionally optimizes the resulting pixel pattern

   CALL[], &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, 131 */

#BEGIN
#PUSHOFF

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */

#PUSH, 9 /* pv perp italic, fv X */
CALL[]

/* lock parent edge */

#PUSH, 6 /* p0 */
CINDEX[]
MDAP[r]

#PUSH, 5 /* p1 */
CINDEX[]
RDTG[]
MDRP[m&lt;RBl]

/* link child edge */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 3 /* cvt1 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

RTG[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* interpolate median of p0 and c0 between lsb and rsb */

#PUSH, 8 /* lsb */
CINDEX[]
#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 10 /* rsb */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* if the two actual parent-&gt;child distances round to the same stroke weight */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;[dist0]&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;[dist0]&gt;, &lt;[dist1]&gt; */

EQ[]
IF[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* adjust median of p1 and c1 in parallel */

    RDTG[]
    #PUSH, 4 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 3 /* p1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 2 /* c0 */
    CINDEX[]
    SRP0[]
    #PUSH, 1 /* c1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 5 /* rsb */
    MINDEX[]
    POP[]
    #PUSH, 5 /* lsb */
    MINDEX[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

ELSE[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* interpolate median of p1 and c1 between lsb and rsb independently */

    #PUSH, 6 /* lsb */
    MINDEX[]
    #PUSH, 4 /* p1 */
    CINDEX[]
    #PUSH, 3 /* c1 */
    CINDEX[]
    #PUSH, 8 /* rsb */
    MINDEX[]
    #PUSH, 111 /* interpolate median */
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

EIF[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
/* for b&amp;w only optimize pixel pattern */

#PUSH, 0, 2
RS[]
EQ[]
IF[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* extrapolate c0 to base line */

    RDTG[]
    #PUSH, 2 /* c0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* extrapolate p0 to base line */

    #PUSH, 5 /* p0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* get parentPhase from extrapolated x-coordinate */

    DUP[]
    DUP[]
    ROUND[Bl]
    SUB[]

    #PUSH, 4 /* targetPhase */
    RS[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;parentPhase&gt;, &lt;targetPhase&gt; */
    /* shifting parent edge by deltaPhase optimizes stepping pattern on parent edge */

    SVTCA[X]
    SWAP[]
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* minimize the positioning error by mapping deltaPhase from [-63,63] to [-32,31] */

    #PUSH, 96
    ADD[]
    DUP[]
    ROUND[Bl]
    SUB[]
    #PUSH, 32
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* save minimized deltaPhase for child edge and shift parent edge */

    DUP[]
    #PUSH, 8 /* p0 */
    MINDEX[]
    #PUSH, 8 /* p1 */
    MINDEX[]
    ROLL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* since child edge is linked perpendicular to italic angle,
       the resulting stroke would include unnecessary pixels,
       hence determine phase of distance between extrapolated
       x-coordinates (deltaDeltaPhase) */

    ROLL[]
    ROLL[]
    SUB[]
    DUP[]
    ROUND[Bl]
    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase&gt;, &lt;deltaDeltaPhase&gt; */
    /* subtract from deltaPhase (don't shift quite as far...) */

    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase'&gt; */
    /* shift parent edge */

    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

    POP[]
    POP[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]

#PUSHON
#END
ENDF[]

FDEF[], 132

/* for monochrome only: stack points &lt;p&gt; through &lt;c&gt; on top of &lt;p&gt; below &lt;ppem&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt;, 132 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt; */

MPPEM[]
GT[]
#PUSH, 1, 2
RS[]
GTEQ[]
AND[]
IF[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    SWAP[]
    SRP0[]
    DUP[]
    SVTCA[X]
    ALIGNRP[]
    SVTCA[Y]
    ALIGNRP[]

ELSE[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    POP[]
    POP[]
EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 133

/* support fn for fns 134 and 135

   CALL[], &lt;align?&gt;, &lt;from&gt;, &lt;to&gt;, 133 */

#BEGIN
#PUSHOFF

SWAP[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

#WBeginLoop133:

#PUSH, 2 /* to */
CINDEX[]
#PUSH, 2 /* from */
CINDEX[]
GTEQ[]
IF[]

    /* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

    DUP[]
    #PUSH, 4 /* align? */
    CINDEX[]
    IF[]
        ALIGNRP[]
    ELSE[]
        IP[]
    EIF[]

    #PUSH, 1
    ADD[]

    #PUSH, WOffset133
    JMPR[], (WOffset133=#WBeginLoop133)

EIF[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 134

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;p1&gt;, 134 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;p1&gt; */

#PUSH, 2 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;eq?&gt; */

ROLL[] /* p0 */
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
ROLL[] /* p1 */
DUP[]
SRP2[]
#PUSH, 1
SUB[]

/* STACK: &lt;eq?&gt;, &lt;from&gt;, &lt;to&gt; */

#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 135

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, 135 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, &lt;eq?&gt; */

SWAP[]
DUP[]
SRP2[]
#PUSH, 1
SUB[]
SWAP[]
DUP[]

#PUSH, 6 /* p0 */
MINDEX[]
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
#PUSH, 6 /* end */
MINDEX[]

/* STACK: &lt;start&gt;, &lt;to&gt;, &lt;eq?&gt;, &lt;eq?&gt;, &lt;from&gt;, &lt;end&gt; */

#PUSH, 133
CALL[]

ROLL[]
ROLL[]
#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 150
/* Function 150 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given rasterizer mode (in Store 2) ClearType */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 150 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in ± 64ths */
/* &lt;rasterizer mode&gt; value in store 2 */
/* 150 Function number */
#BEGIN
#PUSHOFF
#PUSH, 2
RS[] /* read store 2 */
EQ[] /* is it = to the last arg? */
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
       SPVFS[] /* Restore orig PV */
       POP[] /* otherwise remove the remaining arguments */
       POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 151
/* Function 151 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given set of rasterizer flags (in Store 2) */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 151 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in ± 64ths */
/* &lt;rasterizer flag&gt; bit of a value in store 2 */
/* Function 151 differs from Function 150 in that instead of requiring an */
/* exact match with the value in store 2, a given set of flags (or bit values) */
/* can be referenced. For example, if the function should execute */
/* in any situation where ClearType with fractional AWs is enabled, */
/* (c.f. Function 84) irrespective of other flags (e.g. BGR as opposed */
/* to RGB Devices or non-ClearType direction anti-aliasing) then one */
/* would use a &lt;rasterizer flag&gt; value of 64. (c.f. Function 84.) */
/* The rasterizer values for &lt;rasterizer mode&gt; are defined in the function */
/* 84 header. */
/* EXAMPLE: */
/* If one wanted the move to occur if either subpixel positioned or full gray pixel */
/* then one would take the 64 (from subpixel positioned) and the 256 (from */
/* gray full-pixel) and add them to get 320. With a value of 320, the point will */
/* get moved if either subpixel positioned or full gray pixel is enabled. */
/* If one wanted to move to occur always if ClearType was on, independent of */
/* any subtype or spacing flag, one would set the rasterizer mode to 2. */

/* 151 Function number */
#BEGIN
#PUSHOFF
#PUSH, 152 /* Call function 152 with the rasterizer mode on the top of stack */
CALL[]
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
        SPVFS[] /* Restore orig PV */
        POP[] /* otherwise remove the remaining arguments */
        POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 152
/* Function 152 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 152 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if there is at least one
of these resultant bits that are set.

Function 152 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 bit flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 2
RS[]
SWAP[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      /* We can early out here once we find our first match */
      POP[]
      POP[]
      POP[]
      #PUSH, 1, BTEnd  /* 1 is the TRUE return code */
      JMPR[], (BTEnd=#LEndFn)
    EIF[]
  ELSE[]
    POP[]
  EIF[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BPEnd /* 0 is end condition of FALSE */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  SWAP[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn) 

  EIF[]
  ROLL[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]

FDEF[], 153
/* Function 153 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 153 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if ALL
of these resultant bits from the mask are set.

Function 153 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 0, 2   /* 0 is the boolean tracking success, start off with FALSE */
RS[]
ROLL[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   Conditional boolean tracking success
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  Conditional boolean tracking success
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 1  /* Set TRUE return code */
      OR[]      /* We OR this because we will immediately exit if we fail this test */
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
    ELSE[]
      POP[]
      POP[]
      POP[]
      POP[]
      #PUSH, BTEnd , 0  /* 0 is the FALSE return code */
      SWAP[]
      JMPR[], (BTEnd=#LEndFn)

    EIF[]
  ELSE[]
    POP[]
  EIF[]
  #PUSH, 4 /* Can this be cleaned up and integrated with the code below? */
  MINDEX[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Conditional boolean tracking success
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    ROLL[]
    NOT[]
    ROLL[]
    AND[]
    SWAP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BPEnd /* 29  End */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  ROLL[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn)

  EIF[]
  #PUSH, 4
  MINDEX[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]



    </extraProgram>

    <extraProgram name="ppgm">
/* auto-generated pre-program */
/* VTT 6.33 compiler Tue Aug  8 13:08:08 2023 */

/* Grey scaling? */
CALL[], 84

/* InstructionsOn */
#PUSHOFF
MPPEM[]
#PUSH, 2047
GT[]
MPPEM[]
#PUSH, 9
LT[]
OR[]
#PUSH, 1
GETINFO[]
#PUSH, 37
GTEQ[]
#PUSH, 1
GETINFO[]
#PUSH, 64
LTEQ[]
AND[]
#PUSH, 6
GETINFO[]
#PUSH, 0
NEQ[]
AND[]
OR[]
IF[]
    #PUSH, 1, 1
    INSTCTRL[]
EIF[]
#PUSHON

/* DropOutCtrlOff */
SCANCTRL[], 400

SCANTYPE[], 1
SCANTYPE[], 5

/* CvtCutIn */
SVTCA[Y]
SCVTCI[], 64
WS[], 3, 64
#PUSHOFF
MPPEM[]
#PUSH, 144
GTEQ[]
IF[]
#PUSH, 3, 0, 0
SCVTCI[]
WS[]
EIF[]
#PUSHON

/* ClearTypeCtrl */
#PUSHOFF
#PUSH, 2, 2
RS[]
LTEQ[]
IF[]
    #PUSH, 4, 3
    INSTCTRL[]
EIF[]
#PUSHON

WS[], 16, 0
/* LinearAdvanceWidths */
DLTC1[(2 @7 8)(2 @10 8)(2 @13 8)]
SVTCA[Y]
CALL[], 2, 89
SVTCA[Y]
CALL[], 8, 89
CALL[], 3, 34, 2, 85
CALL[], 9, 34, 8, 85
DLTC1[(0 @0 8)(0 @4 8)(0 @7 8)(0 @10 8)]
SVTCA[Y]
CALL[], 0, 89
DLTC1[(6 @0 8)(6 @7 8)(6 @9 8)(6 @11 8)]
SVTCA[Y]
CALL[], 6, 89
SVTCA[Y]
CALL[], 10, 89
SVTCA[Y]
CALL[], 14, 89
CALL[], 1, 56, 0, 85
CALL[], 7, 55, 6, 85
CALL[], 11, 55, 10, 85
CALL[], 15, 55, 14, 85
DLTC1[(4 @7 8)(4 @10 8)(4 @13 8)]
SVTCA[Y]
CALL[], 4, 89
SVTCA[Y]
CALL[], 12, 89
CALL[], 5, 34, 4, 85
CALL[], 13, 34, 12, 85
SVTCA[Y]
CALL[], 16, 89
SVTCA[Y]
CALL[], 18, 89
CALL[], 17, 125, 16, 85
CALL[], 19, 34, 18, 85
SVTCA[X]
CALL[], 29, 33, 63, 30, 255, 90
SVTCA[X]
CALL[], 31, 54, 30, 43, 91
SVTCA[X]
CALL[], 34, 56, 33, 55, 91
SVTCA[X]
CALL[], 32, 54, 30, 43, 91
SVTCA[X]
CALL[], 35, 56, 33, 55, 91
SVTCA[X]
CALL[], 36, 30, 16, 31
CALL[], 37, 30, 255, 31
CALL[], 38, 84, 37, 85
CALL[], 39, 38, 100, 31
SVTCA[Y]
CALL[], 40, 31, 50, 31
SVTCA[Y]
CALL[], 41, 5, 31, 30, 92
CALL[], 42, 32, 34, 31
SVTCA[X]
CALL[], 43, 26, 32, 30, 92
CALL[], 44, 43, 72, 31
CALL[], 45, 43, 39, 31
SVTCA[X]
CALL[], 46, 33, 27, 31
CALL[], 47, 33, 255, 31
CALL[], 48, 47, 84, 31
CALL[], 49, 84, 47, 85
SVTCA[Y]
CALL[], 50, 34, 255, 31
CALL[], 51, 50, 72, 31
CALL[], 52, 34, 10, 31
CALL[], 53, 35, 28, 31
CALL[], 54, 53, 84, 31
CALL[], 55, 35, 255, 31
CALL[], 56, 55, 84, 31
CALL[], 57, 55, 39, 31
CALL[], 58, 57, 250, 31
SVTCA[X]
CALL[], 60, 59, 19, 31
CALL[], 61, 59, 39, 31
CALL[], 62, 59, 100, 31
SVTCA[Y]
CALL[], 67, 66, 63, 31
SVTCA[X]
CALL[], 69, 68, 21, 31
CALL[], 70, 68, 167, 31
CALL[], 71, 70, 84, 31
CALL[], 72, 70, 250, 31
SVTCA[Y]
CALL[], 75, 74, 34, 31
CALL[], 76, 74, 42, 31
CALL[], 79, 78, 250, 31
CALL[], 81, 80, 125, 31
CALL[], 82, 80, 46, 31
SVTCA[X]
CALL[], 83, 36, 255, 31
CALL[], 84, 37, 46, 31
CALL[], 85, 37, 72, 31
CALL[], 86, 37, 125, 31
CALL[], 87, 37, 255, 31
CALL[], 88, 38, 255, 31
CALL[], 89, 39, 250, 31
CALL[], 90, 39, 255, 31
SVTCA[Y]
CALL[], 91, 40, 255, 31
CALL[], 92, 41, 84, 31
CALL[], 93, 41, 125, 31
CALL[], 94, 41, 255, 31
CALL[], 95, 41, 100, 31
CALL[], 96, 42, 167, 31
CALL[], 97, 42, 255, 31
CALL[], 98, 42, 84, 31
CALL[], 99, 43, 100, 31
CALL[], 100, 43, 255, 31
CALL[], 101, 44, 255, 31
CALL[], 102, 44, 250, 31
CALL[], 103, 45, 255, 31
CALL[], 104, 45, 100, 31
SVTCA[X]
CALL[], 105, 46, 250, 31
CALL[], 106, 46, 250, 31
CALL[], 107, 48, 125, 31
CALL[], 108, 48, 250, 31
CALL[], 109, 48, 255, 31
CALL[], 110, 47, 255, 31
CALL[], 111, 49, 255, 31
CALL[], 112, 49, 250, 31
CALL[], 113, 49, 125, 31
SVTCA[Y]
CALL[], 114, 50, 84, 31
CALL[], 115, 50, 255, 31
CALL[], 116, 51, 255, 31
CALL[], 117, 51, 167, 31
CALL[], 118, 50, 39, 31
CALL[], 119, 52, 255, 31
CALL[], 120, 53, 84, 31
CALL[], 121, 53, 255, 31
CALL[], 122, 53, 167, 31
CALL[], 123, 54, 255, 31
CALL[], 124, 54, 250, 31
CALL[], 125, 55, 100, 31
CALL[], 126, 55, 250, 31
CALL[], 127, 55, 255, 31
CALL[], 128, 55, 250, 31
CALL[], 129, 56, 255, 31
CALL[], 130, 56, 167, 31
CALL[], 131, 57, 255, 31
CALL[], 132, 58, 255, 31
CALL[], 133, 58, 167, 31
SVTCA[X]
CALL[], 134, 60, 56, 31
CALL[], 135, 60, 255, 31
CALL[], 136, 61, 250, 31
CALL[], 137, 61, 255, 31
CALL[], 138, 62, 167, 31
CALL[], 139, 62, 255, 31
CALL[], 140, 59, 255, 31
CALL[], 141, 59, 100, 31
CALL[], 142, 63, 255, 31
SVTCA[Y]
CALL[], 143, 64, 63, 31
CALL[], 144, 64, 255, 31
CALL[], 145, 64, 167, 31
CALL[], 146, 65, 255, 31
CALL[], 147, 67, 250, 31
CALL[], 148, 67, 255, 31
CALL[], 149, 66, 167, 31
CALL[], 150, 66, 255, 31
CALL[], 151, 66, 250, 31
CALL[], 152, 66, 63, 31
SVTCA[X]
CALL[], 153, 69, 42, 31
CALL[], 154, 69, 255, 31
CALL[], 155, 69, 100, 31
CALL[], 156, 70, 39, 31
CALL[], 157, 71, 255, 31
CALL[], 158, 71, 125, 31
CALL[], 159, 72, 250, 31
CALL[], 160, 72, 255, 31
CALL[], 161, 73, 255, 31
SVTCA[Y]
CALL[], 162, 75, 56, 31
CALL[], 163, 75, 255, 31
CALL[], 164, 75, 250, 31
CALL[], 165, 74, 167, 31
CALL[], 166, 74, 255, 31
CALL[], 167, 76, 125, 31
CALL[], 168, 76, 250, 31
CALL[], 169, 76, 255, 31
CALL[], 170, 77, 18, 31
CALL[], 171, 77, 255, 31
CALL[], 172, 77, 84, 31
CALL[], 173, 78, 84, 31
CALL[], 174, 78, 125, 31
CALL[], 175, 78, 255, 31
CALL[], 176, 79, 255, 31
CALL[], 177, 79, 250, 31
CALL[], 178, 81, 125, 31
CALL[], 179, 81, 255, 31
CALL[], 180, 80, 255, 31
CALL[], 181, 80, 250, 31
CALL[], 182, 82, 255, 31
CALL[], 183, 82, 167, 31
SVTCA[Y]
CALL[], 184, 89
SVTCA[Y]
CALL[], 185, 89
CALL[], 186, 34, 184, 85
CALL[], 187, 34, 185, 85
RTG[]

    </extraProgram>

  </TSI1>

  <TSI2>
    <!-- This table will be calculated by the compiler -->
  </TSI2>

  <TSI3>

    <glyphProgram name=".notdef">
/* VTTTalk glyph 0, char 0xffff */
/* GUI generated Sat Dec 17 16:23:33 2022 */

/* Y direction */
YAnchor(1)
YShift(1,15)
YShift(15,10)
YShift(10,9)
YAnchor(2)
YShift(2,5)
YShift(5,7)
YShift(5,12)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="A">
/* VTTTalk glyph 1, char 0x41 (A) */
/* GUI generated Mon Dec 12 14:54:26 2022 */

/* Y direction */
ResYAnchor(2,8)
YShift(2,6)
ResYAnchor(3,2)
YIPAnchor(3,0,2)
YInterpolate(3,8,0)
YShift(0,9)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="AE">
/* VTTTalk glyph 227, char 0xc6 */
/* GUI generated Tue Dec 13 15:13:48 2022 */

/* Y direction */
ResYAnchor(2,8)
YShift(2,14)
YShift(14,11)
ResYAnchor(3,2)
YShift(3,6)
YShift(3,16)
YIPAnchor(3,10,0,2)
YShift(10,7)
YShift(0,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Aogonek">
/* VTTTalk glyph 226, char 0x104 */
/* GUI generated Tue Dec 13 15:13:01 2022 */

/* Y direction */
ResYAnchor(2,8)
YDist(2,14,&gt;=)
YShift(14,13)
YShift(2,22)
YShift(22,6)
ResYAnchor(3,2)
YIPAnchor(3,0,14)
YShift(0,25)
YInterpolate(2,24,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Aring">
/* VTTTalk glyph 223, char 0xc5 */
/* GUI generated Thu Dec 15 17:36:38 2022 */

/* Y direction */
ResYAnchor(1,8)
YShift(1,17)
ResYAnchor(28,2)
YShift(28,3)
YShift(28,15)
YShift(28,31)
YIPAnchor(1,0,28)
YShift(0,32)
YDist(28,9,&gt;=)
YShift(9,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="B">
/* VTTTalk glyph 2, char 0x42 (B) */
/* GUI generated Mon Dec 12 14:54:56 2022 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,30)
ResYAnchor(1,2)
YShift(1,20)
YIPAnchor(1,29,0)
YShift(29,28)
YShift(29,21)
YShift(21,22)
YInterpolate(21,8,9,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="C">
/* VTTTalk Unicode 0x43 (C) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 9 */
/* CVT 9 3 */
/* Min and Max */
ResYAnchor(0,9)	/* min, CVT */
ResYAnchor(9,3)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(9,16) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(0,25) /*perpendicular to the stroke*/

Smooth()


    </glyphProgram>

    <glyphProgram name="Ccedilla">
/* VTTTalk glyph 233, char 0xc7 */
/* GUI generated Thu Dec 15 17:15:17 2022 */

/* Y direction */
ResYAnchor(27,3)
YShift(27,34)
ResYAnchor(50,9)
YShift(50,18)
YShift(50,43)
YDist(50,6,&gt;=)
YShift(6,7)
YInterpolate(6,16,17,51,50)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="D">
/* VTTTalk Unicode 0x44 (D) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 1 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(1,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(1,19) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(0,20) /*perpendicular to the stroke*/

Smooth()


    </glyphProgram>

    <glyphProgram name="E">
/* VTTTalk Unicode 0x45 (E) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 1 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(1,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(1,4) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(1,8,0)
YAnchor(8)
YShift(8,5) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(0,9) /*perpendicular to the stroke*/

Smooth()


    </glyphProgram>

    <glyphProgram name="Eng">
/* VTTTalk glyph 304, char 0x14a */
/* GUI generated Tue Dec 13 12:33:48 2022 */

/* Y direction */
ResYAnchor(2,8)
YDist(2,12,&gt;=)
YShift(12,13)
YShift(2,17)
YShift(17,8)
ResYAnchor(3,2)
YShift(3,7)
YInterpolate(2,5,0,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Eogonek">
/* VTTTalk glyph 255, char 0x118 */
/* GUI generated Wed Dec 14 14:19:01 2022 */

/* Y direction */
ResYAnchor(4,8)
YShift(4,13)
YShift(4,16)
YDist(4,24,&gt;=2)
YShift(24,23)
ResYAnchor(5,2)
YShift(5,8)
YIPAnchor(5,12,24)
YShift(12,9)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="Eth">
/* VTTTalk glyph 396, char 0xd0 */
/* GUI generated Wed Dec 14 14:34:34 2022 */

/* Y direction */
ResYAnchor(4,2)
YShift(4,29)
ResYAnchor(18,8)
YShift(18,22)
YIPAnchor(4,21,18)
YShift(21,1)
YShift(21,30)
YShift(30,2)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="Euro">
/* VTTTalk glyph 136, char 0x20ac */
/* GUI generated Wed Dec 14 14:07:22 2022 */

/* Y direction */
ResYAnchor(10,5)
YShift(10,17)
ResYAnchor(40,13)
YShift(40,33)
YIPAnchor(40,24,10)
YShift(24,3)
YDist(24,23,&gt;=)
YShift(23,4)
YShift(4,7)
YShift(7,20)
YShift(24,27)
YShift(27,0)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="F">
/* VTTTalk Unicode 0x46 (F) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 1 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(1,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(1,4) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(1,8,0)
YAnchor(8)
YShift(8,5) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="G">
/* VTTTalk glyph 7, char 0x47 (G) */
/* GUI generated Mon Dec 12 14:58:19 2022 */

/* Y direction */
ResYAnchor(24,9)
YShift(24,13)
ResYAnchor(33,3)
YShift(33,4)
YIPAnchor(33,19,24)
YShift(19,18)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="H">
/* VTTTalk glyph 8, char 0x48 (H) */
/* GUI generated Thu Dec 15 18:23:03 2022 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,8)
ResYAnchor(1,2)
YShift(1,6)
YIPAnchor(1,10,0)
YShift(10,3)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="Hbar">
/* VTTTalk glyph 266, char 0x126 */
/* GUI generated Tue Dec 13 15:44:10 2022 */

/* Y direction */
ResYAnchor(4,2)
YShift(4,9)
ResYAnchor(19,8)
YShift(19,15)
YIPAnchor(4,21,19)
YShift(21,17)
YDist(21,0,&gt;=)
YShift(0,3)
YShift(3,6)
YShift(6,10)
YShift(0,20)
YShift(20,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="I">
/* VTTTalk Unicode 0x49 (I) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 5 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(5,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


    </glyphProgram>

    <glyphProgram name="Iogonek">
/* VTTTalk glyph 278, char 0x12e */
/* GUI generated Thu Dec 15 18:00:47 2022 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,12)
YShift(0,2)
YShift(2,9)
YDist(0,20,&gt;=)
YShift(20,19)
ResYAnchor(5,2)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="J">
/* VTTTalk Unicode 0x4a (J) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 9 */
/* CVT 11 2 */
/* Min and Max */
ResYAnchor(0,9)	/* min, CVT */
ResYAnchor(11,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(0,7) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="K">
/* VTTTalk glyph 11, char 0x4b (K) */
/* GUI generated Sat Dec 17 17:10:11 2022 */

/* Y direction */
ResYAnchor(0,2)
YShift(0,4)
ResYAnchor(12,8)
YShift(12,9)
YInterpolate(12,10,6,2,0)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="L">
/* VTTTalk Unicode 0x4c (L) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 1 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(1,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(0,3) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Lslash">
/* VTTTalk glyph 291, char 0x141 */
/* GUI generated Tue Dec 13 12:30:18 2022 */

/* Y direction */
ResYAnchor(4,2)
ResYAnchor(13,8)
YShift(13,10)
YInterpolate(13,1,0,2,9,3,6,8,7,4)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="M">
/* VTTTalk glyph 13, char 0x4d (M) */
/* GUI generated Mon Dec 12 14:59:43 2022 */

/* Y direction */
ResYAnchor(9,8)
YShift(9,3)
ResYAnchor(10,2)
YShift(10,1)
YInterpolate(3,6,5,12,7,4,10)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="N">
/* VTTTalk glyph 14, char 0x4e (N) */
/* GUI generated Mon Dec 12 14:59:53 2022 */

/* Y direction */
ResYAnchor(2,8)
YShift(2,9)
ResYAnchor(3,2)
YShift(3,7)
YInterpolate(2,5,0,3)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="O">
/* VTTTalk Unicode 0x4f (O) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 3 */
/* CVT 12 9 */
/* Min and Max */
ResYAnchor(12,9)	/* min, CVT */
ResYAnchor(3,3)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(3,30) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(12,21) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="OE">
/* VTTTalk glyph 324, char 0x152 */
/* GUI generated Wed Dec 14 14:24:21 2022 */

/* Y direction */
ResYAnchor(1,8)
YShift(1,18)
YShift(18,26)
ResYAnchor(10,2)
YShift(10,13)
YShift(13,28)
YIPAnchor(10,17,1)
YShift(17,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Ohorn">
/* VTTTalk glyph 325, char 0x1a0 */
/* GUI generated Mon Dec 19 12:21:45 2022 */

/* Y direction */
ResYAnchor(3,2)
YDist(3,7,&gt;=)
YShift(3,42)
YShift(42,11,15)
ResYAnchor(24,9)
YShift(24,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Oslash">
/* VTTTalk glyph 323, char 0xd8 */
/* GUI generated Wed Dec 14 14:23:51 2022 */

/* Y direction */
ResYAnchor(3,3)
YDist(3,7,&gt;=)
YShift(3,40)
ResYAnchor(18,9)
YDist(18,22,&gt;=)
YShift(18,43)
YInterpolate(18,21,24,36,52,37,9,6,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="P">
/* VTTTalk Unicode 0x50 (P) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 1 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(1,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(1,18) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(1,12,0)
YAnchor(12)
YShift(12,19) /*perpendicular to the stroke*/

Smooth()


    </glyphProgram>

    <glyphProgram name="Q">
/* VTTTalk glyph 17, char 0x51 (Q) */
/* GUI generated Mon Dec 12 15:00:26 2022 */

/* Y direction */
ResYAnchor(6,9)
YDist(6,2,&gt;=)
YShift(2,1)
YShift(6,27)
YShift(27,3)
YShift(3,0)
YShift(27,30)
YShift(30,33)
YShift(33,32)
YShift(32,31)
ResYAnchor(15,3)
YShift(15,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="R">
/* VTTTalk glyph 18, char 0x52 (R) */
/* GUI generated Mon Dec 12 15:00:57 2022 */

/* Y direction */
ResYAnchor(9,8)
YShift(9,3)
ResYAnchor(10,2)
YShift(10,25)
YIPAnchor(10,7,9)
YShift(7,26)
YInterpolate(26,17,18,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="S">
/* VTTTalk glyph 19, char 0x53 (S) */
/* GUI generated Mon Dec 12 15:01:24 2022 */

/* Y direction */
ResYAnchor(13,3)
YShift(13,20)
ResYAnchor(33,9)
YShift(33,0)
YInterpolate(33,3,30,6,7,27,26,10,23,13)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="T">
/* VTTTalk Unicode 0x54 (T) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 2 */
/* CVT 6 8 */
/* Min and Max */
ResYAnchor(6,8)	/* min, CVT */
ResYAnchor(2,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(2,1) /*perpendicular to the stroke*/
YShift(1,5) /*along bottom edge*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Tbar">
/* VTTTalk glyph 351, char 0x166 */
/* GUI generated Tue Dec 13 14:51:59 2022 */

/* Y direction */
ResYAnchor(6,2)
YShift(6,5)
YShift(5,9)
ResYAnchor(14,8)
YIPAnchor(6,2,14)
YShift(2,1)
YShift(2,10)
YShift(1,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Thorn">
/* VTTTalk glyph 397, char 0xde */
/* GUI generated Wed Dec 14 14:35:07 2022 */

/* Y direction */
ResYAnchor(0,8)
ResYAnchor(1,2)
YIPAnchor(1,3,14,0)
YShift(3,20)
YShift(14,21)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="U">
/* VTTTalk Unicode 0x55 (U) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 9 9 */
/* CVT 16 2 */
/* Min and Max */
ResYAnchor(9,9)	/* min, CVT */
ResYAnchor(16,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(9,0) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(16,5)

Smooth()

    </glyphProgram>

    <glyphProgram name="Uhorn">
/* VTTTalk glyph 369, char 0x1af */
/* GUI generated Wed Dec 14 13:27:21 2022 */

/* Y direction */
ResYAnchor(16,9)
YShift(16,0)
ResYAnchor(23,2)
YShift(23,4)
YDist(23,8,&gt;=)
YShift(23,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Uogonek">
/* VTTTalk glyph 368, char 0x172 */
/* GUI generated Wed Dec 14 13:26:45 2022 */

/* Y direction */
ResYAnchor(10,2)
YShift(10,23)
YAnchor(27,9)
YShift(27,3)
YShift(27,18)
YDist(27,35,&gt;=)
YShift(35,34)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="V">
/* VTTTalk glyph 22, char 0x56 (V) */
/* GUI generated Mon Dec 12 15:01:38 2022 */

/* Y direction */
ResYAnchor(0,8)
ResYAnchor(1,2)
YShift(1,5)
YInterpolate(1,3,0)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="W">
/* VTTTalk glyph 23, char 0x57 (W) */
/* GUI generated Mon Dec 12 15:02:00 2022 */

/* Y direction */
ResYAnchor(5,8)
YShift(5,2)
ResYAnchor(6,2)
YShift(6,12)
YIPAnchor(5,9,6)
YInterpolate(5,11,8,3,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="X">
/* VTTTalk glyph 24, char 0x58 (X) */
/* GUI generated Mon Dec 12 15:02:16 2022 */

/* Y direction */
ResYAnchor(1,8)
YShift(1,10)
ResYAnchor(3,2)
YShift(3,7)
YInterpolate(3,5,2,8,11,1)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="Y">
/* VTTTalk glyph 25, char 0x59 (Y) */
/* GUI generated Mon Dec 12 15:02:28 2022 */

/* Y direction */
ResYAnchor(3,8)
ResYAnchor(6,2)
YShift(6,1)
YInterpolate(3,2,5,8,6)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="Z">
/* VTTTalk glyph 26, char 0x5a (Z) */
/* GUI generated Mon Dec 12 15:02:54 2022 */

/* Y direction */
ResYAnchor(1,8)
YShift(1,10)
YShift(10,2,9)
ResYAnchor(6,2)
YShift(6,5)
YShift(5,8,3)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="a">
/* VTTTalk glyph 27, char 0x61 (a) */
/* GUI generated Mon Dec 12 15:11:08 2022 */

/* Y direction */
ResYAnchor(10,10)
YShift(10,8)
ResYAnchor(17,11)
YShift(17,49)
YShift(49,14)
YShift(14,52)
ResYAnchor(40,7)
YShift(40,33)
YIPAnchor(17,53,40)
YShift(53,54)
YShift(53,27)
YShift(27,26)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="ae">
/* VTTTalk glyph 422, char 0xe6 */
/* GUI generated Thu Dec 15 16:50:23 2022 */

/* Y direction */
ResYAnchor(14,11)
YShift(14,7)
YShift(7,6)
YShift(14,60)
YShift(60,10)
YShift(60,63)
ResYAnchor(36,7)
YShift(36,29)
YShift(29,39)
YIPAnchor(36,69,14)
YShift(69,0)
YShift(69,23)
YShift(23,54)
YAnchor(42,7)
YShift(42,51)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="ampersand">
/* VTTTalk glyph 88, char 0x26 (&amp;) */
/* GUI generated Thu Dec 15 15:59:41 2022 */

/* Y direction */
ResYAnchor(25,3)
YShift(25,32)
ResYAnchor(44,8)
ResYAnchor(48,9)
YShift(48,9)
YInterpolate(48,12,42,39,0,19,41,38,40,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="aogonek">
/* VTTTalk glyph 421, char 0x105 */
/* GUI generated Thu Dec 15 12:22:39 2022 */

/* Y direction */
ResYAnchor(10,10)
YDist(10,60,&gt;=)
YShift(60,61)
YShift(60,59)
YShift(59,58)
YShift(10,67)
YShift(67,7)
YShift(67,70)
ResYAnchor(34,7)
YShift(34,27)
YIPAnchor(10,71,34)
YShift(71,72)
YShift(71,20)
YShift(20,19)
ResYAnchor(49,10)
YShift(49,48)
YShift(49,52)
YShift(52,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="approxequal">
/* VTTTalk glyph 117, char 0x2248 */
/* GUI generated Tue Aug  8 10:06:41 2023 */

/* Y direction */
YAnchor(39)
YDelta(39,1@12,-1@15)
YShift(39,32)
YShift(39,26)
YAnchor(26)
YShift(26,45)
YUpToGrid(13)
YShift(26,13)
YAnchor(13)
YDelta(13,-1@15..16;18)
YShift(13,6)
YShift(13,0)
YAnchor(0)
YShift(0,19)
YShift(0,9)
YShift(9,10)
YShift(13,22)
YShift(22,23)
YShift(26,35)
YShift(35,36)
YShift(39,48)
YShift(48,49)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="asciicircum">
/* VTTTalk glyph 124, char 0x5e (^) */
/* GUI generated Sat Dec 17 14:16:47 2022 */

/* Y direction */
ResYAnchor(2,4)
YShift(2,0)
YAnchor(0)
YShift(0,5)
YInterpolate(0,6,2)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="asciitilde">
/* VTTTalk glyph 116, char 0x7e (~) */
/* GUI generated Tue Aug  8 10:04:26 2023 */

/* Y direction */
YAnchor(13)
YDelta(13,-1@11;15)
YShift(13,6)
YDist(13,0,&gt;=3)
YShift(0,19)
YShift(0,9)
YShift(9,10)
YShift(13,22)
YShift(22,23)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="asterisk">
/* VTTTalk glyph 95, char 0x2a (*) */
/* GUI generated Wed Dec 21 16:17:08 2022 */

/* Y direction */
YAnchor(26)
YDelta(26,1@10)
YDist(26,0,&gt;=)
YShift(0,53)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="at">
/* VTTTalk glyph 89, char 0x40 (@) */
/* GUI generated Thu Dec 15 16:16:35 2022 */

/* Y direction */
YAnchor(4)
YShift(4,1)
YShift(4,47)
YAnchor(13)
YShift(13,38)
YIPAnchor(13,31,22,4)
YShift(31,63)
YShift(22,56)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="b">
/* VTTTalk glyph 28, char 0x62 (b) */
/* GUI generated Mon Dec 12 15:19:16 2022 */

/* Y direction */
ResYAnchor(0,0)
ResYAnchor(5,7)
YShift(5,18)
YShift(18,2)
YShift(2,21)
ResYAnchor(11,11)
YShift(11,25)
YShift(25,22)
YInterpolate(11,14,25)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="backslash">
/* VTTTalk Unicode 0x5c (\) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()


    </glyphProgram>

    <glyphProgram name="bar">
/* VTTTalk Unicode 0x7c (|) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(2)	/* min */
YAnchor(0)	/* max */

Smooth()


    </glyphProgram>

    <glyphProgram name="braceleft">
/* VTTTalk glyph 77, char 0x7b ({) */
/* GUI generated Tue Dec 13 11:48:55 2022 */

/* Y direction */
YAnchor(29)
YShift(29,30)
YAnchor(66)
YShift(66,65)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="braceright">
/* VTTTalk glyph 78, char 0x7d (}) */
/* GUI generated Tue Dec 13 11:49:03 2022 */

/* Y direction */
YAnchor(4)
YShift(4,5)
YAnchor(41)
YShift(41,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="bracketleft">
/* VTTTalk glyph 75, char 0x5b ([) */
/* GUI generated Tue Dec 13 11:48:23 2022 */

/* Y direction */
YAnchor(1)
YShift(1,6)
YAnchor(2)
YShift(2,5)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="bracketright">
/* VTTTalk glyph 76, char 0x5d (]) */
/* GUI generated Tue Dec 13 11:48:40 2022 */

/* Y direction */
YAnchor(2)
YShift(2,1)
YAnchor(5)
YShift(5,6)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="bullet">
/* VTTTalk glyph 86, char 0x2022 */
/* GUI generated Tue Dec 13 11:49:43 2022 */

/* Y direction */
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="c">
/* VTTTalk glyph 29, char 0x63 (c) */
/* GUI generated Tue Dec 13 14:25:12 2022 */

/* Y direction */
ResYAnchor(16,11)
YShift(16,9)
ResYAnchor(25,7)
YShift(25,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ccedilla">
/* VTTTalk glyph 428, char 0xe7 */
/* GUI generated Thu Dec 15 18:35:31 2022 */

/* Y direction */
ResYAnchor(16,11)
YShift(16,9)
YShift(16,38)
YDist(16,26,&gt;=)
YShift(26,27)
YInterpolate(26,36,37,17,16)
ResYAnchor(47,7)
YShift(47,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="cent">
/* VTTTalk glyph 144, char 0xa2 */
/* GUI generated Tue Dec 20 16:29:24 2022 */

/* Y direction */
YAnchor(14)
YDist(14,15,&gt;=)
YShift(14,17)
YShift(14,40)
YShift(40,24)
YAnchor(32)
YDist(32,0,&gt;=)
YShift(32,2)
YShift(32,25)
YShift(25,39)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="colon">
/* VTTTalk glyph 55, char 0x3a (:) */
/* GUI generated Tue Dec 13 14:40:06 2022 */

/* Y direction */
ResYAnchor(9,7)
YShift(9,3)
ResYAnchor(15,11)
YShift(15,21)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="comma">
/* VTTTalk glyph 54, char 0x2c (,) */
/* GUI generated Tue Dec 13 14:39:11 2022 */

/* Y direction */
YAnchor(5)
YDist(5,0,&gt;=)
YShift(0,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="copyright">
/* VTTTalk glyph 91, char 0xa9 */
/* GUI generated Fri Dec 16 14:58:35 2022 */

/* Y direction */
YAnchor(6)
YShift(6,27)
YAnchor(15)
YShift(15,18)
YIPAnchor(15,45,36,6)
YShift(45,52)
YShift(36,61)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="d">
/* VTTTalk glyph 30, char 0x64 (d) */
/* GUI generated Mon Dec 12 15:19:40 2022 */

/* Y direction */
ResYAnchor(0,10)
ResYAnchor(5,11)
YShift(5,23)
YShift(23,2)
YShift(23,26)
ResYAnchor(11,7)
YShift(11,17)
YShift(17,27)
YInterpolate(17,14,11)
ResYAnchor(15,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dagger">
/* VTTTalk glyph 96, char 0x2020 */
/* GUI generated Fri Dec 16 14:43:20 2022 */

/* Y direction */
ResYAnchor(14,10)
ResYAnchor(39,0)
YInterpolate(14,7,20,33,46,39)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="daggerdbl">
/* VTTTalk glyph 97, char 0x2021 */
/* GUI generated Fri Dec 16 14:44:17 2022 */

/* Y direction */
ResYAnchor(14,10)
ResYAnchor(53,0)
YInterpolate(14,7,20,74,33,73,34,47,60,53)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="dcroat">
/* VTTTalk glyph 433, char 0x111 */
/* GUI generated Tue Dec 13 15:20:32 2022 */

/* Y direction */
ResYAnchor(1,10)
ResYAnchor(5,11)
YShift(5,31)
YShift(31,2)
YShift(31,34)
ResYAnchor(19,0)
YIPAnchor(5,11,19)
YShift(11,14)
YDist(11,15,&gt;=)
YShift(15,24)
YShift(15,18)
YShift(18,21)
YShift(11,25)
YShift(25,35)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="degree">
/* VTTTalk glyph 132, char 0xb0 */
/* GUI generated Sat Dec 17 14:41:28 2022 */

/* Y direction */
ResYAnchor(9,0)
YShift(9,15)
YDist(9,3,&gt;=)
YShift(3,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="divide">
/* VTTTalk glyph 112, char 0xf7 */
/* GUI generated Tue Dec 20 16:41:40 2022 */

/* Y direction */
YAnchor(13,188)
YShift(13,14)
YShift(14,3)
YAnchor(3)
YDelta(3,1@9)
YShift(3,9)
YShift(13,25)
YAnchor(25)
YDelta(25,1@14..15)
YShift(25,19)

/* X direction */

Smooth()



    </glyphProgram>

    <glyphProgram name="dollar">
/* VTTTalk glyph 133, char 0x24 ($) */
/* GUI generated Tue Dec 20 16:20:21 2022 */

/* Y direction */
ResYAnchor(20,4)
YDist(20,21,&gt;=)
YShift(20,23)
YShift(20,47)
YShift(47,30)
ResYAnchor(37,12)
YDist(37,1,&gt;=)
YShift(37,0)
YShift(0,3)
YInterpolate(37,53,34,56,11,31,46,14,43,20)
YShift(37,50)
YShift(50,57)
YShift(57,10)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="dong">
/* VTTTalk glyph 145, char 0x20ab */
/* GUI generated Sat Dec 17 14:52:02 2022 */

/* Y direction */
ResYAnchor(1,12)
ResYAnchor(5,13)
YShift(5,31)
YShift(31,2)
YShift(31,34)
YDist(5,40,&gt;=)
YShift(40,39)
ResYAnchor(19,4)
YIPAnchor(5,11,19)
YShift(11,14)
YDist(11,15,&gt;=)
YShift(15,24)
YShift(15,18)
YShift(18,21)
YShift(11,25)
YShift(25,35)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="dotlessi">
/* VTTTalk glyph 463, char 0x131 */
/* GUI generated Tue Dec 13 16:52:53 2022 */

/* Y direction */
ResYAnchor(0,10)
YShift(0,1)
YShift(1,7)
ResYAnchor(5,6)
YShift(5,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="e">
/* VTTTalk glyph 31, char 0x65 (e) */
/* GUI generated Mon Dec 19 11:17:49 2022 */

/* Y direction */
ResYAnchor(1,10)
YShift(1,0)
ResYAnchor(13,7)
YShift(13,29)
YIPAnchor(1,20,13)
YInterpolate(1,7,20)
YShift(20,19)
YShift(20,32)
YShift(32,33)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="eight">
/* VTTTalk glyph 108, char 0x38 (8) */
/* GUI generated Tue Dec 13 14:47:54 2022 */

/* Y direction */
ResYAnchor(3,13)
YShift(3,44)
ResYAnchor(16,5)
YShift(16,26)
YIPAnchor(16,38,3)
YShift(38,32)
YInterpolate(32,10,9,22,23,38)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="eight.den">
/* VTTTalk glyph 620, char 0xffff */
/* GUI generated Sat Dec 17 16:42:40 2022 */

/* Y direction */
ResYAnchor(3,187)
YShift(3,44)
ResYAnchor(16,186)
YShift(16,26)
YInterpolate(3,38,22,23,9,10,32,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ellipsis">
/* VTTTalk glyph 61, char 0x2026 */
/* GUI generated Tue Dec 13 14:57:10 2022 */

/* Y direction */
ResYAnchor(6,11)
YShift(6,0)
YShift(6,18)
YShift(18,12)
YShift(18,30)
YShift(30,24)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="emdash">
/* VTTTalk glyph 84, char 0x2014 */
/* GUI generated Fri Jul 28 13:25:40 2023 */

/* Y direction */
YAnchor(0,188)
YShift(0,1)

/* X direction */

Smooth()



    </glyphProgram>

    <glyphProgram name="endash">
/* VTTTalk glyph 83, char 0x2013 */
/* GUI generated Fri Jul 28 13:25:09 2023 */

/* Y direction */
YAnchor(0,188)
YShift(0,1)

/* X direction */

Smooth()



    </glyphProgram>

    <glyphProgram name="eng">
/* VTTTalk glyph 503, char 0x14b */
/* GUI generated Thu Dec 15 18:38:15 2022 */

/* Y direction */
ResYAnchor(8,15)
YShift(8,9)
ResYAnchor(28,10)
ResYAnchor(29,6)
ResYAnchor(34,7)
YShift(34,23)
YShift(23,31)
YShift(31,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eogonek">
/* VTTTalk glyph 450, char 0x119 */
/* GUI generated Tue Dec 20 16:31:37 2022 */

/* Y direction */
ResYAnchor(13,7)
YShift(13,44)
ResYAnchor(40,10)
YShift(40,0)
YShift(40,25)
YIPAnchor(40,6,13)
YShift(6,7)
YShift(6,41)
YShift(41,50)
YDist(40,32,&gt;=)
YShift(32,33)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="equal">
/* VTTTalk glyph 114, char 0x3d (=) */
/* GUI generated Fri Dec 16 11:15:27 2022 */

/* Y direction */
YAnchor(1)
YDelta(1,-1@15;25)
YShift(1,2)
YDist(1,6,&gt;=)
YDelta(6,1@12..15,-1@17..18)
YShift(6,5)

/* X direction */

Smooth()




    </glyphProgram>

    <glyphProgram name="eth">
/* VTTTalk glyph 595, char 0xf0 */
/* GUI generated Thu Dec 15 15:44:08 2022 */

/* Y direction */
ResYAnchor(12,11)
YShift(12,43)
ResYAnchor(34,1)
YIPAnchor(34,18,12)
YInterpolate(34,0,3,30,27,29,28,18)
YShift(18,37)
YShift(37,21)
YShift(21,49)
YShift(34,1)
YShift(1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="exclam">
/* VTTTalk glyph 58, char 0x21 (!) */
/* GUI generated Thu Dec 15 12:31:41 2022 */

/* Y direction */
ResYAnchor(2,0)
ResYAnchor(13,11)
YShift(13,7)
YShift(7,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="exclamdown">
/* VTTTalk glyph 60, char 0xa1 */
/* GUI generated Thu Dec 15 16:15:31 2022 */

/* Y direction */
ResYAnchor(9,1)
YShift(9,3)
YShift(3,12)
ResYAnchor(15,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="f">
/* VTTTalk glyph 32, char 0x66 (f) */
/* GUI generated Mon Dec 12 15:21:34 2022 */

/* Y direction */
ResYAnchor(7,0)
YShift(7,8)
YShift(7,10)
YShift(10,9)
ResYAnchor(14,6)
YShift(14,2)
YShift(14,17)
YShift(17,1)
ResYAnchor(19,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="five">
/* VTTTalk glyph 105, char 0x35 (5) */
/* GUI generated Mon Dec 12 15:43:46 2022 */

/* Y direction */
ResYAnchor(6,12)
YShift(6,7)
YShift(6,9)
YShift(9,8)
ResYAnchor(21,4)
YShift(21,24)
YIPAnchor(21,0,6)
YShift(0,15)
YShift(15,25)
YShift(15,18)
YShift(18,19)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="five.den">
/* VTTTalk glyph 617, char 0xffff */
/* GUI generated Sat Dec 17 16:34:40 2022 */

/* Y direction */
ResYAnchor(1,184)
YShift(1,4)
ResYAnchor(15,187)
YShift(15,16)
YIPAnchor(15,8,1)
YShift(8,5)
YShift(8,23)
YShift(23,26)
YShift(26,27,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="four">
/* VTTTalk glyph 104, char 0x34 (4) */
/* GUI generated Mon Dec 12 15:42:28 2022 */

/* Y direction */
ResYAnchor(3,4)
ResYAnchor(9,12)
YIPAnchor(3,8,9)
YInterpolate(3,12,8)
YShift(8,1)
YShift(8,5)
YShift(5,11,13,2)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="four.den">
/* VTTTalk glyph 616, char 0xffff */
/* GUI generated Sat Dec 17 16:32:04 2022 */

/* Y direction */
ResYAnchor(3,184)
YShift(3,12)
ResYAnchor(10,185)
YIPAnchor(10,0,3)
YShift(0,8)
YShift(0,11)
YShift(11,2,13)
YShift(11,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="fracbar">
/* VTTTalk glyph 611, char 0xffff */
/* GUI generated Sat Dec 17 15:44:47 2022 */

/* Y direction */
YAnchor(2)
YShift(2,3)
YAnchor(5)
YShift(5,0)
YInterpolate(2,1,4,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="fraction">
/* VTTTalk glyph 610, char 0x2044 */
/* GUI generated Sat Dec 17 15:44:00 2022 */

/* Y direction */
ResYAnchor(2,4)
ResYAnchor(5,12)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="g">
/* VTTTalk glyph 33, char 0x67 (g) */
/* GUI generated Mon Dec 12 15:21:59 2022 */

/* Y direction */
ResYAnchor(10,7)
YShift(10,26)
YShift(26,36)
YShift(36,13)
ResYAnchor(21,15)
YShift(21,22)
YIPAnchor(10,4,21)
YShift(4,32)
YShift(32,1)
YShift(32,35)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="germandbls">
/* VTTTalk glyph 543, char 0xdf */
/* GUI generated Thu Dec 15 17:30:31 2022 */

/* Y direction */
ResYAnchor(22,10)
YShift(22,41)
YShift(41,1)
ResYAnchor(26,1)
YShift(26,17)
YInterpolate(22,7,35,8,32,11,26)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="grave">
/* VTTTalk glyph 191, char 0x60 (`) */
/* GUI generated Fri Jul 28 13:26:14 2023 */



/* Y direction */
ResYAnchor(2,0)
YDist(2,1,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="greater">
/* VTTTalk glyph 120, char 0x3e (&gt;) */
/* GUI generated Tue Aug  8 12:45:51 2023 */

/* Y direction */
YAnchor(2)
YDelta(2,1@16,-1@18,1@22)
YShift(2,3)
YDist(2,6,&gt;=)
YShift(6,5)
YInterpolate(6,0,4,1,2)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="greaterequal">
/* VTTTalk glyph 122, char 0x2265 */
/* GUI generated Sat Dec 17 14:15:00 2022 */

/* Y direction */
YAnchor(8)
YShift(8,7)
YShift(7,2)
YAnchor(2)
YShift(2,3)
YDist(2,6,&gt;=)
YShift(6,5)
YInterpolate(2,1,4,0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="guilsinglleft">
/* VTTTalk glyph 71, char 0x2039 */
/* GUI generated Thu Dec 15 15:50:35 2022 */

/* Y direction */
YAnchor(2)
YShift(2,1)
YDist(2,5,&gt;=)
YShift(5,6)
YInterpolate(2,3,0,4,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="guilsinglright">
/* VTTTalk glyph 72, char 0x203a */
/* GUI generated Thu Dec 15 15:51:11 2022 */

/* Y direction */
YAnchor(2)
YShift(2,3)
YDist(2,6,&gt;=)
YShift(6,5)
YInterpolate(2,1,4,0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="h">
/* VTTTalk glyph 34, char 0x68 (h) */
/* GUI generated Mon Dec 12 15:22:09 2022 */

/* Y direction */
ResYAnchor(0,0)
ResYAnchor(5,7)
YShift(5,20)
YShift(20,2)
YShift(2,23)
ResYAnchor(25,10)
YShift(25,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hbar">
/* VTTTalk glyph 462, char 0x127 */
/* GUI generated Thu Dec 15 11:46:13 2022 */

/* Y direction */
ResYAnchor(26,10)
YShift(26,14)
ResYAnchor(31,0)
YIPAnchor(31,6,26)
YDist(6,2,&gt;=)
YShift(2,27)
YShift(2,33)
YShift(33,30)
YShift(6,21)
YShift(21,3)
YShift(3,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hyphen">
/* VTTTalk glyph 82, char 0x2d (-) */
/* GUI generated Fri Jul 28 13:24:40 2023 */

/* Y direction */
YAnchor(0,188)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="i">
/* VTTTalk glyph 35, char 0x69 (i) */
/* GUI generated Mon Dec 12 15:22:24 2022 */

/* Y direction */
ResYAnchor(12,10)
YShift(12,13)
YShift(13,19)
ResYAnchor(17,6)
YShift(17,16)
YDist(17,3)
YShift(3,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="iogonek">
/* VTTTalk glyph 475, char 0x12f */
/* GUI generated Thu Dec 15 12:09:39 2022 */

/* Y direction */
ResYAnchor(17,6)
YShift(17,16)
YDist(17,3,&gt;=)
YShift(3,9)
ResYAnchor(37,10)
YShift(37,22)
YShift(37,14)
YShift(14,19)
YDist(37,31,&gt;=)
YShift(31,29)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="j">
/* VTTTalk glyph 36, char 0x6a (j) */
/* GUI generated Mon Dec 12 15:22:38 2022 */

/* Y direction */
ResYAnchor(20,15)
ResYAnchor(31,6)
YShift(31,30)
YDist(31,3)
YShift(3,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="k">
/* VTTTalk glyph 37, char 0x6b (k) */
/* GUI generated Mon Dec 12 15:24:25 2022 */

/* Y direction */
ResYAnchor(0,0)
ResYAnchor(3,6)
ResYAnchor(12,10)
YShift(12,9)
YInterpolate(12,10,6,2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="l">
/* VTTTalk glyph 38, char 0x6c (l) */
/* GUI generated Tue Dec 13 14:27:29 2022 */

/* Y direction */
ResYAnchor(6,0)
YShift(6,5)
ResYAnchor(16,11)
YShift(16,15)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="less">
/* VTTTalk glyph 119, char 0x3c (&lt;) */
/* GUI generated Tue Aug  8 12:45:41 2023 */

/* Y direction */
YAnchor(6)
YDelta(6,1@16,-1@18,1@22)
YShift(6,5)
YDist(6,2,&gt;=)
YShift(2,3)
YInterpolate(6,0,4,1,2)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="lessequal">
/* VTTTalk glyph 121, char 0x2264 */
/* GUI generated Sat Dec 17 14:14:19 2022 */

/* Y direction */
YAnchor(7)
YShift(7,10)
YShift(10,6)
YAnchor(6)
YShift(6,5)
YDist(6,2,&gt;=)
YShift(2,3)
YInterpolate(6,0,4,1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lslash">
/* VTTTalk glyph 490, char 0x142 */
/* GUI generated Wed Dec 14 14:36:37 2022 */

/* Y direction */
ResYAnchor(6,0)
YShift(6,5)
ResYAnchor(20,11)
YShift(20,19)
YInterpolate(20,1,2,0,11,3,8,10,9,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="m">
/* VTTTalk glyph 39, char 0x6d (m) */
/* GUI generated Mon Dec 12 15:25:53 2022 */

/* Y direction */
ResYAnchor(0,6)
ResYAnchor(6,7)
YShift(6,17)
YShift(17,32)
YShift(32,14)
YShift(14,35)
YShift(6,44)
YShift(44,3)
YShift(3,47)
ResYAnchor(49,10)
YShift(49,25)
YShift(49,37)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="middotcat">
/* VTTTalk glyph 624, char 0xffff */
/* GUI generated Tue Dec 13 14:56:12 2022 */

/* Y direction */
YAnchor(3)
YShift(3,9)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="middotcat.cap">
/* VTTTalk glyph 625, char 0xffff */
/* GUI generated Tue Dec 13 14:56:18 2022 */

/* Y direction */
YAnchor(3)
YShift(3,9)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="minus">
/* VTTTalk glyph 113, char 0x2212 */
/* GUI generated Fri Dec 16 11:14:43 2022 */

/* Y direction */
YAnchor(1,188)
YShift(1,2)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="mu">
/* VTTTalk glyph 125, char 0xb5 */
/* GUI generated Wed Dec 14 14:15:03 2022 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,3)
YShift(0,15)
YShift(15,23)
YShift(23,18)
ResYAnchor(5,14)
ResYAnchor(7,6)
YShift(7,19)
ResYAnchor(22,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="multiply">
/* VTTTalk glyph 118, char 0xd7 */
/* GUI generated Tue Aug  8 12:44:38 2023 */

/* Y direction */
YAnchor(11)
YDelta(11,1@12,-1@14..15)
YShift(11,1)
YShift(11,5)
YAnchor(5)
YShift(5,7)
YInterpolate(11,10,2,0,9,3,6,8,4,5)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="n">
/* VTTTalk glyph 40, char 0x6e (n) */
/* GUI generated Mon Dec 12 15:26:12 2022 */

/* Y direction */
ResYAnchor(0,6)
ResYAnchor(25,10)
YShift(25,13)
ResYAnchor(5,7)
YShift(5,20)
YShift(20,2)
YShift(2,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="nine">
/* VTTTalk glyph 109, char 0x39 (9) */
/* GUI generated Tue Dec 13 14:48:56 2022 */

/* Y direction */
ResYAnchor(0,12)
ResYAnchor(10,5)
YShift(10,19)
YInterpolate(0,16,1,4,25,10)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="nine.den">
/* VTTTalk glyph 621, char 0xffff */
/* GUI generated Sat Dec 17 16:44:05 2022 */

/* Y direction */
YAnchor(10,186)
YShift(10,19)
YAnchor(17,185)
YInterpolate(17,16,1,4,25,7,22,28,13,10)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="notequal">
/* VTTTalk glyph 115, char 0x2260 */
/* GUI generated Sat Dec 17 14:06:19 2022 */

/* Y direction */
YAnchor(6)
YDelta(6,-1@15;25)
YShift(6,14)
YDist(6,2,&gt;=)
YDelta(2,1@12..15,-1@17..18)
YShift(2,16)
YShift(2,1)
YShift(1,19)
YShift(1,21)
YAnchor(21)
YShift(6,7)
YShift(7,9)
YAnchor(9)
YDelta(9,-1@13)
YShift(7,11)

/* X direction */

Smooth()




    </glyphProgram>

    <glyphProgram name="numbersign">
/* VTTTalk glyph 126, char 0x23 (#) */
/* GUI generated Wed Dec 14 14:16:41 2022 */

/* Y direction */
ResYAnchor(8,3)
YShift(8,12)
YAnchor(27)
YShift(27,23)
YIPAnchor(27,4,8)
YShift(4,17)
YShift(4,31)
YDist(4,3,&gt;=)
YShift(3,18)
YShift(3,28)
YShift(3,0)
YShift(0,21)
YShift(0,25)
YShift(4,7)
YShift(7,10)
YShift(10,14)

/* X direction */

Smooth()



    </glyphProgram>

    <glyphProgram name="o">
/* VTTTalk glyph 41, char 0x6f (o) */
/* GUI generated Mon Dec 12 15:10:08 2022 */

/* Y direction */
ResYAnchor(6,7)
YShift(6,27)
ResYAnchor(15,11)
YShift(15,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="oe">
/* VTTTalk glyph 523, char 0x153 */
/* GUI generated Wed Dec 14 13:03:38 2022 */

/* Y direction */
ResYAnchor(3,11)
YShift(3,49)
YShift(49,0)
ResYAnchor(12,7)
YShift(12,58)
YShift(58,15)
ResYAnchor(18,7)
YShift(18,37)
YIPAnchor(3,24,18)
YShift(24,40)
ResYAnchor(31,10)
YShift(31,30)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="ohorn">
/* VTTTalk glyph 524, char 0x1a1 */
/* GUI generated Wed Dec 14 13:04:38 2022 */

/* Y direction */
ResYAnchor(6,6)
YDist(6,10,&gt;=)
YShift(6,39)
YShift(39,18)
YShift(39,17)
YShift(17,14)
ResYAnchor(27,11)
YShift(27,33)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="one">
/* VTTTalk glyph 101, char 0x31 (1) */
/* GUI generated Mon Dec 12 15:39:05 2022 */

/* Y direction */
ResYAnchor(1,12)
YShift(1,2)
YShift(2,9)
ResYAnchor(7,5)
YShift(7,4)
YShift(4,6)
YShift(6,5)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="one.den">
/* VTTTalk glyph 613, char 0xffff */
/* GUI generated Sat Dec 17 15:58:44 2022 */

/* Y direction */
ResYAnchor(1,185)
YShift(1,3)
YShift(3,9)
ResYAnchor(7,184)
YInterpolate(1,5,4,6,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ordfeminine">
/* VTTTalk glyph 130, char 0xaa */
/* GUI generated Mon Dec 19 11:37:02 2022 */

/* Y direction */
ResYAnchor(40,0)
YShift(40,33)
YDist(40,17,&gt;=)
YDelta(17,-1@9)
YShift(17,9)
YInterpolate(17,54,53,26,27,40)
YShift(17,49)
YShift(49,13)
YShift(49,52)
YDist(17,61,&gt;=)
YShift(61,60)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ordmasculine">
/* VTTTalk glyph 131, char 0xba */
/* GUI generated Sat Dec 17 14:40:50 2022 */

/* Y direction */
ResYAnchor(3,0)
YShift(3,21)
YDist(3,9,&gt;=)
YShift(9,15)
YDist(9,25,&gt;=)
YShift(25,24)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="oslash">
/* VTTTalk glyph 522, char 0xf8 */
/* GUI generated Tue Dec 20 16:34:33 2022 */

/* Y direction */
ResYAnchor(3,7)
YDist(3,7,&gt;=)
YShift(3,30)
ResYAnchor(18,11)
YDist(18,22,&gt;=)
YShift(18,40)
YInterpolate(3,6,9,37,46,36,47,24,21,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="p">
/* VTTTalk glyph 42, char 0x70 (p) */
/* GUI generated Mon Dec 12 15:26:28 2022 */

/* Y direction */
ResYAnchor(1,14)
ResYAnchor(2,6)
ResYAnchor(7,7)
YShift(7,20)
YShift(20,4)
YShift(4,23)
ResYAnchor(13,11)
YShift(13,16)
YShift(13,27)
YShift(27,24)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="paragraph">
/* VTTTalk glyph 99, char 0xb6 */
/* GUI generated Thu Dec 15 17:50:54 2022 */

/* Y direction */
ResYAnchor(8,3)
YShift(8,0)
YDist(8,1)
ResYAnchor(11,8)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="parenleft">
/* VTTTalk Unicode 0x28 (() */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(11)	/* min */
YAnchor(3)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="parenright">
/* VTTTalk Unicode 0x29 ()) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(3)	/* min */
YAnchor(11)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="percent">
/* VTTTalk glyph 127, char 0x25 (%) */
/* GUI generated Sat Dec 17 14:36:57 2022 */

/* Y direction */
ResYAnchor(9,5)
YShift(9,20)
YDist(9,3,&gt;=)
YShift(3,26)
YShift(3,42)
ResYAnchor(15,4)
ResYAnchor(32,13)
YShift(32,55)
YDist(32,38,&gt;=)
YShift(38,13)
YShift(38,49)
ResYAnchor(44,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="period">
/* VTTTalk glyph 53, char 0x2e (.) */
/* GUI generated Tue Dec 13 14:38:53 2022 */

/* Y direction */
ResYAnchor(3,11)
YShift(3,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="plus">
/* VTTTalk glyph 111, char 0x2b (+) */
/* GUI generated Tue Dec 20 16:40:29 2022 */

/* Y direction */
YAnchor(1,188)
YShift(1,9)
YShift(1,11)
YAnchor(11)
YShift(1,2)
YShift(2,4)
YAnchor(4)
YDelta(4,1@9,3/4@12,1@13;17,-1@25..26)
YShift(2,6)

/* X direction */

Smooth()



    </glyphProgram>

    <glyphProgram name="plusminus">
/* VTTTalk glyph 123, char 0xb1 */
/* GUI generated Sat Dec 17 14:15:51 2022 */

/* Y direction */
YAnchor(13)
YShift(13,12)
YShift(12,10)
YAnchor(10)
YShift(10,9)
YAnchor(9)
YShift(9,0)
YShift(9,6)
YShift(6,3)
YShift(6,5)
YAnchor(5)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="q">
/* VTTTalk glyph 43, char 0x71 (q) */
/* GUI generated Mon Dec 12 15:26:41 2022 */

/* Y direction */
ResYAnchor(1,14)
ResYAnchor(5,11)
YShift(5,21)
YShift(21,24)
YShift(24,2)
ResYAnchor(11,7)
YShift(11,15)
YShift(15,25)
YShift(25,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="question">
/* VTTTalk glyph 57, char 0x3f (?) */
/* GUI generated Thu Dec 15 12:30:20 2022 */

/* Y direction */
ResYAnchor(21,1)
YShift(21,14)
ResYAnchor(40,11)
YShift(40,34)
YShift(34,1)
YAnchor(1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="questiondown">
/* VTTTalk glyph 59, char 0xbf */
/* GUI generated Thu Dec 15 16:14:53 2022 */

/* Y direction */
ResYAnchor(9,1)
YShift(9,3)
YShift(3,13)
ResYAnchor(33,11)
YShift(33,26)
YInterpolate(33,20,19,39,40,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotedbl">
/* VTTTalk glyph 128, char 0x22 (") */
/* GUI generated Sat Dec 17 14:38:03 2022 */

/* Y direction */
ResYAnchor(6,0)
YShift(6,2)
YDist(6,4,&gt;=)

YDelta(4,-1@12)

YShift(4,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotedblleft">
/* VTTTalk glyph 63, char 0x201c */
/* GUI generated Thu Dec 15 15:52:50 2022 */

/* Y direction */
ResYAnchor(0,0)
YShift(0,9)
YDist(0,5,&gt;=)
YShift(5,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotedblright">
/* VTTTalk glyph 64, char 0x201d */
/* GUI generated Thu Dec 15 15:53:50 2022 */

/* Y direction */
ResYAnchor(14,0)
YShift(14,5)
YDist(14,9,&gt;=)
YShift(9,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quoteleft">
/* VTTTalk glyph 66, char 0x2018 */
/* GUI generated Thu Dec 15 15:57:03 2022 */

/* Y direction */
ResYAnchor(0,0)
YDist(0,6,&gt;=)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="quoteright">
/* VTTTalk glyph 67, char 0x2019 */
/* GUI generated Thu Dec 15 15:57:22 2022 */

/* Y direction */
ResYAnchor(5,0)
YDist(5,0,&gt;=)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="quotesingle">
/* VTTTalk glyph 129, char 0x27 (') */
/* GUI generated Sat Dec 17 14:38:24 2022 */

/* Y direction */
ResYAnchor(2,0)
YDist(2,1,&gt;=)
YDelta(1,-1@12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="r">
/* VTTTalk glyph 44, char 0x72 (r) */
/* GUI generated Tue Dec 20 15:53:44 2022 */

/* Y direction */
ResYAnchor(0,10)
YShift(0,1)
YShift(1,20)
ResYAnchor(5,6)
YShift(5,4)
YShift(5,10)
YAnchor(10)
YShift(10,13)
YShift(13,7)
YShift(7,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="registered">
/* VTTTalk glyph 92, char 0xae */
/* GUI generated Fri Dec 16 15:00:06 2022 */

/* Y direction */
YAnchor(6)
YShift(6,30)
ResYAnchor(15,1)
YShift(15,21)
YIPAnchor(15,46,45,6)
YInterpolate(46,63,62,53,43,45)
YShift(46,61)
YShift(45,39)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="s">
/* VTTTalk glyph 45, char 0x73 (s) */
/* GUI generated Mon Dec 12 15:27:23 2022 */

/* Y direction */
ResYAnchor(3,11)
YShift(3,10)
ResYAnchor(23,7)
YShift(23,30)
YInterpolate(3,13,0,16,17,37,36,20,33,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="section">
/* VTTTalk glyph 98, char 0xa7 */
/* GUI generated Thu Dec 15 17:53:21 2022 */

/* Y direction */
ResYAnchor(12,3)
YShift(12,19)
YAnchor(41)
YShift(41,48)
YInterpolate(41,54,35,55,62,61,71,72,26,6,25,12)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="semicolon">
/* VTTTalk glyph 56, char 0x3b (;) */
/* GUI generated Wed Dec 14 14:33:26 2022 */

/* Y direction */
ResYAnchor(9,7)
YShift(9,3)
YAnchor(17)
YDist(17,12,&gt;=)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="seven">
/* VTTTalk glyph 107, char 0x37 (7) */
/* GUI generated Tue Dec 13 14:46:43 2022 */

/* Y direction */
ResYAnchor(2,12)
ResYAnchor(7,4)
YShift(7,6)
YShift(6,0)
YShift(6,4)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="seven.den">
/* VTTTalk glyph 619, char 0xffff */
/* GUI generated Sat Dec 17 16:39:55 2022 */

/* Y direction */
ResYAnchor(1,185)
ResYAnchor(7,184)
YShift(7,6,4,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="six">
/* VTTTalk glyph 106, char 0x36 (6) */
/* GUI generated Tue Dec 13 14:46:25 2022 */

/* Y direction */
ResYAnchor(10,13)
YShift(10,25)
ResYAnchor(17,4)
YShift(17,0)
YInterpolate(10,19,4,1,16,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="six.den">
/* VTTTalk glyph 618, char 0xffff */
/* GUI generated Sat Dec 17 16:38:53 2022 */

/* Y direction */
ResYAnchor(10,187)
YShift(10,25)
ResYAnchor(17,184)
YInterpolate(10,13,22,28,7,19,4,1,16,17)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="slash">
/* VTTTalk Unicode 0x2f (/) */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(2)	/* min */
YAnchor(0)	/* max */

Smooth()


    </glyphProgram>

    <glyphProgram name="space">
/* VTTTalk Unicode 0x20 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="sterling">
/* VTTTalk glyph 134, char 0xa3 */
/* GUI generated Mon Dec 19 11:40:25 2022 */

/* Y direction */
ResYAnchor(1,12)
YShift(1,39)
YShift(39,2)
ResYAnchor(17,5)
YShift(17,24)
YIPAnchor(17,36,1)
YDelta(36,1@9;13..14;18)
YShift(36,6)
YShift(36,33)
YShift(33,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="t">
/* VTTTalk glyph 46, char 0x74 (t) */
/* GUI generated Mon Dec 12 15:27:34 2022 */

/* Y direction */
ResYAnchor(9,10)
YShift(9,8)
ResYAnchor(19,6)
YDist(19,21,&gt;=)
YShift(19,23)
YShift(19,18)
YShift(18,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tbar">
/* VTTTalk glyph 550, char 0x167 */
/* GUI generated Thu Dec 15 18:37:16 2022 */

/* Y direction */
ResYAnchor(6,6)
YDist(6,8,&gt;=)
YShift(6,10)
YShift(6,5)
YShift(5,13)
YShift(13,14)
YAnchor(14)
YShift(14,3)
YShift(3,0)
YShift(0,17)
YAnchor(25,10)
YShift(25,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="thorn">
/* VTTTalk glyph 596, char 0xfe */
/* GUI generated Thu Dec 15 11:54:01 2022 */

/* Y direction */
ResYAnchor(1,14)
ResYAnchor(2,0)
ResYAnchor(7,7)
YShift(7,20)
YShift(20,4)
YShift(4,23)
ResYAnchor(13,11)
YShift(13,16)
YShift(13,27)
YShift(27,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="three">
/* VTTTalk glyph 103, char 0x33 (3) */
/* GUI generated Mon Dec 12 15:40:58 2022 */

/* Y direction */
ResYAnchor(2,4)
YShift(2,4)
YShift(2,1)
YShift(1,26)
ResYAnchor(12,12)
YShift(12,13)
YShift(12,15)
YShift(15,14)
YIPAnchor(12,21,2)
YShift(21,6,5)
YShift(6,25)
YShift(25,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="three.den">
/* VTTTalk glyph 615, char 0xffff */
/* GUI generated Sat Dec 17 16:21:00 2022 */

/* Y direction */
ResYAnchor(2,184)
YShift(2,1)
YShift(1,4,22)
ResYAnchor(12,187)
YShift(12,13)
YInterpolate(12,20,21,5,2)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="trademark">
/* VTTTalk glyph 94, char 0x2122 */
/* GUI generated Fri Dec 16 14:47:10 2022 */

/* Y direction */
ResYAnchor(2,0)
YShift(2,0)
YShift(0,5)
YDist(2,7,&gt;=)
YInterpolate(7,14,20,15,12,2)
YShift(7,17)
YShift(17,11)
YShift(2,18)
YShift(18,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="two">
/* VTTTalk glyph 102, char 0x32 (2) */
/* GUI generated Mon Dec 12 15:39:15 2022 */

/* Y direction */
ResYAnchor(1,12)
YShift(1,24)
YShift(24,23,2)
ResYAnchor(16,5)
YShift(16,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="two.den">
/* VTTTalk glyph 614, char 0xffff */
/* GUI generated Sat Dec 17 16:05:40 2022 */

/* Y direction */
ResYAnchor(1,185)
YShift(1,23)
YShift(1,24)
YShift(24,2)
ResYAnchor(16,186)
YShift(16,9)
YInterpolate(16,19,6,3,22,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="u">
/* VTTTalk glyph 47, char 0x75 (u) */
/* GUI generated Tue Dec 13 14:34:20 2022 */

/* Y direction */
ResYAnchor(1,10)
ResYAnchor(5,11)
YShift(5,20)
YShift(20,2)
YShift(2,23)
ResYAnchor(12,6)
YShift(12,25)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uhorn">
/* VTTTalk glyph 568, char 0x1b0 */
/* GUI generated Thu Dec 15 16:54:40 2022 */

/* Y direction */
ResYAnchor(1,10)
ResYAnchor(5,11)
YShift(5,20)
YShift(20,2)
YShift(2,23)
ResYAnchor(12,6)
YDist(12,28,&gt;=)
YShift(12,24)
YShift(24,32)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="underscore">
/* VTTTalk glyph 87, char 0x5f (_) */
/* GUI generated Tue Dec 13 14:59:21 2022 */

/* Y direction */
YDownToGrid(1)
YAnchor(1)
YShift(1,0)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni00A0">
/* VTTTalk Unicode 0xa0 */
/* ACT generated Wed Nov 30 17:14:36 2022 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni00A80300">
/* VTTTalk glyph 649, char 0x1fed */
/* GUI generated Thu Dec 15 17:04:30 2022 */

/* Y direction */
YAnchor(13)
YShift(13,7)
YDist(13,2,&gt;=)
YDist(2,0,&gt;=)
YInterpolate(0,3,1,2)
YShift(13,25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni00A80300.cap">
/* VTTTalk glyph 673, char 0xffff */
/* GUI generated Thu Dec 15 17:45:43 2022 */

/* Y direction */
YAnchor(13)
YShift(13,7)
YDist(13,2,&gt;=)
YShift(2,1)
YDist(2,0,&gt;=)
YShift(0,3)
YShift(13,25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni00A80301">
/* VTTTalk glyph 648, char 0x1fee */
/* GUI generated Thu Dec 15 16:05:49 2022 */

/* Y direction */
YAnchor(13)
YShift(13,7)
YDist(13,1,&gt;=)
YShift(1,2)
YDist(1,3,&gt;=)
YShift(3,0)
YShift(13,25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni00A80301.cap">
/* VTTTalk glyph 672, char 0xffff */
/* GUI generated Thu Dec 15 17:44:17 2022 */

/* Y direction */
YAnchor(13)
YShift(13,7)
YDist(13,1,&gt;=)
YShift(1,2)
YDist(1,3,&gt;=)
YShift(3,0)
YShift(13,25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni00A80304">
/* VTTTalk glyph 651, char 0xffff */
/* GUI generated Thu Dec 15 17:10:17 2022 */

/* Y direction */
YAnchor(13)
YShift(13,7)
YDist(13,1,&gt;=)
YShift(1,2)
YShift(13,25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni00A80304.cap">
/* VTTTalk glyph 675, char 0xffff */
/* GUI generated Fri Dec 16 10:03:13 2022 */

/* Y direction */
YAnchor(13)
YShift(13,7)
YDist(13,1,&gt;=)
YShift(1,2)
YShift(13,25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni00A8030C">
/* VTTTalk glyph 650, char 0xffff */
/* GUI generated Thu Dec 15 17:05:44 2022 */

/* Y direction */
YAnchor(16)
YShift(16,10)
YDist(16,0,&gt;=)
YDist(0,2,&gt;=)
YShift(2,4)
YInterpolate(0,3,5,1,2)
YShift(16,28)
YShift(28,22)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni00A8030C.cap">
/* VTTTalk glyph 674, char 0xffff */
/* GUI generated Fri Dec 16 10:01:33 2022 */

/* Y direction */

YAnchor(16)
YShift(16,10)
YShift(16,28)
YShift(28,22)

YDist(16,0,&gt;=)
YDist(0,2,&gt;=)
YShift(2,4)
YInterpolate(2,1,5,3,0)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni00AB">
/* VTTTalk glyph 69, char 0xab */
/* GUI generated Thu Dec 15 15:46:20 2022 */

/* Y direction */
YAnchor(1)
YShift(1,0)
YDist(1,4,&gt;=)
YShift(4,5)
YInterpolate(1,9,2,13,6,10,3,4)
YShift(4,11)
YShift(11,12)
YShift(1,8)
YShift(8,7)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni00BB">
/* VTTTalk glyph 70, char 0xbb */
/* GUI generated Thu Dec 15 15:47:47 2022 */

/* Y direction */
YAnchor(9)
YShift(9,10)
YShift(9,2)
YShift(2,3)
YDist(9,13,&gt;=)
YShift(13,12)
YInterpolate(9,1,8,4,11,0,7,13)
YShift(13,6)
YShift(6,5)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni015E">
/* VTTTalk glyph 343, char 0x15e */
/* GUI generated Thu Dec 15 18:03:00 2022 */

/* Y direction */
ResYAnchor(13,3)
YShift(13,20)
ResYAnchor(34,9)
YShift(34,0)
YShift(34,56)
YInterpolate(13,23,10,26,27,7,6,30,3,34)
YDist(34,44,&gt;=)
YShift(44,45)
YInterpolate(34,35,55,54,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni015F">
/* VTTTalk glyph 542, char 0x15f */
/* GUI generated Tue Dec 20 16:37:36 2022 */

/* Y direction */
ResYAnchor(3,11)
YShift(3,35)
YShift(3,6)
YShift(6,28)
YDist(3,16,&gt;=)
YShift(16,17)
YInterpolate(16,23,10,26,27,7,3)
ResYAnchor(48,7)
YShift(48,55)
YInterpolate(3,38,0,41,42,62,61,45,58,48)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0162">
/* VTTTalk glyph 350, char 0x162 */
/* GUI generated Tue Dec 13 14:53:41 2022 */

/* Y direction */
ResYAnchor(2,2)
YShift(2,1)
YShift(1,5)
ResYAnchor(30,8)
YShift(30,7)
YDist(30,17,&gt;=)
YShift(17,18)
YInterpolate(17,14,24,11,27,28,8,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0163">
/* VTTTalk glyph 549, char 0x163 */
/* GUI generated Thu Dec 15 17:31:45 2022 */

/* Y direction */
ResYAnchor(10,6)
YDist(10,12,&gt;=)
YShift(10,14)
YShift(10,9)
YShift(9,17)
ResYAnchor(26,10)
YShift(26,25)
YShift(26,27)
YShift(27,30)
YShift(30,1)
YDist(26,40,&gt;=)
YShift(40,41)
YInterpolate(40,50,0,31,26)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni018F">
/* VTTTalk glyph 398, char 0x18f */
/* GUI generated Wed Dec 14 14:35:34 2022 */

/* Y direction */
ResYAnchor(6,9)
YShift(6,32)
ResYAnchor(26,3)
YShift(26,19)
YIPAnchor(26,36,6)
YShift(36,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01EA">
/* VTTTalk glyph 322, char 0x1ea */
/* GUI generated Tue Dec 13 12:57:28 2022 */

/* Y direction */
ResYAnchor(12,3)
YShift(12,45)
ResYAnchor(21,9)
YShift(21,3)
YShift(21,36)
YDist(21,29,&gt;=)
YShift(29,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01EB">
/* VTTTalk glyph 521, char 0x1eb */
/* GUI generated Wed Dec 14 12:56:29 2022 */

/* Y direction */
ResYAnchor(12,7)
YShift(12,42)
ResYAnchor(21,11)
YDist(21,29,&gt;=2)
YShift(29,28)
YShift(21,36)
YShift(36,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0237">
/* VTTTalk glyph 476, char 0x237 */
/* GUI generated Wed Dec 14 12:44:16 2022 */

/* Y direction */
ResYAnchor(8,15)
YShift(8,9)
ResYAnchor(19,6)
YShift(19,18)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0259">
/* VTTTalk glyph 597, char 0x259 */
/* GUI generated Thu Dec 15 11:59:56 2022 */

/* Y direction */
ResYAnchor(1,7)
YShift(1,0)
ResYAnchor(13,11)
YShift(13,30)
YInterpolate(13,33,1)
YShift(33,34)
YShift(33,20)
YShift(20,19)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni02BE">
/* VTTTalk glyph 186, char 0x2be */
/* GUI generated Thu Dec 15 12:34:17 2022 */

/* Y direction */
YAnchor(11)
YShift(11,10)
YDist(11,3,&gt;=)
YShift(3,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02BF">
/* VTTTalk glyph 185, char 0x2bf */
/* GUI generated Thu Dec 15 12:33:43 2022 */

/* Y direction */
YAnchor(3)
YShift(3,4)
YDist(3,11,&gt;=)
YShift(11,10)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni02C60300">
/* VTTTalk glyph 657, char 0xffff */
/* GUI generated Wed Dec 14 12:53:31 2022 */

/* Y direction */
YAnchor(4)
YShift(4,9)
YDist(4,6,&gt;=2)
YShift(6,2)
YAnchor(2)
YDist(2,0,&gt;=2)
YInterpolate(6,10,5,8,4)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni02C60300.cap">
/* VTTTalk glyph 681, char 0xffff */
/* GUI generated Mon Dec 12 17:36:44 2022 */

/* Y direction */
YAnchor(4)
YShift(4,9)
YDist(4,6,&gt;=2)
YShift(6,2)
YAnchor(2)
YDist(2,0,&gt;=2)
YInterpolate(0,3,1,2)
YInterpolate(6,10,5,8,4)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni02C60301">
/* VTTTalk glyph 656, char 0xffff */
/* GUI generated Tue Dec 13 15:51:13 2022 */

/* Y direction */
YAnchor(4)
YShift(4,9)
YDist(4,6,&gt;=)
YShift(6,0)
YAnchor(0)
YDist(0,2,&gt;=2)
YInterpolate(2,3,1,0)
YInterpolate(6,10,5,8,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02C60301.cap">
/* VTTTalk glyph 680, char 0xffff */
/* GUI generated Mon Dec 12 17:31:55 2022 */

/* Y direction */
YAnchor(4)
YShift(4,9)
YDist(4,6,&gt;=2)
YShift(6,0)
YAnchor(0)
YDist(0,2,&gt;=2)
YInterpolate(2,3,1,0)
YInterpolate(4,8,5,10,6)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni02C60303">
/* VTTTalk glyph 659, char 0xffff */
/* GUI generated Thu Dec 15 16:38:24 2022 */

/* Y direction */
YAnchor(26)
YShift(26,31)
YDist(26,28,&gt;=)
YShift(28,13)
YAnchor(13)
YShift(13,6)
YShift(13,22)
YDist(13,0,&gt;=2)
YShift(0,9)
YShift(0,19)
YInterpolate(28,32,27,30,26)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni02C60303.cap">
/* VTTTalk glyph 683, char 0xffff */
/* GUI generated Thu Dec 15 17:39:44 2022 */

/* Y direction */
YAnchor(26)
YShift(26,31)
YDist(26,28,&gt;=)
YShift(28,13)
YAnchor(13)
YDelta(13,8/8@15..17)

YShift(13,6)
YDist(13,0,&gt;=2)
YShift(0,19)
YShift(0,9)
YShift(9,10)
YShift(13,22)
YShift(22,23)
YInterpolate(26,30,27,32,28)

/* X direction */

Smooth()




    </glyphProgram>

    <glyphProgram name="uni02C60309">
/* VTTTalk glyph 658, char 0xffff */
/* GUI generated Wed Dec 14 13:35:59 2022 */

/* Y direction */
YAnchor(16)
YShift(16,21)
YDist(16,18,&gt;=2)
YShift(18,3)
YAnchor(3)
YShift(3,4,5)
YDist(3,13,&gt;=2)
YShift(13,12,11)
YInterpolate(18,22,17,20,16)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni02C60309.cap">
/* VTTTalk glyph 682, char 0xffff */
/* GUI generated Tue Dec 13 14:20:56 2022 */

/* Y direction */
YAnchor(16)
YShift(16,21)
YDist(16,18,&gt;=)
YShift(18,3)
YAnchor(3)
YShift(3,4,5)
YDist(3,13,&gt;=)
YShift(13,11,12)
YInterpolate(18,22,17,20,16)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni02C8">
/* VTTTalk glyph 187, char 0x2c8 */
/* GUI generated Sat Dec 17 14:47:10 2022 */

/* Y direction */
ResYAnchor(3,0)
YDist(3,2,&gt;=)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni02D80300">
/* VTTTalk glyph 653, char 0xffff */
/* GUI generated Fri Dec 16 10:51:02 2022 */

/* Y direction */
YAnchor(11)
YShift(11,4)
YDist(11,2,&gt;=2)
YDist(2,0,&gt;=)
YInterpolate(2,1,3,0)
YDist(11,15,&gt;=)
YShift(15,14)
YShift(15,7)
YShift(7,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02D80300.cap">
/* VTTTalk glyph 677, char 0xffff */
/* GUI generated Fri Dec 16 15:04:12 2022 */

/* Y direction */
YAnchor(11)
YShift(11,4)
YDist(11,15,&gt;=2)
YShift(15,14)
YShift(15,2)
YAnchor(2)
YShift(2,1)
YDist(2,0,&gt;=)
YShift(0,3)
YShift(15,7)
YShift(7,8)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni02D80301">
/* VTTTalk glyph 652, char 0xffff */
/* GUI generated Thu Dec 15 17:11:10 2022 */

/* Y direction */
YAnchor(11)
YShift(11,4)
YDist(11,0,&gt;=2)
YDist(0,2,&gt;=)
YDist(11,15,&gt;=)
YShift(15,14)
YShift(15,7)
YShift(7,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02D80301.cap">
/* VTTTalk glyph 676, char 0xffff */
/* GUI generated Fri Dec 16 10:06:21 2022 */

/* Y direction */
YAnchor(11)
YShift(11,4)
YDist(11,1,&gt;=2)
YDist(1,3,&gt;=)
YInterpolate(3,0,2,1)
YDist(11,15,&gt;=2)
YShift(15,14)
YShift(15,7)
YShift(7,8)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni02D80303">
/* VTTTalk glyph 655, char 0xffff */
/* GUI generated Fri Dec 16 10:54:41 2022 */

/* Y direction */
YAnchor(33)
YShift(33,26)
YDist(33,37,&gt;=)
YShift(37,36)
YShift(37,13)
YAnchor(13)
YShift(13,6)
YDist(13,0,&gt;=2)
YShift(0,19)
YShift(0,9)
YShift(9,10)
YShift(13,22)
YShift(22,23)
YShift(37,29)
YShift(29,30)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni02D80303.cap">
/* VTTTalk glyph 679, char 0xffff */
/* GUI generated Fri Dec 16 15:06:56 2022 */

/* Y direction */
YAnchor(33)
YShift(33,26)
YDist(33,37,&gt;=2)
YShift(37,36)
YShift(37,13)
YAnchor(13)
YShift(13,6)
YDist(13,0,&gt;=2)
YShift(0,19)
YShift(0,9)
YShift(9,10)
YShift(13,22)
YShift(22,23)
YShift(37,29)
YShift(29,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02D80309">
/* VTTTalk glyph 654, char 0xffff */
/* GUI generated Fri Dec 16 10:52:43 2022 */

/* Y direction */
YAnchor(23)
YShift(23,16)
YDist(23,3,&gt;=)
YShift(3,4,5)
YDist(3,13,&gt;=)
YShift(13,11)
YShift(13,12)
YDist(23,27,&gt;=)
YShift(27,26)
YShift(27,19)
YShift(19,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02D80309.cap">
/* VTTTalk glyph 678, char 0xffff */
/* GUI generated Fri Dec 16 15:05:43 2022 */

/* Y direction */
YAnchor(23)
YShift(23,16)
YDist(23,27,&gt;=2)
YShift(27,26)
YShift(27,3)
YAnchor(3)
YShift(3,4,5)
YDist(3,13,&gt;=)
YShift(13,11)
YShift(13,12)
YShift(27,19)
YShift(19,20)

/* X direction */

Smooth()



    </glyphProgram>

    <glyphProgram name="uni0300">
/* VTTTalk glyph 628, char 0x300 */
/* GUI generated Tue Dec 13 15:49:02 2022 */

/* Y direction */
YAnchor(2)
YDist(2,0,&gt;=2)
YInterpolate(0,3,1,2)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0300.cap">
/* VTTTalk glyph 662, char 0xffff */
/* GUI generated Mon Dec 12 17:16:26 2022 */

/* Y direction */
YAnchor(2)
YDist(2,0,&gt;=)
YInterpolate(0,3,1,2)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0301">
/* VTTTalk glyph 626, char 0x301 */
/* GUI generated Tue Dec 13 14:19:11 2022 */

/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=2)
YInterpolate(2,3,1,0)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0301.cap">
/* VTTTalk glyph 660, char 0xffff */
/* GUI generated Mon Dec 12 15:30:29 2022 */

/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=2)
YInterpolate(2,3,1,0)


Smooth()

    </glyphProgram>

    <glyphProgram name="uni0302">
/* VTTTalk glyph 630, char 0x302 */
/* GUI generated Tue Dec 13 15:04:30 2022 */

/* Y direction */
YAnchor(0)
YShift(0,5)
YDist(0,2,&gt;=)
YInterpolate(0,4,1,6,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0302.cap">
/* VTTTalk glyph 663, char 0xffff */
/* GUI generated Mon Dec 12 17:20:07 2022 */

/* Y direction */
YAnchor(0)
YShift(0,5)
YDist(0,2,&gt;=)
YInterpolate(0,4,1,6,2)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0303">
/* VTTTalk glyph 633, char 0x303 */
/* GUI generated Tue Dec 13 15:56:12 2022 */

/* Y direction */
YAnchor(0)
YShift(0,19)
YShift(0,9)
YShift(9,10)
YDist(0,13,&gt;=2)
YShift(13,6)
YShift(13,22)
YShift(22,23)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0303.cap">
/* VTTTalk glyph 666, char 0xffff */
/* GUI generated Tue Dec 13 11:54:55 2022 */

/* Y direction */
YAnchor(4)
YShift(4,23)
YShift(4,13)
YShift(13,14)
YDist(4,17,&gt;=)
YShift(17,10)
YShift(17,0)
YShift(0,1)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0304">
/* VTTTalk glyph 634, char 0x304 */
/* GUI generated Tue Dec 13 15:56:48 2022 */

/* Y direction */
YAnchor(1)
YShift(1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0304.cap">
/* VTTTalk glyph 667, char 0xffff */
/* GUI generated Tue Dec 13 11:55:32 2022 */

/* Y direction */
YAnchor(1)
YShift(1,2)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0306">
/* VTTTalk glyph 632, char 0x306 */
/* GUI generated Tue Dec 13 15:55:10 2022 */

/* Y direction */
YAnchor(7)
YShift(7,0)
YDist(7,11,&gt;=2)
YShift(11,10)
YShift(11,3)
YShift(3,4)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0306.cap">
/* VTTTalk glyph 665, char 0xffff */
/* GUI generated Tue Dec 13 11:52:57 2022 */

/* Y direction */
YAnchor(7)
YShift(7,0)
YDist(7,11,&gt;=)
YShift(11,10)
YShift(11,3)
YShift(3,4)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0307">
/* VTTTalk glyph 636, char 0x307 */
/* GUI generated Tue Dec 13 15:06:12 2022 */

/* Y direction */
YAnchor(3)
YShift(3,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0307.cap">
/* VTTTalk glyph 669, char 0xffff */
/* GUI generated Tue Dec 13 11:56:53 2022 */

/* Y direction */
YAnchor(3)
YShift(3,9)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0308">
/* VTTTalk glyph 635, char 0x308 */
/* GUI generated Tue Dec 13 16:38:40 2022 */

/* Y direction */
YAnchor(3)
YShift(3,9)
YShift(3,15)
YShift(15,21)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0308.cap">
/* VTTTalk glyph 668, char 0xffff */
/* GUI generated Tue Dec 13 11:56:18 2022 */

/* Y direction */
YAnchor(3)
YShift(3,9)
YShift(3,15)
YShift(15,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0309">
/* VTTTalk glyph 639, char 0x309 */
/* GUI generated Tue Dec 13 16:42:22 2022 */

/* Y direction */
YAnchor(3)
YShift(3,4,5)
YDist(3,13,&gt;=3)
YShift(13,11)
YShift(13,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0309.cap">
/* VTTTalk glyph 671, char 0xffff */
/* GUI generated Tue Dec 13 11:57:53 2022 */

/* Y direction */
YAnchor(3)
YShift(3,4,5)
YDist(3,13,&gt;=3)
YShift(13,11)
YShift(13,12)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni030A">
/* VTTTalk glyph 637, char 0x30a */
/* GUI generated Wed Dec 14 14:05:17 2022 */

/* Y direction */
YAnchor(9)
YShift(9,15)
YDist(9,3,&gt;=3)
YShift(3,21)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni030A.cap">
/* VTTTalk glyph 670, char 0xffff */
/* GUI generated Wed Dec 14 14:42:49 2022 */

/* Y direction */
YAnchor(3)
YShift(3,15)
YDist(3,9,&gt;=3)
YShift(9,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030B">
/* VTTTalk glyph 627, char 0x30b */
/* GUI generated Tue Dec 13 15:48:26 2022 */

/* Y direction */
YAnchor(0)
YShift(0,4)
YDist(0,2,&gt;=2)
YShift(2,6)
YInterpolate(2,7,3,5,1,0)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni030B.cap">
/* VTTTalk glyph 661, char 0xffff */
/* GUI generated Tue Dec 13 12:35:32 2022 */

/* Y direction */
YAnchor(0)
YShift(0,4)
YDist(0,2,&gt;=2)
YShift(2,6)
YInterpolate(2,7,3,1,5,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030C">
/* VTTTalk glyph 631, char 0x30c */
/* GUI generated Tue Dec 13 15:05:29 2022 */

/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=)
YShift(2,4)
YInterpolate(0,3,5,1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030C.cap">
/* VTTTalk glyph 664, char 0xffff */
/* GUI generated Tue Dec 13 11:51:56 2022 */

/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=)
YShift(2,4)
YInterpolate(0,3,5,1,2)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0312">
/* VTTTalk glyph 638, char 0x312 */
/* GUI generated Tue Dec 13 16:49:47 2022 */

/* Y direction */
YAnchor(13)
YShift(13,12,11)
YDist(13,3,&gt;=3)
YShift(3,4)
YShift(3,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0315">
/* VTTTalk glyph 629, char 0x315 */
/* GUI generated Wed Dec 14 13:41:56 2022 */

/* Y direction */
YAnchor(2)
YDist(2,0,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0323">
/* VTTTalk glyph 644, char 0x323 */
/* GUI generated Mon Dec 12 17:21:28 2022 */

/* Y direction */
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0324">
/* VTTTalk glyph 643, char 0x324 */
/* GUI generated Thu Dec 15 16:03:33 2022 */

/* Y direction */
YAnchor(9)
YShift(9,3)
YShift(9,21)
YShift(21,15)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0326">
/* VTTTalk glyph 645, char 0x326 */
/* GUI generated Tue Dec 13 12:14:54 2022 */

/* Y direction */
YAnchor(13)
YShift(13,12,11)
YDist(13,3,&gt;=3)
YShift(3,4,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0327">
/* VTTTalk glyph 646, char 0x327 */
/* GUI generated Thu Dec 15 16:04:36 2022 */

/* Y direction */
YAnchor(1)
YDist(1,12,&gt;=)
YShift(12,13)
YInterpolate(12,22,0,3,1)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0328">
/* VTTTalk glyph 647, char 0x328 */
/* GUI generated Thu Dec 15 16:05:04 2022 */

/* Y direction */
YAnchor(3)
YShift(3,4)
YDist(3,12,&gt;=)
YShift(12,11)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni032D">
/* VTTTalk glyph 640, char 0x32d */
/* GUI generated Tue Dec 13 12:02:18 2022 */

/* Y direction */
YAnchor(6)
YDist(6,4,&gt;=)
YShift(4,2)
YInterpolate(6,3,5,1,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni032E">
/* VTTTalk glyph 641, char 0x32e */
/* GUI generated Tue Dec 13 12:17:56 2022 */

/* Y direction */
YAnchor(11)
YShift(11,10)
YShift(11,3)
YShift(3,4)
YDist(11,7,&gt;=)
YShift(7,0)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni0331">
/* VTTTalk glyph 642, char 0x331 */
/* GUI generated Tue Dec 13 11:59:27 2022 */

/* Y direction */
YAnchor(2)
YShift(2,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0E3F">
/* VTTTalk glyph 142, char 0xe3f */
/* GUI generated Tue Dec 20 16:28:14 2022 */

/* Y direction */
ResYAnchor(4,12)
YShift(4,0)
YDist(4,2,&gt;=)
YShift(4,40)
YShift(40,45)
ResYAnchor(5,4)
YDist(5,7,&gt;=)
YShift(5,9)
YShift(5,29)
YShift(29,33)
YIPAnchor(4,39,5)
YShift(39,23)
YInterpolate(23,15,16,39)
YShift(23,24)
YShift(24,34)
YShift(39,38)
YShift(38,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1E28">
/* VTTTalk glyph 265, char 0x1e28 */
/* GUI generated Thu Dec 15 17:18:31 2022 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,8)
YShift(0,11)
YDist(0,22,&gt;=)
YShift(22,23)
YInterpolate(22,32,33,13,0)
ResYAnchor(1,2)
YShift(1,5)
YIPAnchor(1,10,0)
YShift(10,3)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni1E29">
/* VTTTalk glyph 461, char 0x1e29 */
/* GUI generated Thu Dec 15 11:50:13 2022 */

/* Y direction */
ResYAnchor(0,0)
ResYAnchor(5,7)
YShift(5,20)
YShift(20,2)
YShift(2,23)
YAnchor(48,10)
YShift(48,13)
YShift(48,25)
YDist(48,35,&gt;=)
YShift(35,36)
YInterpolate(35,45,46,26,48)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni1E9E">
/* VTTTalk glyph 344, char 0x1e9e */
/* GUI generated Thu Dec 15 17:42:13 2022 */

/* Y direction */
ResYAnchor(12,8)
ResYAnchor(17,3)
YShift(17,8)
ResYAnchor(28,8)
YShift(28,35)
YInterpolate(28,3,22,4,5,21,20,17)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni2025">
/* VTTTalk glyph 62, char 0x2025 */
/* GUI generated Tue Dec 13 14:57:37 2022 */

/* Y direction */
ResYAnchor(3,11)
YShift(3,9)
YShift(3,15)
YShift(15,21)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni20A6">
/* VTTTalk glyph 137, char 0x20a6 */
/* GUI generated Thu Dec 15 12:02:30 2022 */

/* Y direction */
ResYAnchor(2,12)
YShift(2,26)
ResYAnchor(11,4)
YShift(11,15)
YIPAnchor(2,6,11)
YInterpolate(2,33,6)
YInterpolate(6,28,11)
YShift(6,21)
YShift(6,3)
YShift(3,24)
YInterpolate(3,0,30,6)
YDist(6,7,&gt;=)
YShift(7,20)
YShift(7,10)
YShift(10,17)
YInterpolate(10,13,32,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20A9">
/* VTTTalk glyph 143, char 0x20a9 */
/* GUI generated Fri Dec 16 15:21:49 2022 */

/* Y direction */
ResYAnchor(3,12)
YShift(3,23)
ResYAnchor(8,4)
YShift(8,16)
YIPAnchor(3,12,8)
YInterpolate(3,24,29,5,1,12)
YShift(5,21)
YShift(5,6)
YShift(6,18)
YInterpolate(6,10,11,14,15,26,27,31,28,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B1">
/* VTTTalk glyph 138, char 0x20b1 */
/* GUI generated Tue Dec 20 16:23:51 2022 */

/* Y direction */
ResYAnchor(4,4)
YShift(4,25)
ResYAnchor(19,12)
YIPAnchor(19,18,4)
YShift(18,30)
YShift(30,0)
YAnchor(0)
YShift(0,14)
YShift(0,35)
YShift(0,3)
YShift(3,11)
YShift(3,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B9">
/* VTTTalk glyph 141, char 0x20b9 */
/* GUI generated Fri Dec 16 15:23:37 2022 */

/* Y direction */
ResYAnchor(6,4)
YShift(6,4)
ResYAnchor(21,12)
YIPAnchor(21,0,6)
YShift(0,13)
YShift(0,3)
YShift(3,10)
YDist(0,23,&gt;=)
YShift(23,16)
YShift(23,22)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni20BA">
/* VTTTalk glyph 139, char 0x20ba */
/* GUI generated Thu Dec 15 16:42:46 2022 */

/* Y direction */
ResYAnchor(8,4)
ResYAnchor(27,12)
YShift(27,19)
YInterpolate(27,0,17,3,23,22,14,4,13,7,10,8)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="uni20BD">
/* VTTTalk glyph 140, char 0x20bd */
/* GUI generated Thu Dec 15 16:44:10 2022 */

/* Y direction */
ResYAnchor(8,4)
YShift(8,30)
ResYAnchor(25,12)
YIPAnchor(25,20,8)
YShift(20,23)
YShift(20,3)
YShift(3,0)
YDist(20,19,&gt;=)
YShift(19,31)
YShift(19,4)
YShift(4,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2117">
/* VTTTalk glyph 90, char 0x2117 */
/* GUI generated Fri Dec 16 14:57:26 2022 */

/* Y direction */
YAnchor(6)
YShift(6,27)
YAnchor(15)
YShift(15,18)
YIPAnchor(15,37,48,49,6)
YShift(37,54)
YShift(48,55)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2120">
/* VTTTalk glyph 93, char 0x2120 */
/* GUI generated Fri Dec 16 14:53:52 2022 */

/* Y direction */
ResYAnchor(50,0)
YShift(50,40)
YShift(50,13)
YAnchor(13)
YShift(13,20)
YDist(50,49,&gt;=)
YShift(49,43)
YShift(49,33)
YAnchor(33)
YShift(33,0)
YInterpolate(33,3,30,6,7,27,26,10,23,13)
YInterpolate(49,46,52,47,44,50)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uogonek">
/* VTTTalk glyph 567, char 0x173 */
/* GUI generated Thu Dec 15 16:52:50 2022 */

/* Y direction */
ResYAnchor(4,10)
YShift(4,29)
YDist(4,38,&gt;=)
YShift(38,37)
YAnchor(8,11)
YShift(8,23)
YShift(23,5)
YShift(5,26)
ResYAnchor(15,6)
YShift(15,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="v">
/* VTTTalk glyph 48, char 0x76 (v) */
/* GUI generated Tue Dec 13 14:34:29 2022 */

/* Y direction */
ResYAnchor(0,10)
ResYAnchor(1,6)
YShift(1,5)
YInterpolate(0,3,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="w">
/* VTTTalk glyph 49, char 0x77 (w) */
/* GUI generated Tue Dec 13 14:34:45 2022 */

/* Y direction */
ResYAnchor(5,10)
YShift(5,2)
ResYAnchor(6,6)
YShift(6,12)
YInterpolate(5,8,11,3,9,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="x">
/* VTTTalk glyph 50, char 0x78 (x) */
/* GUI generated Tue Dec 13 14:35:03 2022 */

/* Y direction */
ResYAnchor(1,10)
YShift(1,10)
ResYAnchor(3,6)
YShift(3,7)
YInterpolate(1,11,8,2,5,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="y">
/* VTTTalk glyph 51, char 0x79 (y) */
/* GUI generated Tue Dec 13 14:35:39 2022 */

/* Y direction */
ResYAnchor(5,14)
YShift(5,6)
ResYAnchor(12,6)
YShift(12,15)
YInterpolate(5,1,10,11,14,12)

/* X direction */

Smooth()


    </glyphProgram>

    <glyphProgram name="yen">
/* VTTTalk glyph 135, char 0xa5 */
/* GUI generated Tue Dec 13 15:02:08 2022 */

/* Y direction */
ResYAnchor(8,4)
YShift(8,11)
ResYAnchor(22,12)
YIPAnchor(22,4,8)
YShift(4,16)
YDist(4,3,&gt;=)
YShift(3,17)
YShift(3,0)
YShift(0,20)
YShift(4,7)
YShift(7,10)
YShift(7,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="z">
/* VTTTalk glyph 52, char 0x7a (z) */
/* GUI generated Tue Dec 13 14:36:11 2022 */

/* Y direction */
ResYAnchor(1,10)
YShift(1,10)
YShift(10,2,9)
ResYAnchor(6,6)
YShift(6,5)
YShift(5,3)
YShift(5,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zero">
/* VTTTalk glyph 100, char 0x30 (0) */
/* GUI generated Mon Dec 12 15:38:46 2022 */

/* Y direction */
ResYAnchor(3,5)
YShift(3,18)
ResYAnchor(12,13)
YShift(12,32)
YInterpolate(12,39,24,38,25,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zero.den">
/* VTTTalk glyph 612, char 0xffff */
/* GUI generated Sat Dec 17 15:54:41 2022 */

/* Y direction */
ResYAnchor(3,187)
YShift(3,28)
ResYAnchor(12,186)
YShift(12,18)
YInterpolate(3,6,35,24,34,25,15,12)

/* X direction */

Smooth()

    </glyphProgram>

    <extraProgram name="reserved0">
/* VTTTalk glyph 1, char 0x41 (A) */
/* GUI generated Mon Dec 12 14:54:26 2022 */

/* Y direction */
ResYAnchor(2,8)
YShift(2,6)
ResYAnchor(3,2)
YIPAnchor(3,0,2)
YInterpolate(3,8,0)
YShift(0,9)

/* X direction */

Smooth()


    </extraProgram>

  </TSI3>

  <TSI5>
    <glyphgroup name=".notdef" value="1"/>
    <glyphgroup name="A" value="1"/>
    <glyphgroup name="AE" value="1"/>
    <glyphgroup name="Aacute" value="1"/>
    <glyphgroup name="Abreve" value="1"/>
    <glyphgroup name="Acircumflex" value="1"/>
    <glyphgroup name="Adieresis" value="1"/>
    <glyphgroup name="Agrave" value="1"/>
    <glyphgroup name="Amacron" value="1"/>
    <glyphgroup name="Aogonek" value="1"/>
    <glyphgroup name="Aring" value="1"/>
    <glyphgroup name="Atilde" value="1"/>
    <glyphgroup name="B" value="1"/>
    <glyphgroup name="C" value="1"/>
    <glyphgroup name="Cacute" value="1"/>
    <glyphgroup name="Ccaron" value="1"/>
    <glyphgroup name="Ccedilla" value="1"/>
    <glyphgroup name="Ccircumflex" value="1"/>
    <glyphgroup name="Cdotaccent" value="1"/>
    <glyphgroup name="D" value="1"/>
    <glyphgroup name="Dcaron" value="1"/>
    <glyphgroup name="Dcroat" value="1"/>
    <glyphgroup name="E" value="1"/>
    <glyphgroup name="Eacute" value="1"/>
    <glyphgroup name="Ebreve" value="1"/>
    <glyphgroup name="Ecaron" value="1"/>
    <glyphgroup name="Ecircumflex" value="1"/>
    <glyphgroup name="Edieresis" value="1"/>
    <glyphgroup name="Edotaccent" value="1"/>
    <glyphgroup name="Egrave" value="1"/>
    <glyphgroup name="Emacron" value="1"/>
    <glyphgroup name="Eng" value="1"/>
    <glyphgroup name="Eogonek" value="1"/>
    <glyphgroup name="Eth" value="1"/>
    <glyphgroup name="Euro" value="1"/>
    <glyphgroup name="F" value="1"/>
    <glyphgroup name="G" value="1"/>
    <glyphgroup name="Gbreve" value="1"/>
    <glyphgroup name="Gcaron" value="1"/>
    <glyphgroup name="Gcircumflex" value="1"/>
    <glyphgroup name="Gdotaccent" value="1"/>
    <glyphgroup name="H" value="1"/>
    <glyphgroup name="Hbar" value="1"/>
    <glyphgroup name="Hcircumflex" value="1"/>
    <glyphgroup name="I" value="1"/>
    <glyphgroup name="Iacute" value="1"/>
    <glyphgroup name="Ibreve" value="1"/>
    <glyphgroup name="Icircumflex" value="1"/>
    <glyphgroup name="Idieresis" value="1"/>
    <glyphgroup name="Idotaccent" value="1"/>
    <glyphgroup name="Igrave" value="1"/>
    <glyphgroup name="Imacron" value="1"/>
    <glyphgroup name="Iogonek" value="1"/>
    <glyphgroup name="Itilde" value="1"/>
    <glyphgroup name="J" value="1"/>
    <glyphgroup name="Jcircumflex" value="1"/>
    <glyphgroup name="K" value="1"/>
    <glyphgroup name="L" value="1"/>
    <glyphgroup name="Lacute" value="1"/>
    <glyphgroup name="Lcaron" value="1"/>
    <glyphgroup name="Ldot" value="1"/>
    <glyphgroup name="Lslash" value="1"/>
    <glyphgroup name="M" value="1"/>
    <glyphgroup name="N" value="1"/>
    <glyphgroup name="Nacute" value="1"/>
    <glyphgroup name="Ncaron" value="1"/>
    <glyphgroup name="Ntilde" value="1"/>
    <glyphgroup name="O" value="1"/>
    <glyphgroup name="OE" value="1"/>
    <glyphgroup name="Oacute" value="1"/>
    <glyphgroup name="Obreve" value="1"/>
    <glyphgroup name="Ocircumflex" value="1"/>
    <glyphgroup name="Odieresis" value="1"/>
    <glyphgroup name="Ograve" value="1"/>
    <glyphgroup name="Ohorn" value="1"/>
    <glyphgroup name="Ohungarumlaut" value="1"/>
    <glyphgroup name="Omacron" value="1"/>
    <glyphgroup name="Oslash" value="1"/>
    <glyphgroup name="Otilde" value="1"/>
    <glyphgroup name="P" value="1"/>
    <glyphgroup name="Q" value="1"/>
    <glyphgroup name="R" value="1"/>
    <glyphgroup name="Racute" value="1"/>
    <glyphgroup name="Rcaron" value="1"/>
    <glyphgroup name="S" value="1"/>
    <glyphgroup name="Sacute" value="1"/>
    <glyphgroup name="Scaron" value="1"/>
    <glyphgroup name="Scircumflex" value="1"/>
    <glyphgroup name="T" value="1"/>
    <glyphgroup name="Tbar" value="1"/>
    <glyphgroup name="Tcaron" value="1"/>
    <glyphgroup name="Thorn" value="1"/>
    <glyphgroup name="U" value="1"/>
    <glyphgroup name="Uacute" value="1"/>
    <glyphgroup name="Ubreve" value="1"/>
    <glyphgroup name="Ucircumflex" value="1"/>
    <glyphgroup name="Udieresis" value="1"/>
    <glyphgroup name="Ugrave" value="1"/>
    <glyphgroup name="Uhorn" value="1"/>
    <glyphgroup name="Uhungarumlaut" value="1"/>
    <glyphgroup name="Umacron" value="1"/>
    <glyphgroup name="Uogonek" value="1"/>
    <glyphgroup name="Uring" value="1"/>
    <glyphgroup name="Utilde" value="1"/>
    <glyphgroup name="V" value="1"/>
    <glyphgroup name="W" value="1"/>
    <glyphgroup name="Wacute" value="1"/>
    <glyphgroup name="Wcircumflex" value="1"/>
    <glyphgroup name="Wdieresis" value="1"/>
    <glyphgroup name="Wgrave" value="1"/>
    <glyphgroup name="X" value="1"/>
    <glyphgroup name="Y" value="1"/>
    <glyphgroup name="Yacute" value="1"/>
    <glyphgroup name="Ycircumflex" value="1"/>
    <glyphgroup name="Ydieresis" value="1"/>
    <glyphgroup name="Ygrave" value="1"/>
    <glyphgroup name="Z" value="1"/>
    <glyphgroup name="Zacute" value="1"/>
    <glyphgroup name="Zcaron" value="1"/>
    <glyphgroup name="Zdotaccent" value="1"/>
    <glyphgroup name="a" value="1"/>
    <glyphgroup name="aacute" value="1"/>
    <glyphgroup name="abreve" value="1"/>
    <glyphgroup name="acircumflex" value="1"/>
    <glyphgroup name="acute" value="1"/>
    <glyphgroup name="adieresis" value="1"/>
    <glyphgroup name="ae" value="1"/>
    <glyphgroup name="agrave" value="1"/>
    <glyphgroup name="amacron" value="1"/>
    <glyphgroup name="ampersand" value="1"/>
    <glyphgroup name="aogonek" value="1"/>
    <glyphgroup name="approxequal" value="1"/>
    <glyphgroup name="aring" value="1"/>
    <glyphgroup name="asciicircum" value="1"/>
    <glyphgroup name="asciitilde" value="3"/>
    <glyphgroup name="asterisk" value="1"/>
    <glyphgroup name="at" value="1"/>
    <glyphgroup name="atilde" value="1"/>
    <glyphgroup name="b" value="1"/>
    <glyphgroup name="backslash" value="1"/>
    <glyphgroup name="bar" value="1"/>
    <glyphgroup name="braceleft" value="1"/>
    <glyphgroup name="braceright" value="1"/>
    <glyphgroup name="bracketleft" value="1"/>
    <glyphgroup name="bracketright" value="1"/>
    <glyphgroup name="breve" value="1"/>
    <glyphgroup name="bullet" value="1"/>
    <glyphgroup name="c" value="1"/>
    <glyphgroup name="cacute" value="1"/>
    <glyphgroup name="caron" value="1"/>
    <glyphgroup name="ccaron" value="1"/>
    <glyphgroup name="ccedilla" value="1"/>
    <glyphgroup name="ccircumflex" value="1"/>
    <glyphgroup name="cdotaccent" value="1"/>
    <glyphgroup name="cedilla" value="1"/>
    <glyphgroup name="cent" value="1"/>
    <glyphgroup name="circumflex" value="1"/>
    <glyphgroup name="colon" value="1"/>
    <glyphgroup name="colon.fig" value="1"/>
    <glyphgroup name="comma" value="1"/>
    <glyphgroup name="copyright" value="1"/>
    <glyphgroup name="d" value="1"/>
    <glyphgroup name="dagger" value="1"/>
    <glyphgroup name="daggerdbl" value="1"/>
    <glyphgroup name="dcaron" value="1"/>
    <glyphgroup name="dcroat" value="1"/>
    <glyphgroup name="degree" value="1"/>
    <glyphgroup name="dieresis" value="1"/>
    <glyphgroup name="divide" value="1"/>
    <glyphgroup name="dollar" value="1"/>
    <glyphgroup name="dong" value="1"/>
    <glyphgroup name="dotaccent" value="1"/>
    <glyphgroup name="dotlessi" value="1"/>
    <glyphgroup name="e" value="1"/>
    <glyphgroup name="eacute" value="1"/>
    <glyphgroup name="ebreve" value="1"/>
    <glyphgroup name="ecaron" value="1"/>
    <glyphgroup name="ecircumflex" value="1"/>
    <glyphgroup name="edieresis" value="1"/>
    <glyphgroup name="edotaccent" value="1"/>
    <glyphgroup name="egrave" value="1"/>
    <glyphgroup name="eight" value="1"/>
    <glyphgroup name="eight.den" value="1"/>
    <glyphgroup name="eight.inf" value="1"/>
    <glyphgroup name="eight.num" value="1"/>
    <glyphgroup name="eight.sup" value="1"/>
    <glyphgroup name="ellipsis" value="1"/>
    <glyphgroup name="emacron" value="1"/>
    <glyphgroup name="emdash" value="1"/>
    <glyphgroup name="endash" value="1"/>
    <glyphgroup name="eng" value="1"/>
    <glyphgroup name="eogonek" value="1"/>
    <glyphgroup name="equal" value="1"/>
    <glyphgroup name="eth" value="1"/>
    <glyphgroup name="exclam" value="1"/>
    <glyphgroup name="exclamdown" value="1"/>
    <glyphgroup name="f" value="1"/>
    <glyphgroup name="five" value="1"/>
    <glyphgroup name="five.den" value="1"/>
    <glyphgroup name="five.inf" value="1"/>
    <glyphgroup name="five.num" value="1"/>
    <glyphgroup name="five.sup" value="1"/>
    <glyphgroup name="fiveeighths" value="1"/>
    <glyphgroup name="fivesixths" value="1"/>
    <glyphgroup name="four" value="1"/>
    <glyphgroup name="four.den" value="1"/>
    <glyphgroup name="four.inf" value="1"/>
    <glyphgroup name="four.num" value="1"/>
    <glyphgroup name="four.sup" value="1"/>
    <glyphgroup name="fourfifths" value="1"/>
    <glyphgroup name="fracbar" value="1"/>
    <glyphgroup name="fraction" value="1"/>
    <glyphgroup name="g" value="1"/>
    <glyphgroup name="gbreve" value="1"/>
    <glyphgroup name="gcaron" value="1"/>
    <glyphgroup name="gcircumflex" value="1"/>
    <glyphgroup name="gdotaccent" value="1"/>
    <glyphgroup name="germandbls" value="1"/>
    <glyphgroup name="grave" value="1"/>
    <glyphgroup name="greater" value="1"/>
    <glyphgroup name="greaterequal" value="1"/>
    <glyphgroup name="guilsinglleft" value="1"/>
    <glyphgroup name="guilsinglright" value="1"/>
    <glyphgroup name="h" value="1"/>
    <glyphgroup name="hbar" value="1"/>
    <glyphgroup name="hcircumflex" value="1"/>
    <glyphgroup name="hungarumlaut" value="1"/>
    <glyphgroup name="hyphen" value="1"/>
    <glyphgroup name="i" value="1"/>
    <glyphgroup name="i.dot" value="1"/>
    <glyphgroup name="iacute" value="1"/>
    <glyphgroup name="ibreve" value="1"/>
    <glyphgroup name="icircumflex" value="1"/>
    <glyphgroup name="idieresis" value="1"/>
    <glyphgroup name="igrave" value="1"/>
    <glyphgroup name="imacron" value="1"/>
    <glyphgroup name="iogonek" value="1"/>
    <glyphgroup name="itilde" value="1"/>
    <glyphgroup name="j" value="1"/>
    <glyphgroup name="jcircumflex" value="1"/>
    <glyphgroup name="k" value="1"/>
    <glyphgroup name="l" value="1"/>
    <glyphgroup name="lacute" value="1"/>
    <glyphgroup name="lcaron" value="1"/>
    <glyphgroup name="ldot" value="1"/>
    <glyphgroup name="less" value="1"/>
    <glyphgroup name="lessequal" value="1"/>
    <glyphgroup name="lslash" value="1"/>
    <glyphgroup name="m" value="1"/>
    <glyphgroup name="macron" value="1"/>
    <glyphgroup name="middotcat" value="1"/>
    <glyphgroup name="middotcat.cap" value="1"/>
    <glyphgroup name="minus" value="1"/>
    <glyphgroup name="mu" value="1"/>
    <glyphgroup name="multiply" value="1"/>
    <glyphgroup name="n" value="1"/>
    <glyphgroup name="nacute" value="1"/>
    <glyphgroup name="ncaron" value="1"/>
    <glyphgroup name="nine" value="1"/>
    <glyphgroup name="nine.den" value="1"/>
    <glyphgroup name="nine.inf" value="1"/>
    <glyphgroup name="nine.num" value="1"/>
    <glyphgroup name="nine.sup" value="1"/>
    <glyphgroup name="notequal" value="1"/>
    <glyphgroup name="ntilde" value="1"/>
    <glyphgroup name="numbersign" value="1"/>
    <glyphgroup name="o" value="1"/>
    <glyphgroup name="oacute" value="1"/>
    <glyphgroup name="obreve" value="1"/>
    <glyphgroup name="ocircumflex" value="1"/>
    <glyphgroup name="odieresis" value="1"/>
    <glyphgroup name="oe" value="1"/>
    <glyphgroup name="ogonek" value="1"/>
    <glyphgroup name="ograve" value="1"/>
    <glyphgroup name="ohorn" value="1"/>
    <glyphgroup name="ohungarumlaut" value="1"/>
    <glyphgroup name="omacron" value="1"/>
    <glyphgroup name="one" value="1"/>
    <glyphgroup name="one.den" value="1"/>
    <glyphgroup name="one.inf" value="1"/>
    <glyphgroup name="one.num" value="1"/>
    <glyphgroup name="one.sup" value="1"/>
    <glyphgroup name="oneeighth" value="1"/>
    <glyphgroup name="onefifth" value="1"/>
    <glyphgroup name="onehalf" value="1"/>
    <glyphgroup name="onequarter" value="1"/>
    <glyphgroup name="onesixth" value="1"/>
    <glyphgroup name="onethird" value="1"/>
    <glyphgroup name="ordfeminine" value="1"/>
    <glyphgroup name="ordmasculine" value="1"/>
    <glyphgroup name="oslash" value="1"/>
    <glyphgroup name="otilde" value="1"/>
    <glyphgroup name="p" value="1"/>
    <glyphgroup name="paragraph" value="1"/>
    <glyphgroup name="parenleft" value="1"/>
    <glyphgroup name="parenright" value="1"/>
    <glyphgroup name="percent" value="1"/>
    <glyphgroup name="period" value="1"/>
    <glyphgroup name="periodcentered" value="1"/>
    <glyphgroup name="plus" value="1"/>
    <glyphgroup name="plusminus" value="1"/>
    <glyphgroup name="q" value="1"/>
    <glyphgroup name="question" value="1"/>
    <glyphgroup name="questiondown" value="1"/>
    <glyphgroup name="quotedbl" value="1"/>
    <glyphgroup name="quotedblbase" value="1"/>
    <glyphgroup name="quotedblleft" value="1"/>
    <glyphgroup name="quotedblright" value="1"/>
    <glyphgroup name="quoteleft" value="1"/>
    <glyphgroup name="quoteright" value="1"/>
    <glyphgroup name="quotesinglbase" value="1"/>
    <glyphgroup name="quotesingle" value="1"/>
    <glyphgroup name="r" value="1"/>
    <glyphgroup name="racute" value="1"/>
    <glyphgroup name="rcaron" value="1"/>
    <glyphgroup name="registered" value="1"/>
    <glyphgroup name="ring" value="1"/>
    <glyphgroup name="s" value="1"/>
    <glyphgroup name="sacute" value="1"/>
    <glyphgroup name="scaron" value="1"/>
    <glyphgroup name="scircumflex" value="1"/>
    <glyphgroup name="section" value="1"/>
    <glyphgroup name="semicolon" value="1"/>
    <glyphgroup name="seven" value="1"/>
    <glyphgroup name="seven.den" value="1"/>
    <glyphgroup name="seven.inf" value="1"/>
    <glyphgroup name="seven.num" value="1"/>
    <glyphgroup name="seven.sup" value="1"/>
    <glyphgroup name="seveneighths" value="1"/>
    <glyphgroup name="six" value="1"/>
    <glyphgroup name="six.den" value="1"/>
    <glyphgroup name="six.inf" value="1"/>
    <glyphgroup name="six.num" value="1"/>
    <glyphgroup name="six.sup" value="1"/>
    <glyphgroup name="slash" value="1"/>
    <glyphgroup name="space" value="1"/>
    <glyphgroup name="sterling" value="1"/>
    <glyphgroup name="t" value="1"/>
    <glyphgroup name="tbar" value="1"/>
    <glyphgroup name="tcaron" value="1"/>
    <glyphgroup name="thorn" value="1"/>
    <glyphgroup name="three" value="1"/>
    <glyphgroup name="three.den" value="1"/>
    <glyphgroup name="three.inf" value="1"/>
    <glyphgroup name="three.num" value="1"/>
    <glyphgroup name="three.sup" value="1"/>
    <glyphgroup name="threeeighths" value="1"/>
    <glyphgroup name="threefifths" value="1"/>
    <glyphgroup name="threequarters" value="1"/>
    <glyphgroup name="tilde" value="1"/>
    <glyphgroup name="trademark" value="1"/>
    <glyphgroup name="two" value="1"/>
    <glyphgroup name="two.den" value="1"/>
    <glyphgroup name="two.inf" value="1"/>
    <glyphgroup name="two.num" value="1"/>
    <glyphgroup name="two.sup" value="1"/>
    <glyphgroup name="twofifths" value="1"/>
    <glyphgroup name="twothirds" value="1"/>
    <glyphgroup name="u" value="1"/>
    <glyphgroup name="uacute" value="1"/>
    <glyphgroup name="ubreve" value="1"/>
    <glyphgroup name="ucircumflex" value="1"/>
    <glyphgroup name="udieresis" value="1"/>
    <glyphgroup name="ugrave" value="1"/>
    <glyphgroup name="uhorn" value="1"/>
    <glyphgroup name="uhungarumlaut" value="1"/>
    <glyphgroup name="umacron" value="1"/>
    <glyphgroup name="underscore" value="1"/>
    <glyphgroup name="uni00A0" value="1"/>
    <glyphgroup name="uni00A80300" value="1"/>
    <glyphgroup name="uni00A80300.cap" value="1"/>
    <glyphgroup name="uni00A80301" value="1"/>
    <glyphgroup name="uni00A80301.cap" value="1"/>
    <glyphgroup name="uni00A80304" value="1"/>
    <glyphgroup name="uni00A80304.cap" value="1"/>
    <glyphgroup name="uni00A8030C" value="1"/>
    <glyphgroup name="uni00A8030C.cap" value="1"/>
    <glyphgroup name="uni00AB" value="1"/>
    <glyphgroup name="uni00BB" value="1"/>
    <glyphgroup name="uni0122" value="1"/>
    <glyphgroup name="uni0123" value="1"/>
    <glyphgroup name="uni0136" value="1"/>
    <glyphgroup name="uni0137" value="1"/>
    <glyphgroup name="uni013B" value="1"/>
    <glyphgroup name="uni013C" value="1"/>
    <glyphgroup name="uni0145" value="1"/>
    <glyphgroup name="uni0146" value="1"/>
    <glyphgroup name="uni0156" value="1"/>
    <glyphgroup name="uni0157" value="1"/>
    <glyphgroup name="uni015E" value="1"/>
    <glyphgroup name="uni015F" value="1"/>
    <glyphgroup name="uni0162" value="1"/>
    <glyphgroup name="uni0163" value="1"/>
    <glyphgroup name="uni018F" value="1"/>
    <glyphgroup name="uni01CD" value="1"/>
    <glyphgroup name="uni01CE" value="1"/>
    <glyphgroup name="uni01CF" value="1"/>
    <glyphgroup name="uni01D0" value="1"/>
    <glyphgroup name="uni01D1" value="1"/>
    <glyphgroup name="uni01D2" value="1"/>
    <glyphgroup name="uni01D3" value="1"/>
    <glyphgroup name="uni01D4" value="1"/>
    <glyphgroup name="uni01D5" value="1"/>
    <glyphgroup name="uni01D6" value="1"/>
    <glyphgroup name="uni01D7" value="1"/>
    <glyphgroup name="uni01D8" value="1"/>
    <glyphgroup name="uni01D9" value="1"/>
    <glyphgroup name="uni01DA" value="1"/>
    <glyphgroup name="uni01DB" value="1"/>
    <glyphgroup name="uni01DC" value="1"/>
    <glyphgroup name="uni01EA" value="1"/>
    <glyphgroup name="uni01EB" value="1"/>
    <glyphgroup name="uni01F0" value="1"/>
    <glyphgroup name="uni01F8" value="1"/>
    <glyphgroup name="uni01F9" value="1"/>
    <glyphgroup name="uni0218" value="1"/>
    <glyphgroup name="uni0219" value="1"/>
    <glyphgroup name="uni021A" value="1"/>
    <glyphgroup name="uni021B" value="1"/>
    <glyphgroup name="uni0226" value="1"/>
    <glyphgroup name="uni0227" value="1"/>
    <glyphgroup name="uni022E" value="1"/>
    <glyphgroup name="uni022F" value="1"/>
    <glyphgroup name="uni0232" value="1"/>
    <glyphgroup name="uni0233" value="1"/>
    <glyphgroup name="uni0237" value="1"/>
    <glyphgroup name="uni0259" value="1"/>
    <glyphgroup name="uni02B9" value="1"/>
    <glyphgroup name="uni02BA" value="1"/>
    <glyphgroup name="uni02BB" value="1"/>
    <glyphgroup name="uni02BC" value="1"/>
    <glyphgroup name="uni02BE" value="1"/>
    <glyphgroup name="uni02BF" value="1"/>
    <glyphgroup name="uni02C60300" value="1"/>
    <glyphgroup name="uni02C60300.cap" value="1"/>
    <glyphgroup name="uni02C60301" value="1"/>
    <glyphgroup name="uni02C60301.cap" value="1"/>
    <glyphgroup name="uni02C60303" value="1"/>
    <glyphgroup name="uni02C60303.cap" value="1"/>
    <glyphgroup name="uni02C60309" value="1"/>
    <glyphgroup name="uni02C60309.cap" value="1"/>
    <glyphgroup name="uni02C8" value="1"/>
    <glyphgroup name="uni02CC" value="1"/>
    <glyphgroup name="uni02CD" value="1"/>
    <glyphgroup name="uni02D80300" value="1"/>
    <glyphgroup name="uni02D80300.cap" value="1"/>
    <glyphgroup name="uni02D80301" value="1"/>
    <glyphgroup name="uni02D80301.cap" value="1"/>
    <glyphgroup name="uni02D80303" value="1"/>
    <glyphgroup name="uni02D80303.cap" value="1"/>
    <glyphgroup name="uni02D80309" value="1"/>
    <glyphgroup name="uni02D80309.cap" value="1"/>
    <glyphgroup name="uni0300" value="1"/>
    <glyphgroup name="uni0300.cap" value="1"/>
    <glyphgroup name="uni0301" value="1"/>
    <glyphgroup name="uni0301.cap" value="1"/>
    <glyphgroup name="uni0302" value="1"/>
    <glyphgroup name="uni0302.cap" value="1"/>
    <glyphgroup name="uni0303" value="1"/>
    <glyphgroup name="uni0303.cap" value="1"/>
    <glyphgroup name="uni0304" value="1"/>
    <glyphgroup name="uni0304.cap" value="1"/>
    <glyphgroup name="uni0306" value="1"/>
    <glyphgroup name="uni0306.cap" value="1"/>
    <glyphgroup name="uni0307" value="1"/>
    <glyphgroup name="uni0307.cap" value="1"/>
    <glyphgroup name="uni0308" value="1"/>
    <glyphgroup name="uni0308.cap" value="1"/>
    <glyphgroup name="uni0309" value="1"/>
    <glyphgroup name="uni0309.cap" value="1"/>
    <glyphgroup name="uni030A" value="1"/>
    <glyphgroup name="uni030A.cap" value="1"/>
    <glyphgroup name="uni030B" value="1"/>
    <glyphgroup name="uni030B.cap" value="1"/>
    <glyphgroup name="uni030C" value="1"/>
    <glyphgroup name="uni030C.cap" value="1"/>
    <glyphgroup name="uni0312" value="1"/>
    <glyphgroup name="uni0315" value="1"/>
    <glyphgroup name="uni0323" value="1"/>
    <glyphgroup name="uni0324" value="1"/>
    <glyphgroup name="uni0326" value="1"/>
    <glyphgroup name="uni0327" value="1"/>
    <glyphgroup name="uni0328" value="1"/>
    <glyphgroup name="uni032D" value="1"/>
    <glyphgroup name="uni032E" value="1"/>
    <glyphgroup name="uni0331" value="1"/>
    <glyphgroup name="uni0E3F" value="1"/>
    <glyphgroup name="uni1E06" value="1"/>
    <glyphgroup name="uni1E07" value="1"/>
    <glyphgroup name="uni1E0C" value="1"/>
    <glyphgroup name="uni1E0D" value="1"/>
    <glyphgroup name="uni1E0E" value="1"/>
    <glyphgroup name="uni1E0F" value="1"/>
    <glyphgroup name="uni1E12" value="1"/>
    <glyphgroup name="uni1E13" value="1"/>
    <glyphgroup name="uni1E20" value="1"/>
    <glyphgroup name="uni1E21" value="1"/>
    <glyphgroup name="uni1E24" value="1"/>
    <glyphgroup name="uni1E25" value="1"/>
    <glyphgroup name="uni1E28" value="1"/>
    <glyphgroup name="uni1E29" value="1"/>
    <glyphgroup name="uni1E2A" value="1"/>
    <glyphgroup name="uni1E2B" value="1"/>
    <glyphgroup name="uni1E32" value="1"/>
    <glyphgroup name="uni1E33" value="1"/>
    <glyphgroup name="uni1E34" value="1"/>
    <glyphgroup name="uni1E35" value="1"/>
    <glyphgroup name="uni1E36" value="1"/>
    <glyphgroup name="uni1E37" value="1"/>
    <glyphgroup name="uni1E38" value="1"/>
    <glyphgroup name="uni1E39" value="1"/>
    <glyphgroup name="uni1E3A" value="1"/>
    <glyphgroup name="uni1E3B" value="1"/>
    <glyphgroup name="uni1E3C" value="1"/>
    <glyphgroup name="uni1E3D" value="1"/>
    <glyphgroup name="uni1E3E" value="1"/>
    <glyphgroup name="uni1E3F" value="1"/>
    <glyphgroup name="uni1E40" value="1"/>
    <glyphgroup name="uni1E41" value="1"/>
    <glyphgroup name="uni1E42" value="1"/>
    <glyphgroup name="uni1E43" value="1"/>
    <glyphgroup name="uni1E44" value="1"/>
    <glyphgroup name="uni1E45" value="1"/>
    <glyphgroup name="uni1E46" value="1"/>
    <glyphgroup name="uni1E47" value="1"/>
    <glyphgroup name="uni1E48" value="1"/>
    <glyphgroup name="uni1E49" value="1"/>
    <glyphgroup name="uni1E4A" value="1"/>
    <glyphgroup name="uni1E4B" value="1"/>
    <glyphgroup name="uni1E58" value="1"/>
    <glyphgroup name="uni1E59" value="1"/>
    <glyphgroup name="uni1E5A" value="1"/>
    <glyphgroup name="uni1E5B" value="1"/>
    <glyphgroup name="uni1E5C" value="1"/>
    <glyphgroup name="uni1E5D" value="1"/>
    <glyphgroup name="uni1E5E" value="1"/>
    <glyphgroup name="uni1E5F" value="1"/>
    <glyphgroup name="uni1E62" value="1"/>
    <glyphgroup name="uni1E63" value="1"/>
    <glyphgroup name="uni1E6C" value="1"/>
    <glyphgroup name="uni1E6D" value="1"/>
    <glyphgroup name="uni1E6E" value="1"/>
    <glyphgroup name="uni1E6F" value="1"/>
    <glyphgroup name="uni1E70" value="1"/>
    <glyphgroup name="uni1E71" value="1"/>
    <glyphgroup name="uni1E7E" value="1"/>
    <glyphgroup name="uni1E7F" value="1"/>
    <glyphgroup name="uni1E8C" value="1"/>
    <glyphgroup name="uni1E8D" value="1"/>
    <glyphgroup name="uni1E8E" value="1"/>
    <glyphgroup name="uni1E8F" value="1"/>
    <glyphgroup name="uni1E90" value="1"/>
    <glyphgroup name="uni1E91" value="1"/>
    <glyphgroup name="uni1E92" value="1"/>
    <glyphgroup name="uni1E93" value="1"/>
    <glyphgroup name="uni1E94" value="1"/>
    <glyphgroup name="uni1E95" value="1"/>
    <glyphgroup name="uni1E96" value="1"/>
    <glyphgroup name="uni1E9E" value="1"/>
    <glyphgroup name="uni1EA0" value="1"/>
    <glyphgroup name="uni1EA1" value="1"/>
    <glyphgroup name="uni1EA2" value="1"/>
    <glyphgroup name="uni1EA3" value="1"/>
    <glyphgroup name="uni1EA4" value="1"/>
    <glyphgroup name="uni1EA5" value="1"/>
    <glyphgroup name="uni1EA6" value="1"/>
    <glyphgroup name="uni1EA7" value="1"/>
    <glyphgroup name="uni1EA8" value="1"/>
    <glyphgroup name="uni1EA9" value="1"/>
    <glyphgroup name="uni1EAA" value="1"/>
    <glyphgroup name="uni1EAB" value="1"/>
    <glyphgroup name="uni1EAC" value="1"/>
    <glyphgroup name="uni1EAD" value="1"/>
    <glyphgroup name="uni1EAE" value="1"/>
    <glyphgroup name="uni1EAF" value="1"/>
    <glyphgroup name="uni1EB0" value="1"/>
    <glyphgroup name="uni1EB1" value="1"/>
    <glyphgroup name="uni1EB2" value="1"/>
    <glyphgroup name="uni1EB3" value="1"/>
    <glyphgroup name="uni1EB4" value="1"/>
    <glyphgroup name="uni1EB5" value="1"/>
    <glyphgroup name="uni1EB6" value="1"/>
    <glyphgroup name="uni1EB7" value="1"/>
    <glyphgroup name="uni1EB8" value="1"/>
    <glyphgroup name="uni1EB9" value="1"/>
    <glyphgroup name="uni1EBA" value="1"/>
    <glyphgroup name="uni1EBB" value="1"/>
    <glyphgroup name="uni1EBC" value="1"/>
    <glyphgroup name="uni1EBD" value="1"/>
    <glyphgroup name="uni1EBE" value="1"/>
    <glyphgroup name="uni1EBF" value="1"/>
    <glyphgroup name="uni1EC0" value="1"/>
    <glyphgroup name="uni1EC1" value="1"/>
    <glyphgroup name="uni1EC2" value="1"/>
    <glyphgroup name="uni1EC3" value="1"/>
    <glyphgroup name="uni1EC4" value="1"/>
    <glyphgroup name="uni1EC5" value="1"/>
    <glyphgroup name="uni1EC6" value="1"/>
    <glyphgroup name="uni1EC7" value="1"/>
    <glyphgroup name="uni1EC8" value="1"/>
    <glyphgroup name="uni1EC9" value="1"/>
    <glyphgroup name="uni1ECA" value="1"/>
    <glyphgroup name="uni1ECB" value="1"/>
    <glyphgroup name="uni1ECC" value="1"/>
    <glyphgroup name="uni1ECD" value="1"/>
    <glyphgroup name="uni1ECE" value="1"/>
    <glyphgroup name="uni1ECF" value="1"/>
    <glyphgroup name="uni1ED0" value="1"/>
    <glyphgroup name="uni1ED1" value="1"/>
    <glyphgroup name="uni1ED2" value="1"/>
    <glyphgroup name="uni1ED3" value="1"/>
    <glyphgroup name="uni1ED4" value="1"/>
    <glyphgroup name="uni1ED5" value="1"/>
    <glyphgroup name="uni1ED6" value="1"/>
    <glyphgroup name="uni1ED7" value="1"/>
    <glyphgroup name="uni1ED8" value="1"/>
    <glyphgroup name="uni1ED9" value="1"/>
    <glyphgroup name="uni1EDA" value="1"/>
    <glyphgroup name="uni1EDB" value="1"/>
    <glyphgroup name="uni1EDC" value="1"/>
    <glyphgroup name="uni1EDD" value="1"/>
    <glyphgroup name="uni1EDE" value="1"/>
    <glyphgroup name="uni1EDF" value="1"/>
    <glyphgroup name="uni1EE0" value="1"/>
    <glyphgroup name="uni1EE1" value="1"/>
    <glyphgroup name="uni1EE2" value="1"/>
    <glyphgroup name="uni1EE3" value="1"/>
    <glyphgroup name="uni1EE4" value="1"/>
    <glyphgroup name="uni1EE5" value="1"/>
    <glyphgroup name="uni1EE6" value="1"/>
    <glyphgroup name="uni1EE7" value="1"/>
    <glyphgroup name="uni1EE8" value="1"/>
    <glyphgroup name="uni1EE9" value="1"/>
    <glyphgroup name="uni1EEA" value="1"/>
    <glyphgroup name="uni1EEB" value="1"/>
    <glyphgroup name="uni1EEC" value="1"/>
    <glyphgroup name="uni1EED" value="1"/>
    <glyphgroup name="uni1EEE" value="1"/>
    <glyphgroup name="uni1EEF" value="1"/>
    <glyphgroup name="uni1EF0" value="1"/>
    <glyphgroup name="uni1EF1" value="1"/>
    <glyphgroup name="uni1EF4" value="1"/>
    <glyphgroup name="uni1EF5" value="1"/>
    <glyphgroup name="uni1EF6" value="1"/>
    <glyphgroup name="uni1EF7" value="1"/>
    <glyphgroup name="uni1EF8" value="1"/>
    <glyphgroup name="uni1EF9" value="1"/>
    <glyphgroup name="uni2011" value="1"/>
    <glyphgroup name="uni2015" value="1"/>
    <glyphgroup name="uni2025" value="1"/>
    <glyphgroup name="uni20A6" value="1"/>
    <glyphgroup name="uni20A9" value="1"/>
    <glyphgroup name="uni20B1" value="1"/>
    <glyphgroup name="uni20B9" value="1"/>
    <glyphgroup name="uni20BA" value="1"/>
    <glyphgroup name="uni20BD" value="1"/>
    <glyphgroup name="uni2117" value="1"/>
    <glyphgroup name="uni2120" value="1"/>
    <glyphgroup name="uniA788" value="1"/>
    <glyphgroup name="uogonek" value="1"/>
    <glyphgroup name="uring" value="1"/>
    <glyphgroup name="utilde" value="1"/>
    <glyphgroup name="v" value="1"/>
    <glyphgroup name="w" value="1"/>
    <glyphgroup name="wacute" value="1"/>
    <glyphgroup name="wcircumflex" value="1"/>
    <glyphgroup name="wdieresis" value="1"/>
    <glyphgroup name="wgrave" value="1"/>
    <glyphgroup name="x" value="1"/>
    <glyphgroup name="y" value="1"/>
    <glyphgroup name="yacute" value="1"/>
    <glyphgroup name="ycircumflex" value="1"/>
    <glyphgroup name="ydieresis" value="1"/>
    <glyphgroup name="yen" value="1"/>
    <glyphgroup name="ygrave" value="1"/>
    <glyphgroup name="z" value="1"/>
    <glyphgroup name="zacute" value="1"/>
    <glyphgroup name="zcaron" value="1"/>
    <glyphgroup name="zdotaccent" value="1"/>
    <glyphgroup name="zero" value="1"/>
    <glyphgroup name="zero.den" value="1"/>
    <glyphgroup name="zero.inf" value="1"/>
    <glyphgroup name="zero.num" value="1"/>
    <glyphgroup name="zero.sup" value="1"/>
  </TSI5>

  <DSIG>
    <!-- note that the Digital Signature will be invalid after recompilation! -->
    <tableHeader flag="0x1" numSigs="1" version="1"/>
    <SignatureRecord format="1">
-----BEGIN PKCS7-----
0000000100000000
-----END PKCS7-----
    </SignatureRecord>
  </DSIG>

</ttFont>
